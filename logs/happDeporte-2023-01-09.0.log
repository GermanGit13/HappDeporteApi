2023-01-09 10:11:10,312 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:11:10,318 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 11040 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:11:10,320 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:11:10,321 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:11:12,006 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:11:12,008 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:11:12,008 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:11:12,158 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:11:12,285 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:11:12,765 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:11:12,769 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:11:12,770 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:11:12,770 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:11:12,771 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:11:12,771 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:11:12,772 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:11:12,773 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:11:12,773 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:11:12,774 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:11:12,775 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:11:12,775 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:11:12,776 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:11:12,777 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:11:12,777 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:11:12,778 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:11:12,778 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:11:12,778 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:11:12,779 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:11:12,779 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:11:12,780 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:11:12,780 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:11:12,781 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:11:12,782 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:11:12,783 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:11:12,784 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:11:12,785 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:11:12,786 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:11:12,786 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:11:12,786 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:11:12,787 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:11:12,787 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:11:12,787 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:11:12,788 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:11:12,788 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:11:12,789 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:11:12,789 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:11:13,123 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,125 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:11:13,232 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:11:13,234 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,235 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,236 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,237 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,238 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,240 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,241 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,242 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,243 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:11:13,243 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:11:14,546 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:11:15,022 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 10:11:15,026 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 10:11:15,029 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 10:11:15,031 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 10:11:15,034 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/{id}]}: getUserId(long)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
2023-01-09 10:11:15,038 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 10:11:15,056 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 10:11:15,081 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 10:11:15,313 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 10:11:15,318 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
2023-01-09 10:11:15,324 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 10:11:15,329 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 10:11:15,334 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 10:11:15,335 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 10:11:15,336 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 10:11:15,410 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 10:11:15,452 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.563 seconds (JVM running for 6.149)
2023-01-09 10:11:43,244 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:11:43,245 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:12:13,248 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:12:13,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:12:43,265 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:12:43,265 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:13:13,280 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:13:13,281 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:13:43,292 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:13:43,293 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:14:13,306 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:14:13,307 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:14:31,968 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 10:14:42,098 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsers
2023-01-09 10:14:42,246 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsers
2023-01-09 10:14:43,320 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:14:43,320 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:15:13,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:15:13,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:15:43,340 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:15:43,341 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:16:08,455 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 10:16:08,455 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:16:08,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,461 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,461 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,462 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,462 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:16:08,463 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:16:08,463 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 10:16:23,516 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:16:23,520 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 30176 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:16:23,521 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:16:23,522 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:16:24,882 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:16:24,883 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:16:24,883 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:16:25,002 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:16:25,124 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:16:25,507 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:16:25,510 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:16:25,510 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:16:25,511 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:16:25,511 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:16:25,512 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:16:25,513 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:16:25,513 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:16:25,514 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:16:25,515 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:16:25,516 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:16:25,517 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:16:25,518 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:16:25,519 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:16:25,519 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:16:25,520 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:16:25,520 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:16:25,521 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:16:25,521 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:16:25,522 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:16:25,523 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:16:25,524 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:16:25,524 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:16:25,525 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:16:25,525 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:16:25,525 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:16:25,526 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:16:25,526 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:16:25,526 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:16:25,527 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:16:25,527 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:16:25,527 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:16:25,528 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:16:25,528 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:16:25,529 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:16:25,529 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:16:25,530 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:16:25,763 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,765 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:16:25,872 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:16:25,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,876 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,877 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,878 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,879 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,881 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,882 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:16:25,882 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:16:27,031 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:16:27,476 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{GET [/clothes/{id}]}: getClothesId(long)
	{DELETE [/clothes/{id}]}: deleteById(long)
	{GET [/clothes]}: getClothes()
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
2023-01-09 10:16:27,479 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 10:16:27,482 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{POST [/players]}: addPlayer(Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 10:16:27,484 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 10:16:27,486 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 10:16:27,490 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 10:16:27,506 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 10:16:27,527 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 10:16:27,736 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 10:16:27,740 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 10:16:27,745 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 10:16:27,751 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 10:16:27,755 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 10:16:27,756 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 10:16:27,757 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 10:16:27,819 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 10:16:27,852 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.684 seconds (JVM running for 5.148)
2023-01-09 10:16:55,874 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:16:55,875 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:17:22,130 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 10:17:25,884 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:17:25,884 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:17:55,887 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:17:55,888 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:18:25,896 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:18:25,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:18:55,899 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:18:55,900 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:19:25,903 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:19:25,904 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:19:55,913 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:19:55,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:20:25,929 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:20:25,930 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:20:55,936 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:20:55,936 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:21:12,948 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin User Username Variable
2023-01-09 10:21:13,083 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Fin User Username Variable
2023-01-09 10:21:25,939 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:21:25,940 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:21:55,942 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:21:55,943 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:21:59,829 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Begin User Username Variable
2023-01-09 10:21:59,830 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Fin User Username Variable
2023-01-09 10:22:25,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:22:25,953 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:22:31,656 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 10:22:31,657 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:22:31,659 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,659 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,660 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,660 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,661 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,661 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,661 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:22:31,663 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:22:31,663 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 10:22:46,216 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:22:46,224 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 32700 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:22:46,225 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:22:46,226 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:22:47,672 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:22:47,673 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:22:47,674 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:22:47,813 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:22:47,927 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:22:48,313 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:22:48,316 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:22:48,316 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:22:48,317 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:22:48,318 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:22:48,318 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:22:48,319 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:22:48,319 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:22:48,320 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:22:48,320 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:22:48,321 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:22:48,322 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:22:48,323 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:22:48,323 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:22:48,324 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:22:48,324 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:22:48,324 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:22:48,325 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:22:48,325 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:22:48,326 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:22:48,326 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:22:48,327 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:22:48,328 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:22:48,328 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:22:48,329 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:22:48,329 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:22:48,330 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:22:48,330 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:22:48,331 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:22:48,331 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:22:48,331 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:22:48,332 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:22:48,332 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:22:48,333 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:22:48,334 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:22:48,334 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:22:48,335 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:22:48,604 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,606 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:22:48,718 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:22:48,720 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,721 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,723 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,725 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,727 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,729 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,730 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,731 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,733 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:22:48,734 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:22:49,992 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:22:50,429 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 10:22:50,432 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 10:22:50,434 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 10:22:50,436 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 10:22:50,438 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getUsername(String)
2023-01-09 10:22:50,441 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 10:22:50,457 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 10:22:50,478 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 10:22:50,674 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 10:22:50,679 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 10:22:50,684 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 10:22:50,689 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 10:22:50,692 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 10:22:50,693 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 10:22:50,695 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 10:22:50,757 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 10:22:50,791 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.946 seconds (JVM running for 5.498)
2023-01-09 10:22:59,055 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 10:22:59,087 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Username
2023-01-09 10:22:59,206 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Fin Username
2023-01-09 10:23:18,728 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:23:18,729 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:23:48,742 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:23:48,743 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:24:18,751 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:24:18,752 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:24:48,761 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:24:48,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:25:18,769 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:25:18,770 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:25:48,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:25:48,777 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:26:18,780 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:26:18,780 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:26:48,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:26:48,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:26:49,377 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 10:26:49,378 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:26:49,380 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,380 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,380 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,381 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,382 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,382 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,382 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,383 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,383 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,384 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:26:49,384 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:26:49,385 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 10:27:04,236 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:27:04,243 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 37304 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:27:04,244 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:27:04,245 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:27:05,626 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:27:05,627 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:27:05,627 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:27:05,756 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:27:05,886 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:27:06,301 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:27:06,304 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:27:06,305 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:27:06,306 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:27:06,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:27:06,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:27:06,308 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:27:06,309 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:27:06,310 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:27:06,310 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:27:06,311 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:27:06,313 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:27:06,314 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:27:06,315 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:27:06,315 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:27:06,316 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:27:06,316 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:27:06,317 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:27:06,317 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:27:06,318 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:27:06,318 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:27:06,319 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:27:06,319 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:27:06,320 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:27:06,320 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:27:06,320 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:27:06,321 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:27:06,322 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:27:06,323 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:27:06,323 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:27:06,324 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:27:06,324 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:27:06,325 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:27:06,325 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:27:06,325 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:27:06,326 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:27:06,326 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:27:06,607 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,609 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:27:06,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:27:06,715 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,716 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,717 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,719 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,719 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,721 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,722 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,724 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,725 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:27:06,725 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:27:07,939 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:27:08,398 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
	{DELETE [/clothes/{id}]}: deleteById(long)
2023-01-09 10:27:08,402 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{GET [/matches/{id}]}: findById(long)
2023-01-09 10:27:08,405 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players]}: addPlayer(Player)
	{GET [/players]}: getPlayers()
2023-01-09 10:27:08,408 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{GET [/teams/{id}]}: findById(long)
2023-01-09 10:27:08,410 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getUsername(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRol(String)
2023-01-09 10:27:08,412 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRol(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
2023-01-09 10:27:08,417 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 10:27:08,417 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:27:08,419 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,420 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,420 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,421 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,421 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,422 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,422 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,423 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,423 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,423 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:27:08,558 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:27:08,559 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 10:27:08,561 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 10:27:08,604 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRol(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRol(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 10:34:07,484 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:34:07,489 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 7796 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:34:07,490 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:34:07,491 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:34:08,875 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:34:08,876 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:34:08,877 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:34:08,995 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:34:09,102 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:34:09,476 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:34:09,478 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:34:09,479 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:34:09,479 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:34:09,480 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:34:09,480 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:34:09,481 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:34:09,482 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:34:09,483 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:34:09,484 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:34:09,485 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:34:09,485 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:34:09,485 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:34:09,486 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:34:09,486 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:34:09,487 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:34:09,487 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:34:09,488 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:34:09,488 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:34:09,488 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:34:09,489 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:34:09,489 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:34:09,490 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:34:09,490 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:34:09,491 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:34:09,491 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:34:09,491 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:34:09,492 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:34:09,492 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:34:09,493 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:34:09,493 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:34:09,493 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:34:09,494 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:34:09,497 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:34:09,498 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:34:09,498 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:34:09,499 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:34:09,751 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,752 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:34:09,857 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:34:09,859 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,861 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,863 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,866 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,868 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,869 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,871 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,874 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:34:09,875 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:34:11,051 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:34:11,473 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 10:34:11,477 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 10:34:11,480 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players]}: addPlayer(Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
2023-01-09 10:34:11,482 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 10:34:11,485 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRol(String)
	{GET [/user]}: getUsername(String)
2023-01-09 10:34:11,486 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getUsername(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
2023-01-09 10:34:11,491 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 10:34:11,492 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:34:11,493 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,494 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,494 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,495 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,495 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,495 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,496 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,496 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,496 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,497 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:34:11,577 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:34:11,578 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 10:34:11,580 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 10:34:11,607 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getUsername(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getUsername(String)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 10:40:15,825 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:40:15,832 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 9852 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:40:15,833 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:40:15,834 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:40:17,243 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:40:17,244 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:40:17,245 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:40:17,368 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:40:17,485 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:40:17,890 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:40:17,893 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:40:17,893 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:40:17,894 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:40:17,894 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:40:17,895 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:40:17,895 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:40:17,896 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:40:17,896 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:40:17,896 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:40:17,897 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:40:17,898 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:40:17,899 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:40:17,899 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:40:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:40:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:40:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:40:17,901 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:40:17,901 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:40:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:40:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:40:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:40:17,903 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:40:17,903 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:40:17,904 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:40:17,904 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:40:17,904 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:40:17,905 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:40:17,905 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:40:17,906 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:40:17,906 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:40:17,906 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:40:17,907 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:40:17,907 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:40:17,907 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:40:17,908 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:40:17,908 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:40:18,153 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,154 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:40:18,263 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:40:18,264 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,266 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,267 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,267 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,268 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,269 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,270 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,271 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,272 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:40:18,272 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:40:19,447 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:40:19,896 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 10:40:19,899 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 10:40:19,901 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 10:40:19,903 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 10:40:19,905 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getUsername(String)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 10:40:19,908 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 10:40:19,925 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 10:40:19,950 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 10:40:20,153 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 10:40:20,158 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 10:40:20,163 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 10:40:20,168 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 10:40:20,172 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 10:40:20,173 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 10:40:20,174 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 10:40:20,237 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 10:40:20,269 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.804 seconds (JVM running for 5.296)
2023-01-09 10:40:48,271 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:40:48,272 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:40:55,903 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 10:40:55,940 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin User Username Variable
2023-01-09 10:40:56,056 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Fin User Username Variable
2023-01-09 10:41:18,278 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:41:18,279 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:41:48,283 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:41:48,284 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:42:18,290 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:42:18,291 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:42:34,914 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin Username
2023-01-09 10:42:34,916 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Fin Username
2023-01-09 10:42:48,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:42:48,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:43:18,319 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:43:18,319 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:43:48,326 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:43:48,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:44:09,604 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 10:44:09,605 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:44:09,609 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,610 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,611 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,612 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,614 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,616 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,617 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,622 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,623 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,624 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 10:44:09,624 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 10:44:09,625 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 10:44:23,846 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 10:44:23,857 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 34608 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 10:44:23,858 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 10:44:23,859 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 10:44:25,305 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 10:44:25,306 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 10:44:25,307 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 10:44:25,434 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 10:44:25,569 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 10:44:25,949 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 10:44:25,952 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 10:44:25,952 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 10:44:25,952 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 10:44:25,953 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 10:44:25,953 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 10:44:25,954 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 10:44:25,954 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 10:44:25,955 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 10:44:25,955 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 10:44:25,956 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 10:44:25,957 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 10:44:25,958 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 10:44:25,958 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 10:44:25,958 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 10:44:25,959 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 10:44:25,959 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 10:44:25,960 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 10:44:25,960 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 10:44:25,961 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 10:44:25,961 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 10:44:25,962 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 10:44:25,962 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 10:44:25,962 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 10:44:25,963 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 10:44:25,963 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 10:44:25,964 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 10:44:25,965 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 10:44:25,965 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 10:44:25,966 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 10:44:25,966 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 10:44:25,967 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 10:44:25,967 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 10:44:25,968 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 10:44:25,968 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 10:44:25,968 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 10:44:25,969 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 10:44:26,223 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,225 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 10:44:26,338 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 10:44:26,339 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,340 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,341 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,342 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,343 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,344 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,345 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,346 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,347 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 10:44:26,348 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:44:27,589 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 10:44:28,058 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 10:44:28,062 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 10:44:28,064 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 10:44:28,067 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 10:44:28,069 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRol(String)
2023-01-09 10:44:28,073 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 10:44:28,090 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 10:44:28,114 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 10:44:28,326 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 10:44:28,332 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 10:44:28,337 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 10:44:28,343 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 10:44:28,347 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 10:44:28,349 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 10:44:28,350 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 10:44:28,423 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 10:44:28,459 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.993 seconds (JVM running for 5.485)
2023-01-09 10:44:48,697 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 10:44:48,736 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Rol
2023-01-09 10:44:48,868 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Fin Rol
2023-01-09 10:44:56,340 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:44:56,341 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:45:26,349 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:45:26,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:45:56,362 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:45:56,363 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:46:26,377 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:46:26,378 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:46:56,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:46:56,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:47:26,392 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:47:26,392 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:47:56,394 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:47:56,395 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:48:26,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:48:26,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:48:56,404 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:48:56,405 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:49:26,408 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:49:26,409 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:49:56,424 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:49:56,425 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:50:26,440 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:50:26,441 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:50:56,444 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:50:56,444 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:51:26,451 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:51:26,452 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:51:56,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:51:56,467 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:52:26,476 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:52:26,477 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:52:56,481 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:52:56,482 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:53:26,485 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:53:26,486 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:53:56,492 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:53:56,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:54:26,498 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:54:26,499 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:54:56,502 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:54:56,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:55:26,506 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:55:26,507 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:55:56,514 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:55:56,515 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:56:26,524 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:56:26,525 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:56:56,527 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:56:56,528 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:57:26,545 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:57:26,546 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:57:56,556 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:57:56,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:58:26,572 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:58:26,573 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:58:56,584 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:58:56,585 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:59:26,590 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:59:26,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 10:59:56,602 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 10:59:56,603 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:00:26,614 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:00:26,615 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:00:56,627 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:00:56,628 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:01:26,641 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:01:26,641 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:01:56,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:01:56,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:02:26,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:02:26,671 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:02:56,682 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:02:56,682 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:03:26,688 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:03:26,689 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:03:56,702 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:03:56,703 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:04:26,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:04:26,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:04:56,728 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:04:56,729 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:05:26,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:05:26,741 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:05:56,757 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:05:56,758 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:06:26,765 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:06:26,766 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:06:56,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:06:56,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:07:26,779 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:07:26,780 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:07:56,794 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:07:56,794 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:08:26,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:08:26,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:08:56,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:08:56,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:09:26,826 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:09:26,827 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:09:56,838 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:09:56,838 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:10:26,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:10:26,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:10:56,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:10:56,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:11:26,852 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:11:26,852 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:11:56,853 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:11:56,854 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:12:26,864 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:12:26,864 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:12:56,880 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:12:56,881 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:13:26,894 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:13:26,895 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:13:56,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:13:56,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:13:58,344 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:13:58,345 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:07,303 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:07,305 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:13,724 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:13,725 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:13,817 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:13,818 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:13,818 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:14:20,609 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:20,611 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:24,670 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:24,670 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:24,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:14:25,261 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:25,261 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:25,684 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:25,684 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:25,685 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:14:25,777 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:25,777 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:25,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:14:26,166 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 11:14:26,167 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:14:26,905 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:14:26,905 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:14:56,916 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:14:56,917 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:15:26,926 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:15:26,926 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:15:56,937 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:15:56,937 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:16:26,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:16:26,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:16:56,962 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:16:56,963 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:17:26,975 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:17:26,976 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:17:56,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:17:56,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:18:26,994 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:18:26,994 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:18:56,999 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:18:56,999 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:19:27,008 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:19:27,009 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:19:57,013 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:19:57,014 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:20:27,015 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:20:27,016 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:20:57,028 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:20:57,029 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:21:27,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:21:27,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:21:57,048 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:21:57,048 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:22:27,056 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:22:27,056 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:22:57,058 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:22:57,058 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:23:27,069 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:23:27,070 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:23:57,076 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:23:57,077 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:24:27,084 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:24:27,085 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:24:57,089 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:24:57,089 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:25:27,103 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:25:27,103 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:25:57,111 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:25:57,111 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:26:27,121 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:26:27,122 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:26:57,124 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:26:57,127 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:27:27,132 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:27:27,133 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:27:57,135 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:27:57,136 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:28:27,137 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:28:27,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:28:57,152 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:28:57,153 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:29:27,169 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:29:27,169 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:29:57,178 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:29:57,179 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:29:58,194 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 11:29:58,195 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:29:58,197 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,197 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,198 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,198 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,198 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,200 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,200 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:29:58,200 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 11:29:58,201 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 11:30:12,637 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 11:30:12,643 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 31740 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 11:30:12,645 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 11:30:12,646 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 11:30:14,271 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 11:30:14,272 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 11:30:14,273 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 11:30:14,401 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 11:30:14,516 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 11:30:14,907 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 11:30:14,910 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 11:30:14,910 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 11:30:14,911 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 11:30:14,911 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 11:30:14,912 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 11:30:14,912 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 11:30:14,913 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 11:30:14,914 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 11:30:14,916 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 11:30:14,917 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 11:30:14,918 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 11:30:14,919 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 11:30:14,920 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 11:30:14,920 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 11:30:14,920 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 11:30:14,921 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 11:30:14,921 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 11:30:14,922 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 11:30:14,922 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 11:30:14,922 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 11:30:14,923 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 11:30:14,923 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 11:30:14,924 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 11:30:14,925 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 11:30:14,925 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 11:30:14,925 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 11:30:14,926 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 11:30:14,926 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 11:30:14,927 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 11:30:14,927 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 11:30:14,927 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 11:30:14,928 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 11:30:14,928 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 11:30:14,929 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 11:30:14,929 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 11:30:14,930 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 11:30:15,177 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,179 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 11:30:15,288 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 11:30:15,290 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,291 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,293 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,294 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,297 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,299 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,301 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,302 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,303 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:30:15,304 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:30:16,566 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 11:30:17,019 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 11:30:17,023 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 11:30:17,025 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 11:30:17,027 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 11:30:17,030 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRol(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 11:30:17,031 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
2023-01-09 11:30:17,036 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 11:30:17,037 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:30:17,039 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,040 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,040 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,041 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,041 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,042 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,044 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:30:17,104 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 11:30:17,105 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 11:30:17,107 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 11:30:17,134 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getRol(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 11:31:18,306 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 11:31:18,312 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 36064 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 11:31:18,314 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 11:31:18,315 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 11:31:19,673 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 11:31:19,674 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 11:31:19,675 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 11:31:19,795 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 11:31:19,905 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 11:31:20,271 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 11:31:20,273 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 11:31:20,274 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 11:31:20,274 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 11:31:20,275 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 11:31:20,275 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 11:31:20,276 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 11:31:20,276 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 11:31:20,277 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 11:31:20,277 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 11:31:20,278 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 11:31:20,279 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 11:31:20,279 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 11:31:20,280 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 11:31:20,280 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 11:31:20,280 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 11:31:20,281 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 11:31:20,282 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 11:31:20,282 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 11:31:20,283 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 11:31:20,283 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 11:31:20,284 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 11:31:20,284 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 11:31:20,284 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 11:31:20,285 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 11:31:20,285 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 11:31:20,286 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 11:31:20,286 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 11:31:20,286 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 11:31:20,287 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 11:31:20,287 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 11:31:20,287 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 11:31:20,288 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 11:31:20,288 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 11:31:20,289 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 11:31:20,289 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 11:31:20,289 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 11:31:20,544 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,546 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 11:31:20,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 11:31:20,657 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,658 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,658 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,659 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,660 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,661 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,662 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,663 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,664 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:20,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:31:21,792 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 11:31:22,216 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 11:31:22,219 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 11:31:22,221 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{POST [/players]}: addPlayer(Player)
2023-01-09 11:31:22,223 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 11:31:22,225 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/user]}: getUsername(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 11:31:22,227 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
2023-01-09 11:31:22,231 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 11:31:22,232 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:31:22,233 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,234 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,234 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,235 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,235 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,236 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,236 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,236 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,237 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,237 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 11:31:22,330 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 11:31:22,331 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 11:31:22,334 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 11:31:22,360 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'userController' method 
com.svalero.happDeporte.controller.UserController#getRolAndCoach(String, boolean)
to {GET [/user]}: There is already 'userController' bean method
com.svalero.happDeporte.controller.UserController#getUsername(String) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 11:31:51,091 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 11:31:51,096 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 23500 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 11:31:51,098 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 11:31:51,099 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 11:31:52,470 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 11:31:52,471 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 11:31:52,471 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 11:31:52,590 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 11:31:52,699 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 11:31:53,057 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 11:31:53,060 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 11:31:53,060 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 11:31:53,061 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 11:31:53,061 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 11:31:53,062 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 11:31:53,062 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 11:31:53,063 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 11:31:53,063 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 11:31:53,064 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 11:31:53,065 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 11:31:53,065 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 11:31:53,066 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 11:31:53,066 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 11:31:53,066 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 11:31:53,067 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 11:31:53,067 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 11:31:53,068 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 11:31:53,068 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 11:31:53,069 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 11:31:53,069 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 11:31:53,069 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 11:31:53,070 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 11:31:53,070 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 11:31:53,071 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 11:31:53,071 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 11:31:53,071 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 11:31:53,072 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 11:31:53,074 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 11:31:53,074 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 11:31:53,075 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 11:31:53,075 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 11:31:53,075 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 11:31:53,076 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 11:31:53,076 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 11:31:53,076 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 11:31:53,077 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 11:31:53,318 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,320 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 11:31:53,436 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 11:31:53,438 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,439 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,440 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,441 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,443 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,444 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,445 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,446 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,447 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 11:31:53,448 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:31:54,622 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 11:31:55,045 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 11:31:55,049 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 11:31:55,051 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players]}: addPlayer(Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 11:31:55,053 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 11:31:55,055 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 11:31:55,059 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 11:31:55,076 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 11:31:55,098 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 11:31:55,311 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 11:31:55,317 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 11:31:55,322 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 11:31:55,328 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 11:31:55,332 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 11:31:55,334 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 11:31:55,335 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 11:31:55,396 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 11:31:55,429 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.673 seconds (JVM running for 5.143)
2023-01-09 11:32:23,450 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:32:23,451 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:32:53,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:32:53,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:33:23,477 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:33:23,477 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:33:53,492 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:33:53,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:34:23,508 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:34:23,509 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:34:53,510 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:34:53,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:35:09,193 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 11:35:09,226 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Rol and Coach
2023-01-09 11:35:09,366 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End Rol and Coach
2023-01-09 11:35:21,689 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin Rol and Coach
2023-01-09 11:35:21,690 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End Rol and Coach
2023-01-09 11:35:23,525 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:35:23,526 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:35:38,327 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin Rol and Coach
2023-01-09 11:35:38,328 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End Rol and Coach
2023-01-09 11:35:53,528 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:35:53,529 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:36:02,880 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.beans.propertyeditors.CustomBooleanEditor.setAsText(CustomBooleanEditor.java:154)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted
2023-01-09 11:36:08,051 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Begin Rol and Coach
2023-01-09 11:36:08,053 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] End Rol and Coach
2023-01-09 11:36:23,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:36:23,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:36:53,556 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:36:53,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:37:23,565 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:37:23,566 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:37:53,573 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:37:53,574 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:38:23,576 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:38:23,576 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:38:53,587 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:38:53,588 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:39:23,598 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:39:23,599 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:39:53,612 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:39:53,613 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:40:23,623 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:40:23,624 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:40:53,640 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:40:53,640 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:41:23,646 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:41:23,647 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:41:53,663 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:41:53,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:42:13,775 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Begin User Username Variable
2023-01-09 11:42:13,779 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Fin User Username Variable
2023-01-09 11:42:17,315 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin getUsersId
2023-01-09 11:42:17,337 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End getUsersId
2023-01-09 11:42:20,441 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Rol and Coach
2023-01-09 11:42:20,442 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End Rol and Coach
2023-01-09 11:42:23,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:42:23,666 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:42:24,348 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 11:42:24,360 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 11:42:53,671 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:42:53,672 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:43:23,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:43:23,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:43:53,684 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:43:53,685 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:44:23,690 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:44:23,691 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:44:53,698 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:44:53,699 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:45:12,735 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 11:45:12,738 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 11:45:23,707 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:45:23,708 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:45:53,716 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:45:53,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:46:23,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:46:23,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:46:53,731 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:46:53,731 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:47:23,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:47:23,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:47:53,756 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:47:53,756 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:48:23,771 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:48:23,771 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:48:53,778 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:48:53,779 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:49:23,781 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:49:23,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:49:53,785 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:49:53,786 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:50:23,802 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:50:23,802 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:50:53,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:50:53,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:51:23,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:51:23,822 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:51:53,831 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:51:53,832 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:52:23,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:52:23,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:52:53,854 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:52:53,854 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:53:23,858 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:53:23,858 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:53:53,874 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:53:53,874 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:54:23,877 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:54:23,878 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:54:53,885 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:54:53,886 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:55:23,893 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:55:23,893 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:55:53,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:55:53,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:56:23,900 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:56:23,901 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:56:53,913 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:56:53,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:57:23,915 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:57:23,915 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:57:53,930 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:57:53,930 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:58:23,944 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:58:23,944 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:58:53,958 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:58:53,958 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:59:23,965 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:59:23,966 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 11:59:53,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 11:59:53,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:00:23,979 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:00:23,979 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:00:53,995 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:00:53,996 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:01:22,513 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:22,514 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:24,011 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:01:24,011 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:01:30,944 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:30,945 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:31,779 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:31,780 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:31,890 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:31,890 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:35,355 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:35,355 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:36,072 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:36,073 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:46,975 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:46,976 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:48,183 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:48,183 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:48,184 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:01:50,667 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:50,668 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:50,668 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:01:51,764 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 12:01:51,764 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:01:51,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:01:54,019 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:01:54,020 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:02:24,028 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:02:24,029 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:02:54,073 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:02:54,088 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:03:24,104 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:03:24,105 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:03:54,113 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:03:54,113 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:04:24,130 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:04:24,131 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:04:54,135 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:04:54,135 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:05:24,151 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:05:24,151 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:05:54,152 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:05:54,152 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:06:06,454 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 12:06:06,455 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:06:06,456 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:06,460 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 12:06:06,462 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 12:06:21,361 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 12:06:21,368 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 34236 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 12:06:21,369 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 12:06:21,370 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 12:06:22,715 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 12:06:22,716 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 12:06:22,717 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 12:06:22,835 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 12:06:22,942 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 12:06:23,303 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 12:06:23,305 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 12:06:23,306 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 12:06:23,306 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 12:06:23,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 12:06:23,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 12:06:23,307 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 12:06:23,308 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 12:06:23,308 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 12:06:23,309 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 12:06:23,310 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 12:06:23,311 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 12:06:23,311 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 12:06:23,312 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 12:06:23,312 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 12:06:23,313 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 12:06:23,313 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 12:06:23,314 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 12:06:23,314 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 12:06:23,314 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 12:06:23,315 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 12:06:23,315 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 12:06:23,316 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 12:06:23,316 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 12:06:23,316 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 12:06:23,317 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 12:06:23,317 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 12:06:23,317 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 12:06:23,318 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 12:06:23,318 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 12:06:23,319 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 12:06:23,319 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 12:06:23,319 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 12:06:23,320 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 12:06:23,320 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 12:06:23,320 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 12:06:23,321 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 12:06:23,553 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,555 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 12:06:23,669 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 12:06:23,670 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,672 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,673 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,674 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,675 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,677 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,678 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,680 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,681 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:06:23,682 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:06:24,725 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
2023-01-09 12:06:24,730 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 12:06:24,730 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:06:24,732 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,733 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,734 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,735 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,735 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,735 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,736 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,736 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,737 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,746 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:06:24,837 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 12:06:24,838 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 12:06:24,842 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 12:06:24,882 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndSexAndActive() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 70 common frames omitted
2023-01-09 12:09:34,222 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 12:09:34,228 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 32628 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 12:09:34,230 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 12:09:34,231 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 12:09:35,571 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 12:09:35,572 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 12:09:35,573 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 12:09:35,693 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 12:09:35,801 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 12:09:36,167 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 12:09:36,169 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 12:09:36,170 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 12:09:36,171 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 12:09:36,171 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 12:09:36,172 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 12:09:36,172 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 12:09:36,173 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 12:09:36,173 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 12:09:36,174 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 12:09:36,175 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 12:09:36,175 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 12:09:36,176 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 12:09:36,176 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 12:09:36,177 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 12:09:36,177 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 12:09:36,177 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 12:09:36,178 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 12:09:36,178 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 12:09:36,179 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 12:09:36,179 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 12:09:36,180 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 12:09:36,180 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 12:09:36,180 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 12:09:36,181 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 12:09:36,181 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 12:09:36,182 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 12:09:36,182 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 12:09:36,182 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 12:09:36,183 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 12:09:36,183 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 12:09:36,184 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 12:09:36,187 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 12:09:36,188 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 12:09:36,188 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 12:09:36,188 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 12:09:36,189 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 12:09:36,432 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,434 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 12:09:36,542 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 12:09:36,543 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,544 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,545 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,546 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,547 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,548 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,548 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,549 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,550 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:09:36,550 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:09:37,672 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 12:09:38,095 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 12:09:38,098 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 12:09:38,100 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{GET [/players]}: getUserInPlayerAndSexAndActive(long,char,boolean)
2023-01-09 12:09:38,101 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
2023-01-09 12:09:38,106 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 12:09:38,107 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:09:38,109 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,109 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,110 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,110 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,111 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,111 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,111 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,112 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,112 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,112 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:09:38,183 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 12:09:38,184 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 12:09:38,188 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 12:09:38,234 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 12:17:49,931 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 12:17:49,936 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 20220 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 12:17:49,937 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 12:17:49,939 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 12:17:51,282 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 12:17:51,283 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 12:17:51,284 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 12:17:51,401 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 12:17:51,509 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 12:17:51,873 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 12:17:51,876 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 12:17:51,877 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 12:17:51,877 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 12:17:51,878 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 12:17:51,878 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 12:17:51,878 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 12:17:51,879 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 12:17:51,880 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 12:17:51,880 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 12:17:51,881 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 12:17:51,882 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 12:17:51,882 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 12:17:51,883 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 12:17:51,883 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 12:17:51,883 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 12:17:51,884 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 12:17:51,884 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 12:17:51,885 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 12:17:51,885 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 12:17:51,886 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 12:17:51,886 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 12:17:51,886 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 12:17:51,887 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 12:17:51,887 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 12:17:51,888 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 12:17:51,888 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 12:17:51,888 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 12:17:51,889 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 12:17:51,889 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 12:17:51,890 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 12:17:51,890 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 12:17:51,890 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 12:17:51,891 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 12:17:51,891 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 12:17:51,891 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 12:17:51,892 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 12:17:52,133 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,135 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 12:17:52,250 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 12:17:52,252 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,253 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,254 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,255 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,256 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,257 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,258 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,259 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,261 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:17:52,261 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:17:53,412 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 12:17:53,824 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 12:17:53,827 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 12:17:53,830 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players]}: addPlayer(Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 12:17:53,833 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 12:17:53,835 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 12:17:53,838 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 12:17:53,854 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 12:17:53,877 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 12:17:54,066 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 12:17:54,071 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 12:17:54,075 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 12:17:54,081 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 12:17:54,085 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 12:17:54,086 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 12:17:54,087 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 12:17:54,148 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 12:17:54,183 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.594 seconds (JVM running for 5.055)
2023-01-09 12:18:22,252 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:18:22,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:18:52,255 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:18:52,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:19:22,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:19:22,259 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:19:52,272 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:19:52,273 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:20:22,286 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:20:22,286 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:20:52,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:20:52,303 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:21:22,307 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:21:22,308 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:21:52,310 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:21:52,310 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:22:22,315 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:22:22,316 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:22:52,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:22:52,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:23:22,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:23:22,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:23:52,340 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:23:52,341 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:24:22,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:24:22,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:24:52,367 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:24:52,367 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:25:22,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:25:22,381 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:25:52,386 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:25:52,387 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:26:22,393 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:26:22,393 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:26:52,410 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:26:52,411 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:27:22,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:27:22,418 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:27:52,433 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:27:52,434 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:28:22,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:28:22,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:28:52,457 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:28:52,457 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:29:22,467 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:29:22,468 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:29:52,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:29:52,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:30:22,482 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:30:22,483 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:30:52,496 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:30:52,496 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:31:22,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:31:22,501 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:31:52,507 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:31:52,507 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:32:22,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:32:22,512 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:32:52,529 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:32:52,529 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:33:22,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:33:22,541 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:33:52,556 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:33:52,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:34:22,567 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:34:22,568 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:34:52,571 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:34:52,572 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:35:22,581 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:35:22,582 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:35:52,595 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:35:52,596 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:36:22,609 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:36:22,610 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:36:52,618 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:36:52,619 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:37:22,636 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:37:22,636 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:37:52,651 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:37:52,651 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:38:22,657 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:38:22,658 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:38:52,662 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:38:52,663 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:39:22,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:39:22,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:39:52,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:39:52,681 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:40:05,957 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 12:40:05,989 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin Rol and Coach
2023-01-09 12:40:06,131 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End Rol and Coach
2023-01-09 12:40:17,596 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayersId
2023-01-09 12:40:17,613 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Player not found
com.svalero.happDeporte.exception.PlayerNotFoundException: Player not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.findById(PlayerServiceImpl.java:57)
	at com.svalero.happDeporte.controller.PlayerController.getPlayerId(PlayerController.java:107)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 12:40:22,695 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:40:22,696 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:40:25,473 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 12:40:25,481 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 12:40:34,111 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayersId
2023-01-09 12:40:34,114 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayersId
2023-01-09 12:40:52,701 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:40:52,701 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:41:22,711 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:41:22,712 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:41:52,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:41:52,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:42:22,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:42:22,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:42:49,510 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 12:42:52,754 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:42:52,755 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:43:22,763 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:43:22,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:43:52,779 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:43:52,780 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:44:22,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:44:22,784 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:44:52,792 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:44:52,793 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:45:22,804 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:45:22,805 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:45:25,306 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 12:45:25,306 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:45:25,308 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,309 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,309 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,309 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,310 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,310 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,311 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,311 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,312 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,312 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 12:45:25,313 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 12:45:25,313 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 12:58:06,544 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 12:58:06,550 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 23204 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 12:58:06,551 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 12:58:06,552 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 12:58:07,950 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 12:58:07,979 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 12:58:07,980 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 12:58:08,126 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 12:58:08,252 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 12:58:08,617 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 12:58:08,620 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 12:58:08,621 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 12:58:08,621 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 12:58:08,622 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 12:58:08,622 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 12:58:08,622 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 12:58:08,623 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 12:58:08,623 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 12:58:08,624 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 12:58:08,625 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 12:58:08,625 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 12:58:08,626 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 12:58:08,626 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 12:58:08,627 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 12:58:08,627 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 12:58:08,627 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 12:58:08,628 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 12:58:08,628 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 12:58:08,629 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 12:58:08,629 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 12:58:08,630 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 12:58:08,630 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 12:58:08,630 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 12:58:08,631 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 12:58:08,631 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 12:58:08,632 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 12:58:08,632 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 12:58:08,632 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 12:58:08,633 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 12:58:08,633 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 12:58:08,633 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 12:58:08,634 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 12:58:08,634 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 12:58:08,635 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 12:58:08,635 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 12:58:08,636 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 12:58:08,871 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,872 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 12:58:08,984 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 12:58:08,985 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,986 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,987 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,988 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,989 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,990 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,991 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,992 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,993 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 12:58:08,993 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:58:10,141 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 12:58:10,573 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 12:58:10,576 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
2023-01-09 12:58:10,579 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/user/{userID}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 12:58:10,581 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 12:58:10,583 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
2023-01-09 12:58:10,586 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 12:58:10,601 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 12:58:10,622 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 12:58:10,814 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 12:58:10,818 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 12:58:10,823 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 12:58:10,829 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 12:58:10,833 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 12:58:10,834 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 12:58:10,835 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 12:58:10,892 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 12:58:10,925 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.732 seconds (JVM running for 5.205)
2023-01-09 12:58:38,991 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:58:38,992 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:59:08,999 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:59:09,000 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 12:59:39,010 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 12:59:39,010 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:00:09,014 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:00:09,014 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:00:09,184 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 13:00:09,276 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 13:00:24,286 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-4] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 13:00:39,028 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:00:39,029 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:01:09,039 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:01:09,040 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:01:39,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:01:39,043 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:02:09,053 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:02:09,054 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:02:12,966 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin addPlayers
2023-01-09 13:02:13,041 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End addPlayers
2023-01-09 13:02:28,017 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Begin getPlayers
2023-01-09 13:02:28,126 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayers
2023-01-09 13:02:39,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:02:39,069 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:02:48,991 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] Begin addPlayers
2023-01-09 13:02:48,993 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] End addPlayers
2023-01-09 13:03:09,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:03:09,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:03:39,086 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:03:39,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:04:09,099 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:04:09,100 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:04:39,106 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:04:39,107 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:05:09,118 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:05:09,119 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:05:39,133 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:05:39,134 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:06:09,147 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:06:09,148 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:06:39,160 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:06:39,161 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:07:09,168 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:07:09,168 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:07:39,185 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:07:39,186 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:08:09,203 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:08:09,203 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:08:39,210 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:08:39,211 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:09:09,227 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:09:09,227 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:09:39,229 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:09:39,229 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:10:09,234 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:10:09,234 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:10:39,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:10:39,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:11:09,260 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:11:09,261 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:11:39,275 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:11:39,276 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:12:09,279 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:12:09,279 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:12:39,288 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:12:39,289 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:13:09,292 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:13:09,293 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:13:39,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:13:39,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:14:09,313 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:14:09,313 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:14:39,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:14:39,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:15:09,336 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:15:09,337 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:15:39,349 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:15:39,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:16:09,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:16:09,353 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:16:39,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:16:39,361 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:17:09,363 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:17:09,364 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:17:39,371 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:17:39,372 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:18:09,375 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:18:09,375 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:18:39,381 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:18:39,381 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:19:09,385 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:19:09,385 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:19:39,388 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:19:39,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:20:08,506 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 13:20:08,507 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:20:08,509 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,509 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,510 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,510 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,511 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,512 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,512 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,513 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,515 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,515 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:20:08,516 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 13:20:08,516 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 13:20:21,042 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 13:20:21,048 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 2700 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 13:20:21,050 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 13:20:21,050 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 13:20:22,373 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 13:20:22,374 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 13:20:22,374 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 13:20:22,498 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 13:20:22,604 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 13:20:22,957 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 13:20:22,960 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 13:20:22,960 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 13:20:22,961 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 13:20:22,961 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 13:20:22,962 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 13:20:22,962 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 13:20:22,963 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 13:20:22,963 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 13:20:22,963 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 13:20:22,964 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 13:20:22,965 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 13:20:22,965 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 13:20:22,965 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 13:20:22,966 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 13:20:22,966 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 13:20:22,967 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 13:20:22,967 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 13:20:22,967 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 13:20:22,968 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 13:20:22,968 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 13:20:22,969 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 13:20:22,969 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 13:20:22,970 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 13:20:22,970 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 13:20:22,970 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 13:20:22,971 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 13:20:22,971 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 13:20:22,972 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 13:20:22,972 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 13:20:22,972 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 13:20:22,973 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 13:20:22,973 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 13:20:22,973 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 13:20:22,974 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 13:20:22,974 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 13:20:22,974 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 13:20:23,203 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,205 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 13:20:23,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 13:20:23,314 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,315 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,318 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,319 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,320 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,321 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:20:23,322 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:20:24,485 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 13:20:24,950 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 13:20:24,955 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 13:20:24,958 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/user/{userID}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 13:20:24,960 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 13:20:24,962 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 13:20:24,965 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 13:20:24,985 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 13:20:25,011 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 13:20:25,221 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 13:20:25,227 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 13:20:25,232 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 13:20:25,237 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 13:20:25,241 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 13:20:25,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 13:20:25,243 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 13:20:25,303 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 13:20:25,339 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.644 seconds (JVM running for 5.106)
2023-01-09 13:20:33,888 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 13:20:33,915 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Required URI template variable 'userInPlayer' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userInPlayer' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 13:20:53,320 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:20:53,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:21:02,084 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 13:21:02,190 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 13:21:23,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:21:23,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:21:53,337 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:21:53,337 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:22:23,346 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:22:23,347 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:22:29,565 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Begin getPlayers
2023-01-09 13:22:29,568 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayers
2023-01-09 13:22:45,435 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] Begin getPlayers
2023-01-09 13:22:45,439 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] End getPlayers
2023-01-09 13:22:53,171 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Begin Rol and Coach
2023-01-09 13:22:53,189 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] End Rol and Coach
2023-01-09 13:22:53,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:22:53,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:23:01,616 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Rol and Coach
2023-01-09 13:23:01,618 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End Rol and Coach
2023-01-09 13:23:14,085 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 13:23:23,365 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:23:23,365 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:23:53,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:23:53,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:24:23,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:24:23,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:24:48,035 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Required URI template variable 'userInPlayer' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userInPlayer' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 13:24:53,402 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:24:53,402 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:25:23,414 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:25:23,414 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:25:53,416 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:25:53,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:26:23,425 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:26:23,426 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:26:53,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:26:53,428 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:27:23,436 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:27:23,436 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:27:53,450 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:27:53,450 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:28:23,454 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:28:23,454 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:28:53,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:28:53,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:29:23,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:29:23,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:29:53,487 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:29:53,488 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:30:23,492 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:30:23,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:30:53,498 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:30:53,498 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:31:23,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:31:23,504 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:31:53,510 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:31:53,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:32:23,513 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:32:23,514 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:32:53,527 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:32:53,528 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:33:23,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:33:23,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:33:53,553 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:33:53,554 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:34:23,570 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:34:23,570 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:34:53,573 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:34:53,574 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:35:23,587 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:35:23,588 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:35:53,603 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:35:53,604 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:36:23,609 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:36:23,609 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:36:53,613 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:36:53,614 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:37:23,621 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:37:23,622 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:37:47,701 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 13:37:47,702 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:37:47,704 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,704 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,705 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,706 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,706 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,707 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,707 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,708 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,708 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,709 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:37:47,709 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 13:37:47,710 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 13:38:01,186 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 13:38:01,192 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 23824 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 13:38:01,193 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 13:38:01,194 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 13:38:02,705 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 13:38:02,706 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 13:38:02,707 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 13:38:02,819 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 13:38:03,009 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 13:38:03,441 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 13:38:03,444 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 13:38:03,444 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 13:38:03,445 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 13:38:03,445 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 13:38:03,446 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 13:38:03,447 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 13:38:03,448 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 13:38:03,448 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 13:38:03,449 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 13:38:03,451 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 13:38:03,455 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 13:38:03,457 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 13:38:03,459 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 13:38:03,460 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 13:38:03,461 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 13:38:03,461 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 13:38:03,462 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 13:38:03,463 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 13:38:03,465 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 13:38:03,466 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 13:38:03,468 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 13:38:03,468 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 13:38:03,469 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 13:38:03,471 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 13:38:03,471 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 13:38:03,472 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 13:38:03,556 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 13:38:03,558 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 13:38:03,559 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 13:38:03,560 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 13:38:03,561 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 13:38:03,562 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 13:38:03,562 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 13:38:03,563 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 13:38:03,564 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 13:38:03,565 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 13:38:03,907 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:03,909 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 13:38:04,023 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 13:38:04,025 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,026 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,028 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,029 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,030 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,031 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,033 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,033 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,034 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:38:04,035 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:38:06,225 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 13:38:06,638 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 13:38:06,642 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 13:38:06,644 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userID}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 13:38:06,646 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 13:38:06,648 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{POST [/users]}: addUser(User)
2023-01-09 13:38:06,651 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 13:38:06,666 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 13:38:06,687 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 13:38:06,876 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 13:38:06,880 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 13:38:06,885 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 13:38:06,891 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
2023-01-09 13:38:06,894 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 13:38:06,895 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 13:38:06,896 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 13:38:06,958 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 13:38:06,993 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 6.166 seconds (JVM running for 6.635)
2023-01-09 13:38:17,027 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 13:38:34,035 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:38:34,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:38:35,880 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin getUsers
2023-01-09 13:38:36,032 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] End getUsers
2023-01-09 13:39:04,052 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:39:04,052 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:39:34,058 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:39:34,059 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:39:37,212 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 13:40:04,066 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:40:04,067 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:40:34,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:40:34,069 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:41:04,073 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:41:04,073 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:41:34,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:41:34,088 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:42:04,092 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:42:04,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:42:34,101 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:42:34,101 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:42:35,438 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 13:42:35,439 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:42:35,440 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,441 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,441 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,441 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,442 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,442 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,442 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,443 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,443 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,443 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:42:35,444 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 13:42:35,444 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 13:42:48,633 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 13:42:48,640 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 6988 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 13:42:48,642 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 13:42:48,643 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 13:42:50,044 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 13:42:50,045 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 13:42:50,046 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 13:42:50,167 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 13:42:50,288 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 13:42:50,670 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 13:42:50,672 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 13:42:50,673 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 13:42:50,673 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 13:42:50,673 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 13:42:50,674 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 13:42:50,674 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 13:42:50,675 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 13:42:50,675 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 13:42:50,676 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 13:42:50,676 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 13:42:50,677 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 13:42:50,677 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 13:42:50,678 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 13:42:50,678 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 13:42:50,679 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 13:42:50,679 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 13:42:50,680 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 13:42:50,680 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 13:42:50,680 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 13:42:50,681 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 13:42:50,681 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 13:42:50,682 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 13:42:50,682 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 13:42:50,683 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 13:42:50,683 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 13:42:50,683 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 13:42:50,684 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 13:42:50,684 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 13:42:50,685 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 13:42:50,685 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 13:42:50,685 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 13:42:50,686 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 13:42:50,686 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 13:42:50,687 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 13:42:50,687 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 13:42:50,687 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 13:42:50,918 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:50,920 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 13:42:51,026 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 13:42:51,027 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,028 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,029 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,030 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,031 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,032 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,033 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,034 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,035 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:42:51,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:42:52,156 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 13:42:52,607 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 13:42:52,611 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 13:42:52,614 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/users/{userID}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 13:42:52,616 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 13:42:52,618 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 13:42:52,623 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 13:42:52,640 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 13:42:52,664 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 13:42:52,888 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 13:42:52,894 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 13:42:52,898 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 13:42:52,904 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 13:42:52,908 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 13:42:52,909 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 13:42:52,910 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 13:42:52,976 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 13:42:53,012 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.753 seconds (JVM running for 5.22)
2023-01-09 13:43:12,398 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 13:43:12,429 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 13:43:21,041 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:43:21,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:43:51,054 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:43:51,055 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:44:21,060 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:44:21,061 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:44:51,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:44:51,069 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:45:06,087 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-7] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 13:45:21,075 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:45:21,076 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:45:51,092 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:45:51,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:46:21,108 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:46:21,109 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:46:51,115 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:46:51,116 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:47:21,122 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:47:21,123 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:47:51,129 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:47:51,129 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:48:16,951 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 13:48:16,952 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:48:16,954 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,955 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,955 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,957 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,957 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,958 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,958 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,958 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:48:16,959 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 13:48:16,960 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 13:48:30,534 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 13:48:30,543 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 18360 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 13:48:30,545 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 13:48:30,546 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 13:48:32,006 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 13:48:32,008 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 13:48:32,008 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 13:48:32,136 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 13:48:32,294 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 13:48:32,777 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 13:48:32,783 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 13:48:32,784 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 13:48:32,785 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 13:48:32,785 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 13:48:32,786 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 13:48:32,787 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 13:48:32,788 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 13:48:32,789 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 13:48:32,792 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 13:48:32,793 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 13:48:32,795 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 13:48:32,801 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 13:48:32,802 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 13:48:32,803 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 13:48:32,804 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 13:48:32,804 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 13:48:32,805 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 13:48:32,806 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 13:48:32,806 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 13:48:32,807 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 13:48:32,808 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 13:48:32,808 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 13:48:32,809 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 13:48:32,809 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 13:48:32,810 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 13:48:32,810 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 13:48:32,811 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 13:48:32,811 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 13:48:32,812 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 13:48:32,812 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 13:48:32,813 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 13:48:32,814 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 13:48:32,814 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 13:48:32,815 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 13:48:32,816 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 13:48:32,817 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 13:48:33,186 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,187 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 13:48:33,295 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 13:48:33,310 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,314 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,315 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,318 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,320 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,322 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,323 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,324 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:48:33,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:48:35,791 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 13:48:36,281 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 13:48:36,285 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 13:48:36,288 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 13:48:36,290 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 13:48:36,293 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
2023-01-09 13:48:36,296 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 13:48:36,313 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 13:48:36,347 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 13:48:36,585 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 13:48:36,590 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 13:48:36,595 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 13:48:36,601 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 13:48:36,604 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 13:48:36,605 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 13:48:36,606 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 13:48:36,672 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 13:48:36,707 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 6.535 seconds (JVM running for 7.023)
2023-01-09 13:49:03,303 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:49:03,304 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:49:32,862 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 13:49:32,891 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 13:49:33,316 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:49:33,317 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:49:57,278 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 13:49:57,370 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 13:50:03,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:50:03,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:50:33,335 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:50:33,336 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:51:03,342 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:51:03,343 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:51:33,348 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:51:33,349 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:52:03,355 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:52:03,356 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:52:33,364 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:52:33,365 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:53:03,369 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:53:03,370 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:53:33,372 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:53:33,372 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:54:03,385 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:54:03,386 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:54:33,399 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:54:33,399 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:55:03,404 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:55:03,404 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:55:33,418 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:55:33,418 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:56:03,434 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:56:03,435 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:56:26,320 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 13:56:26,320 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:56:26,322 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,322 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,323 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,323 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,323 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,324 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,324 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,325 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,325 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,325 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 13:56:26,326 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 13:56:26,326 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 13:56:39,121 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 13:56:39,127 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 26272 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 13:56:39,129 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 13:56:39,129 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 13:56:40,501 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 13:56:40,503 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 13:56:40,503 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 13:56:40,615 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 13:56:40,729 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 13:56:41,125 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 13:56:41,128 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 13:56:41,128 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 13:56:41,129 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 13:56:41,129 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 13:56:41,130 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 13:56:41,130 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 13:56:41,131 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 13:56:41,131 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 13:56:41,135 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 13:56:41,136 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 13:56:41,137 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 13:56:41,138 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 13:56:41,138 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 13:56:41,139 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 13:56:41,139 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 13:56:41,140 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 13:56:41,140 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 13:56:41,141 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 13:56:41,141 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 13:56:41,142 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 13:56:41,142 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 13:56:41,143 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 13:56:41,143 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 13:56:41,144 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 13:56:41,144 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 13:56:41,145 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 13:56:41,145 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 13:56:41,145 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 13:56:41,146 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 13:56:41,146 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 13:56:41,146 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 13:56:41,147 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 13:56:41,147 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 13:56:41,148 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 13:56:41,148 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 13:56:41,148 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 13:56:41,392 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,394 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 13:56:41,497 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 13:56:41,498 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,499 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,500 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,501 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,502 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,503 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,504 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,505 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,506 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 13:56:41,506 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:56:42,720 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 13:56:43,542 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 13:56:43,548 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 13:56:43,551 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 13:56:43,555 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 13:56:43,560 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 13:56:43,565 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 13:56:43,585 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 13:56:43,611 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 13:56:43,880 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 13:56:43,890 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 13:56:43,900 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 13:56:43,913 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 13:56:43,917 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 13:56:43,919 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 13:56:43,920 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 13:56:43,990 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 13:56:44,031 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.257 seconds (JVM running for 5.723)
2023-01-09 13:57:11,510 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:57:11,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:57:41,522 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:57:41,523 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:58:11,540 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:58:11,541 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:58:41,556 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:58:41,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:59:11,558 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:59:11,558 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 13:59:41,568 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 13:59:41,569 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:00:11,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:00:11,584 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:00:41,597 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:00:41,597 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:01:11,606 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:01:11,611 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:01:41,617 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:01:41,617 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:02:11,624 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:02:11,625 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:02:41,634 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:02:41,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:03:11,643 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:03:11,644 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:03:41,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:03:41,653 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:04:11,662 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:04:11,662 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:04:41,679 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:04:41,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:05:07,101 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:05:07,102 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:05:07,104 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,106 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,107 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,108 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,108 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,110 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,111 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,111 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:05:07,112 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:05:07,113 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:05:20,364 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:05:20,369 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 24944 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:05:20,370 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:05:20,371 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:05:21,714 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:05:21,715 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:05:21,716 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:05:21,840 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:05:21,962 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:05:22,326 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:05:22,329 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:05:22,330 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:05:22,330 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:05:22,330 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:05:22,330 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:05:22,330 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:05:22,331 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:05:22,331 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:05:22,332 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:05:22,333 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:05:22,333 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:05:22,334 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:05:22,334 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:05:22,335 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:05:22,335 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:05:22,335 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:05:22,336 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:05:22,336 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:05:22,337 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:05:22,337 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:05:22,338 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:05:22,338 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:05:22,338 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:05:22,339 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:05:22,339 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:05:22,340 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:05:22,340 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:05:22,340 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:05:22,341 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:05:22,341 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:05:22,342 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:05:22,342 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:05:22,342 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:05:22,343 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:05:22,343 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:05:22,343 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:05:22,579 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,581 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:05:22,683 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:05:22,684 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,686 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,687 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,688 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,689 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,690 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,690 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,691 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,692 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:05:22,692 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:05:23,874 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:05:24,308 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 14:05:24,311 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 14:05:24,313 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 14:05:24,315 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 14:05:24,317 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/{id}]}: getUserId(long)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 14:05:24,320 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:05:24,335 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:05:24,359 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:05:24,552 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:05:24,556 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 14:05:24,561 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 14:05:24,569 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 14:05:24,572 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:05:24,573 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:05:24,575 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:05:24,638 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:05:24,671 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.659 seconds (JVM running for 5.129)
2023-01-09 14:05:52,697 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:05:52,698 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:06:22,702 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:06:22,702 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:06:24,880 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:06:33,208 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 14:06:33,299 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 14:06:52,716 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:06:52,716 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:07:17,975 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin getUsers
2023-01-09 14:07:17,981 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End getUsers
2023-01-09 14:07:22,719 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:07:22,720 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:07:52,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:07:52,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:08:22,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:08:22,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:08:33,319 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:08:52,748 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:08:52,749 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:09:22,387 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:09:22,387 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:09:22,389 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,389 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,390 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,390 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,391 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,391 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,391 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,392 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,392 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,392 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:09:22,393 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:09:22,393 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:09:35,077 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:09:35,082 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 40720 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:09:35,084 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:09:35,084 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:09:36,443 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:09:36,444 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:09:36,445 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:09:36,566 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:09:36,675 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:09:37,068 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:09:37,070 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:09:37,072 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:09:37,072 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:09:37,073 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:09:37,073 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:09:37,073 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:09:37,074 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:09:37,074 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:09:37,075 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:09:37,075 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:09:37,076 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:09:37,076 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:09:37,077 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:09:37,077 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:09:37,078 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:09:37,078 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:09:37,079 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:09:37,079 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:09:37,079 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:09:37,080 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:09:37,080 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:09:37,081 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:09:37,082 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:09:37,082 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:09:37,082 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:09:37,083 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:09:37,083 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:09:37,083 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:09:37,084 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:09:37,084 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:09:37,085 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:09:37,085 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:09:37,085 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:09:37,086 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:09:37,086 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:09:37,087 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:09:37,328 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,330 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:09:37,435 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:09:37,437 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,438 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,439 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,440 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,441 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,442 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,443 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,444 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,445 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:09:37,445 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:09:38,595 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:09:39,008 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 14:09:39,011 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 14:09:39,013 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 14:09:39,015 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 14:09:39,017 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
2023-01-09 14:09:39,020 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:09:39,035 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:09:39,061 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:09:39,275 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:09:39,280 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 14:09:39,284 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 14:09:39,290 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 14:09:39,293 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:09:39,294 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:09:39,296 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:09:39,357 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:09:39,390 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.661 seconds (JVM running for 5.127)
2023-01-09 14:09:43,109 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:09:43,139 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:10:01,076 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 14:10:01,168 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 14:10:07,445 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:10:07,446 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:10:37,456 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:10:37,457 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:11:07,487 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:11:07,488 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:11:37,499 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:11:37,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:12:07,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:12:07,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:12:37,513 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:12:37,513 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:13:07,526 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:13:07,528 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:13:37,544 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:13:37,545 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:14:07,553 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:14:07,554 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:14:25,556 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:14:25,556 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:14:25,558 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,558 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,559 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,559 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,559 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,560 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,560 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,560 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,561 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,561 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:14:25,561 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:14:25,562 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:14:38,554 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:14:38,560 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 30804 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:14:38,562 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:14:38,563 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:14:40,000 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:14:40,001 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:14:40,001 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:14:40,120 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:14:40,237 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:14:40,641 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:14:40,643 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:14:40,644 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:14:40,644 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:14:40,645 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:14:40,645 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:14:40,646 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:14:40,646 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:14:40,647 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:14:40,647 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:14:40,648 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:14:40,648 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:14:40,649 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:14:40,649 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:14:40,650 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:14:40,650 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:14:40,650 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:14:40,651 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:14:40,651 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:14:40,652 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:14:40,652 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:14:40,653 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:14:40,653 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:14:40,654 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:14:40,654 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:14:40,654 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:14:40,655 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:14:40,655 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:14:40,656 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:14:40,656 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:14:40,656 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:14:40,657 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:14:40,657 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:14:40,657 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:14:40,658 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:14:40,658 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:14:40,659 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:14:40,902 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:40,904 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:14:41,011 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:14:41,013 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,014 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,015 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,016 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,017 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,018 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,020 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,021 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,023 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:14:41,023 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:14:42,249 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:14:42,718 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 14:14:42,722 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 14:14:42,724 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 14:14:42,726 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 14:14:42,728 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 14:14:42,732 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:14:42,748 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:14:42,769 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:14:42,972 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:14:42,977 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 14:14:42,982 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 14:14:42,988 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
2023-01-09 14:14:42,991 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:14:42,991 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:14:42,992 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:14:43,049 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:14:43,080 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.885 seconds (JVM running for 5.355)
2023-01-09 14:15:11,023 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:15:11,023 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:15:41,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:15:41,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:15:47,895 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:15:47,923 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin deletePlayers
2023-01-09 14:15:47,952 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Player not found
com.svalero.happDeporte.exception.PlayerNotFoundException: Player not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.deletePlayer(PlayerServiceImpl.java:47)
	at com.svalero.happDeporte.controller.PlayerController.deletePlayer(PlayerController.java:66)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doDelete(FrameworkServlet.java:931)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:702)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:15:53,325 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin deletePlayers
2023-01-09 14:15:53,407 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End deletePlayers
2023-01-09 14:15:57,658 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 14:15:57,763 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 14:16:05,302 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin deletePlayers
2023-01-09 14:16:05,306 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End deletePlayers
2023-01-09 14:16:09,164 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 14:16:09,168 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 14:16:11,041 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:16:11,041 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:16:21,057 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:16:41,056 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:16:41,057 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:17:11,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:17:11,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:17:41,083 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:17:41,085 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:17:41,396 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:17:41,397 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:17:41,400 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,400 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,401 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,401 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,402 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,402 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,402 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,403 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,403 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,403 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:17:41,404 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:17:41,404 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:19:03,549 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:19:03,555 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 33156 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:19:03,556 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:19:03,557 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:19:05,572 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:19:05,573 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:19:05,574 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:19:05,703 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:19:05,809 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:19:06,178 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:19:06,180 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:19:06,181 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:19:06,181 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:19:06,182 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:19:06,182 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:19:06,182 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:19:06,183 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:19:06,183 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:19:06,184 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:19:06,185 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:19:06,185 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:19:06,186 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:19:06,186 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:19:06,187 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:19:06,187 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:19:06,187 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:19:06,188 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:19:06,188 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:19:06,189 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:19:06,189 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:19:06,190 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:19:06,190 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:19:06,190 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:19:06,190 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:19:06,191 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:19:06,191 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:19:06,191 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:19:06,192 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:19:06,192 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:19:06,193 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:19:06,193 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:19:06,194 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:19:06,194 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:19:06,194 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:19:06,195 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:19:06,195 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:19:06,416 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,418 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:19:06,528 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:19:06,530 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,530 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,531 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,532 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,533 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,534 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,534 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,535 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:19:06,537 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:19:07,680 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:19:08,110 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 14:19:08,112 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 14:19:08,114 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 14:19:08,116 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 14:19:08,119 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/user]}: getRolAndCoach(String,boolean)
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 14:19:08,122 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:19:08,137 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:19:08,158 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:19:08,348 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:19:08,353 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 14:19:08,358 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 14:19:08,364 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
2023-01-09 14:19:08,368 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:19:08,369 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:19:08,370 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:19:08,428 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:19:08,462 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.325 seconds (JVM running for 5.793)
2023-01-09 14:19:34,644 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:19:34,770 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin addUsers
2023-01-09 14:19:34,831 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End addUsers
2023-01-09 14:19:36,529 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:19:36,529 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:20:06,544 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:20:06,545 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:20:17,485 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] JSON parse error: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 6]
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries; nested exception is com.fasterxml.jackson.core.JsonParseException: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.core.JsonParseException: Unexpected character ('"' (code 34)): was expecting comma to separate Object entries
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 6]
	at com.fasterxml.jackson.core.JsonParser._constructError(JsonParser.java:2391)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportError(ParserMinimalBase.java:735)
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportUnexpectedChar(ParserMinimalBase.java:659)
	at com.fasterxml.jackson.core.json.UTF8StreamJsonParser.nextFieldName(UTF8StreamJsonParser.java:1056)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:20:31,399 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin addUsers
2023-01-09 14:20:31,403 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] End addUsers
2023-01-09 14:20:36,559 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:20:36,559 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:20:51,534 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] JSON parse error: Cannot coerce empty String ("") to element of `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` (but could if coercion was enabled using `CoercionConfig`); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to element of `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot coerce empty String ("") to element of `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` (but could if coercion was enabled using `CoercionConfig`); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to element of `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to element of `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadCoercion(DeserializationContext.java:1806)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkCoercionFail(StdDeserializer.java:1490)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromString(CollectionDeserializer.java:308)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:21:06,571 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:21:06,572 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:21:10,134 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin getUsers
2023-01-09 14:21:10,231 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End getUsers
2023-01-09 14:21:21,294 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] Begin addTeams
2023-01-09 14:21:21,304 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] End addTeams
2023-01-09 14:21:36,575 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:21:36,576 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:22:06,580 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:22:06,581 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:22:09,834 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 18] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 18] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 18] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:22:36,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:22:36,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:23:06,602 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:23:06,603 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:23:36,606 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:23:36,607 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:24:06,622 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:24:06,622 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:24:36,627 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:24:36,628 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:25:06,632 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:25:06,633 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:25:29,463 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-5] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:25:35,971 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-3] Begin addTeams
2023-01-09 14:25:35,974 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-3] End addTeams
2023-01-09 14:25:36,644 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:25:36,645 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:26:06,659 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:26:06,660 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:26:36,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:26:36,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:27:06,678 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:27:06,678 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:27:36,690 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:27:36,691 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:28:06,697 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:28:06,698 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:28:36,708 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:28:36,708 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:29:06,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:29:06,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:29:36,729 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:29:36,730 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:30:06,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:30:06,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:30:36,756 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:30:36,757 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:31:06,759 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:31:06,760 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:31:36,769 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:31:36,770 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:32:06,779 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:32:06,780 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:32:36,783 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:32:36,784 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:33:06,786 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:33:06,787 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:33:36,790 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:33:36,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:34:06,794 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:34:06,795 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:34:36,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:34:36,807 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:35:06,813 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:35:06,814 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:35:36,822 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:35:36,823 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:36:06,833 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:36:06,833 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:36:36,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:36:36,848 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:37:06,855 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:37:06,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:37:36,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:37:36,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:38:06,881 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:38:06,882 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:38:36,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:38:36,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:39:06,906 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:39:06,907 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:39:36,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:39:36,915 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:40:06,919 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:40:06,919 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:40:36,932 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:40:36,933 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:41:06,945 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:41:06,946 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:41:36,948 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:41:36,948 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:42:06,960 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:42:06,961 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:42:36,974 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:42:36,974 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:43:06,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:43:06,981 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:43:36,987 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:43:36,987 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:44:06,995 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:44:06,996 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:44:37,005 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:44:37,006 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:45:07,009 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:45:07,010 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:45:37,012 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:45:37,013 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:46:07,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:46:07,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:46:37,026 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:46:37,026 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:47:07,030 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:47:07,030 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:47:37,035 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:47:37,035 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:48:07,044 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:48:07,044 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:48:15,270 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:48:15,271 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:48:15,272 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,273 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,273 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,273 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,274 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,274 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,274 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,275 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,275 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,275 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:48:15,276 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:48:15,276 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:49:03,427 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:49:03,432 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 15668 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:49:03,433 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:49:03,434 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:49:04,772 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:49:04,773 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:49:04,773 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:49:04,894 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:49:05,002 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:49:05,379 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:49:05,381 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:49:05,382 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:49:05,383 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:49:05,383 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:49:05,383 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:49:05,384 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:49:05,384 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:49:05,385 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:49:05,385 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:49:05,386 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:49:05,387 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:49:05,387 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:49:05,388 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:49:05,388 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:49:05,390 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:49:05,390 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:49:05,390 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:49:05,390 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:49:05,390 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:49:05,391 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:49:05,391 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:49:05,392 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:49:05,392 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:49:05,392 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:49:05,393 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:49:05,393 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:49:05,394 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:49:05,394 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:49:05,394 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:49:05,395 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:49:05,395 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:49:05,395 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:49:05,396 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:49:05,396 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:49:05,397 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:49:05,398 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:49:05,631 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,633 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:49:05,734 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:49:05,736 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,737 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,738 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,739 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,740 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,742 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,743 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,744 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,745 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:49:05,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:49:06,760 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
2023-01-09 14:49:06,763 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 14:49:06,763 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:49:06,765 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,766 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,766 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,766 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,767 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,767 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,768 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,768 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,768 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,769 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:49:06,862 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:49:06,862 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 14:49:06,864 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 14:49:06,900 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayerAndActive(com.svalero.happDeporte.domain.User,boolean)! No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
Caused by: org.springframework.data.mapping.PropertyReferenceException: No property 'userInPlayer' found for type 'Player' Did you mean ''userInPlayerId''
	at org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:91)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:438)
	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:414)
	at org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:367)
	at java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:349)
	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)
	at org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:250)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:251)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:384)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:385)
	at org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:96)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:89)
	... 70 common frames omitted
2023-01-09 14:51:50,760 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:51:50,768 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 5140 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:51:50,769 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:51:50,770 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:51:52,120 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:51:52,121 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:51:52,122 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:51:52,240 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:51:52,365 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:51:52,749 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:51:52,752 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:51:52,752 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:51:52,753 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:51:52,753 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:51:52,754 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:51:52,754 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:51:52,755 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:51:52,755 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:51:52,755 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:51:52,756 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:51:52,757 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:51:52,757 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:51:52,758 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:51:52,758 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:51:52,759 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:51:52,759 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:51:52,759 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:51:52,760 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:51:52,760 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:51:52,761 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:51:52,761 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:51:52,761 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:51:52,762 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:51:52,762 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:51:52,763 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:51:52,763 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:51:52,763 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:51:52,764 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:51:52,764 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:51:52,764 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:51:52,765 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:51:52,765 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:51:52,766 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:51:52,766 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:51:52,766 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:51:52,767 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:51:53,016 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,018 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:51:53,123 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:51:53,125 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,126 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,127 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,128 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,128 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,129 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,130 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,131 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,132 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:51:53,133 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:51:53,192 ERROR org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Failed to initialize JPA EntityManagerFactory: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
2023-01-09 14:51:53,193 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
2023-01-09 14:51:53,194 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 14:51:53,194 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:51:53,196 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,197 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,197 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,198 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,198 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,199 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,200 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,200 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:51:53,298 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:51:53,299 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 14:51:53,305 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 14:51:53,352 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
	at org.hibernate.cfg.annotations.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:875)
	at org.hibernate.cfg.annotations.CollectionBinder$1.secondPass(CollectionBinder.java:826)
	at org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:54)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1653)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1629)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 14:52:31,680 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:52:31,689 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 35276 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:52:31,690 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:52:31,691 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:52:33,054 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:52:33,054 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:52:33,055 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:52:33,180 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:52:33,285 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:52:33,656 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:52:33,658 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:52:33,659 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:52:33,659 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:52:33,660 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:52:33,660 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:52:33,661 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:52:33,661 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:52:33,662 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:52:33,662 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:52:33,663 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:52:33,663 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:52:33,664 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:52:33,664 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:52:33,665 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:52:33,665 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:52:33,666 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:52:33,667 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:52:33,667 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:52:33,667 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:52:33,667 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:52:33,668 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:52:33,668 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:52:33,669 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:52:33,669 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:52:33,670 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:52:33,670 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:52:33,671 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:52:33,671 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:52:33,671 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:52:33,672 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:52:33,672 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:52:33,672 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:52:33,673 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:52:33,673 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:52:33,674 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:52:33,674 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:52:33,909 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:33,910 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:52:34,015 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:52:34,016 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,018 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,019 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,020 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,021 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,022 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,023 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,024 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,026 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:52:34,026 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:52:34,098 ERROR org.springframework.orm.jpa.AbstractEntityManagerFactoryBean [main] Failed to initialize JPA EntityManagerFactory: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
2023-01-09 14:52:34,100 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
2023-01-09 14:52:34,100 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 14:52:34,101 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:52:34,102 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,103 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,104 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,104 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,106 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,107 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,107 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:52:34,318 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:52:34,319 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 14:52:34,325 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 14:52:34,365 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.hibernate.AnnotationException: mappedBy reference an unknown target entity property: com.svalero.happDeporte.domain.Player.userInPlayerId in com.svalero.happDeporte.domain.User.players
	at org.hibernate.cfg.annotations.CollectionBinder.bindStarToManySecondPass(CollectionBinder.java:875)
	at org.hibernate.cfg.annotations.CollectionBinder$1.secondPass(CollectionBinder.java:826)
	at org.hibernate.cfg.CollectionSecondPass.doSecondPass(CollectionSecondPass.java:54)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1653)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.processSecondPasses(InFlightMetadataCollectorImpl.java:1629)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:295)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 14:53:11,276 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:53:11,282 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 21244 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:53:11,283 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:53:11,284 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:53:12,675 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:53:12,676 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:53:12,677 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:53:12,802 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:53:12,910 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:53:13,270 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:53:13,273 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:53:13,273 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:53:13,274 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:53:13,274 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:53:13,275 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:53:13,275 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:53:13,276 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:53:13,277 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:53:13,277 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:53:13,278 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:53:13,278 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:53:13,279 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:53:13,279 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:53:13,280 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:53:13,280 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:53:13,281 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:53:13,281 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:53:13,282 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:53:13,282 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:53:13,283 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:53:13,283 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:53:13,283 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:53:13,284 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:53:13,284 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:53:13,285 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:53:13,285 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:53:13,285 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:53:13,286 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:53:13,286 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:53:13,286 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:53:13,287 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:53:13,287 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:53:13,287 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:53:13,288 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:53:13,288 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:53:13,289 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:53:13,520 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,522 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:53:13,624 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:53:13,625 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,626 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,627 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,628 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,629 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,630 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,631 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,632 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,633 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:53:13,634 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:53:14,791 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:53:15,219 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 14:53:15,222 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 14:53:15,224 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userID}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 14:53:15,226 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 14:53:15,228 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 14:53:15,231 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:53:15,246 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:53:15,267 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:53:15,456 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:53:15,460 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 14:53:15,466 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 14:53:15,471 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 14:53:15,474 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:53:15,475 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:53:15,476 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:53:15,535 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:53:15,576 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.652 seconds (JVM running for 5.121)
2023-01-09 14:53:29,960 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:53:29,976 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 14:53:43,630 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:53:43,631 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:53:48,178 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Begin getUsers
2023-01-09 14:53:48,295 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] End getUsers
2023-01-09 14:54:01,567 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 14:54:01,572 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 14:54:13,641 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:54:13,642 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:54:43,644 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:54:43,644 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:55:00,889 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:55:12,906 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-10] Begin addMatches
2023-01-09 14:55:12,937 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-10] End addMatches
2023-01-09 14:55:13,660 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:55:13,660 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:55:30,682 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Begin addClothes
2023-01-09 14:55:30,688 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] End addClothes
2023-01-09 14:55:43,666 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:55:43,667 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:55:47,010 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-1] Begin addTeams
2023-01-09 14:55:47,024 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-1] End addTeams
2023-01-09 14:55:54,863 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-3] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:56:05,601 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-5] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromString(CollectionDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 14:56:12,622 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] Begin addTeams
2023-01-09 14:56:12,626 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] End addTeams
2023-01-09 14:56:13,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:56:13,671 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:56:43,685 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:56:43,685 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:56:56,992 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:57:13,687 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:57:13,688 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:57:20,764 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 14:57:20,765 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:57:20,767 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,768 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,769 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,769 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,770 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,771 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,771 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,772 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,772 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 14:57:20,773 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 14:57:20,773 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 14:57:36,568 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 14:57:36,575 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 32940 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 14:57:36,576 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 14:57:36,577 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 14:57:37,952 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 14:57:37,953 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 14:57:37,954 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 14:57:38,091 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 14:57:38,205 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 14:57:38,569 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 14:57:38,571 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 14:57:38,572 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 14:57:38,572 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 14:57:38,573 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 14:57:38,573 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 14:57:38,574 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 14:57:38,575 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 14:57:38,575 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 14:57:38,576 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 14:57:38,577 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 14:57:38,577 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 14:57:38,578 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 14:57:38,578 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 14:57:38,578 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 14:57:38,579 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 14:57:38,579 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 14:57:38,580 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 14:57:38,580 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 14:57:38,580 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 14:57:38,581 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 14:57:38,581 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 14:57:38,582 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 14:57:38,582 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 14:57:38,582 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 14:57:38,583 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 14:57:38,583 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 14:57:38,584 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 14:57:38,584 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 14:57:38,585 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 14:57:38,585 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 14:57:38,585 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 14:57:38,586 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 14:57:38,589 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 14:57:38,590 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 14:57:38,590 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 14:57:38,590 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 14:57:38,835 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,836 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 14:57:38,950 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 14:57:38,952 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,953 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,953 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,954 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,955 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,956 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,957 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,958 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,959 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 14:57:38,959 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:57:40,105 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 14:57:40,536 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 14:57:40,539 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 14:57:40,541 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 14:57:40,544 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 14:57:40,546 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
2023-01-09 14:57:40,549 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 14:57:40,564 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 14:57:40,586 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 14:57:40,784 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 14:57:40,789 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 14:57:40,793 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 14:57:40,799 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
2023-01-09 14:57:40,804 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 14:57:40,805 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 14:57:40,806 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 14:57:40,869 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 14:57:40,901 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.674 seconds (JVM running for 5.221)
2023-01-09 14:58:00,617 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 14:58:00,647 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin getUsers
2023-01-09 14:58:00,799 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End getUsers
2023-01-09 14:58:07,581 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 14:58:08,961 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:58:08,961 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:58:10,587 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 14:58:38,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:58:39,020 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:59:09,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:59:09,043 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 14:59:39,055 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 14:59:39,055 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:00:04,542 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:00:04,543 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:00:04,545 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,546 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,546 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:04,549 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:00:04,550 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:00:21,763 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:00:21,775 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 14900 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:00:21,776 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:00:21,777 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:00:23,220 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:00:23,221 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:00:23,222 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:00:23,373 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:00:23,498 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:00:23,896 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:00:23,899 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:00:23,900 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:00:23,900 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:00:23,901 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:00:23,901 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:00:23,902 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:00:23,902 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:00:23,903 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:00:23,904 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:00:23,905 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:00:23,905 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:00:23,906 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:00:23,906 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:00:23,907 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:00:23,907 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:00:23,908 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:00:23,908 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:00:23,908 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:00:23,909 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:00:23,909 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:00:23,910 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:00:23,910 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:00:23,910 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:00:23,911 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:00:23,911 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:00:23,912 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:00:23,912 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:00:23,912 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:00:23,913 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:00:23,913 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:00:23,913 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:00:23,914 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:00:23,914 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:00:23,915 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:00:23,915 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:00:23,918 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:00:24,206 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,207 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:00:24,309 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:00:24,311 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,312 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,313 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,315 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,318 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,319 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,321 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,322 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:24,323 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:00:25,567 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:00:26,019 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:00:26,024 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:00:26,027 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:00:26,030 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:00:26,032 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
2023-01-09 15:00:26,037 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:00:26,061 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:00:26,091 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:00:26,290 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 15:00:26,295 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
2023-01-09 15:00:26,299 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 15:00:26,305 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:00:26,308 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:00:26,309 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:00:26,311 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 15:00:26,379 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:00:26,413 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.999 seconds (JVM running for 5.515)
2023-01-09 15:00:39,045 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:00:39,046 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:00:39,048 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,048 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,049 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,049 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,049 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,050 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,050 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,050 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,051 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,051 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:00:39,051 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:00:39,052 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:00:52,793 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:00:52,798 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 35988 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:00:52,799 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:00:52,800 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:00:54,210 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:00:54,211 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:00:54,212 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:00:54,341 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:00:54,455 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:00:54,841 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:00:54,844 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:00:54,845 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:00:54,845 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:00:54,846 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:00:54,846 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:00:54,847 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:00:54,847 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:00:54,848 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:00:54,848 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:00:54,849 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:00:54,850 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:00:54,850 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:00:54,851 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:00:54,852 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:00:54,852 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:00:54,852 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:00:54,853 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:00:54,853 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:00:54,854 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:00:54,854 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:00:54,855 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:00:54,855 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:00:54,856 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:00:54,856 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:00:54,856 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:00:54,857 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:00:54,857 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:00:54,857 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:00:54,858 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:00:54,858 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:00:54,858 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:00:54,859 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:00:54,859 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:00:54,860 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:00:54,860 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:00:54,860 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:00:55,101 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,103 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:00:55,210 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:00:55,212 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,213 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,214 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,215 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,217 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,218 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,219 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,221 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,222 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:00:55,222 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:00:56,410 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:00:56,847 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:00:56,851 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:00:56,853 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userID}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 15:00:56,855 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 15:00:56,858 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
2023-01-09 15:00:56,861 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:00:56,880 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:00:56,905 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:00:57,118 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 15:00:57,123 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 15:00:57,128 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 15:00:57,133 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:00:57,137 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:00:57,138 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:00:57,139 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 15:00:57,197 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:00:57,229 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.808 seconds (JVM running for 5.286)
2023-01-09 15:01:03,839 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:01:03,863 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin getUsers
2023-01-09 15:01:04,009 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End getUsers
2023-01-09 15:01:10,804 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 15:01:24,779 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 15:01:24,784 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 15:01:25,215 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:01:25,216 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:01:55,226 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:01:55,227 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:02:06,876 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayersId
2023-01-09 15:02:06,879 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Player not found
com.svalero.happDeporte.exception.PlayerNotFoundException: Player not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.findById(PlayerServiceImpl.java:69)
	at com.svalero.happDeporte.controller.PlayerController.getPlayerId(PlayerController.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 15:02:25,240 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:02:25,241 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:02:55,248 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:02:55,249 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:03:25,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:03:25,259 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:03:55,270 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:03:55,271 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:04:18,479 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:04:18,480 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:04:18,481 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,482 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,482 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,483 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,483 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,484 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,484 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,484 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,485 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,485 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:04:18,485 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:04:18,486 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:04:31,581 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:04:31,586 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 4868 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:04:31,587 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:04:31,588 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:04:32,958 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:04:32,959 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:04:32,959 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:04:33,157 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:04:33,270 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:04:33,678 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:04:33,680 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:04:33,681 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:04:33,681 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:04:33,682 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:04:33,682 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:04:33,683 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:04:33,683 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:04:33,684 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:04:33,684 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:04:33,685 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:04:33,685 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:04:33,686 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:04:33,686 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:04:33,687 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:04:33,687 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:04:33,687 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:04:33,688 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:04:33,688 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:04:33,689 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:04:33,689 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:04:33,690 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:04:33,690 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:04:33,690 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:04:33,690 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:04:33,691 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:04:33,691 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:04:33,692 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:04:33,692 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:04:33,692 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:04:33,693 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:04:33,693 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:04:33,693 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:04:33,694 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:04:33,694 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:04:33,695 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:04:33,695 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:04:33,948 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:33,950 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:04:34,061 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:04:34,063 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,064 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,065 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,066 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,067 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,068 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,069 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,070 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,071 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:04:34,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:04:35,297 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:04:35,764 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:04:35,767 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:04:35,769 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{user_id}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:04:35,771 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:04:35,773 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:04:35,776 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:04:35,791 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:04:35,811 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:04:36,021 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:04:36,025 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:04:36,030 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 15:04:36,036 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
2023-01-09 15:04:36,039 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:04:36,040 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:04:36,041 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:04:36,109 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:04:36,148 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.934 seconds (JVM running for 5.41)
2023-01-09 15:04:44,927 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:04:50,788 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:04:50,873 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:05:04,075 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:05:04,076 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:05:34,078 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:05:34,078 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:06:04,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:06:04,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:06:34,103 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:06:34,103 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:07:01,326 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:07:01,327 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:07:01,330 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,331 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,332 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,332 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,333 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,334 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,334 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,335 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,336 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,336 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:07:01,337 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:07:01,337 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:07:15,418 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:07:15,425 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 29768 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:07:15,426 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:07:15,427 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:07:16,834 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:07:16,835 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:07:16,836 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:07:16,955 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:07:17,077 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:07:17,457 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:07:17,460 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:07:17,460 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:07:17,461 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:07:17,461 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:07:17,462 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:07:17,462 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:07:17,463 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:07:17,463 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:07:17,464 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:07:17,464 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:07:17,465 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:07:17,466 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:07:17,466 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:07:17,466 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:07:17,467 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:07:17,467 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:07:17,468 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:07:17,468 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:07:17,469 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:07:17,469 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:07:17,469 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:07:17,470 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:07:17,470 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:07:17,471 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:07:17,471 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:07:17,472 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:07:17,472 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:07:17,472 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:07:17,473 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:07:17,473 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:07:17,473 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:07:17,474 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:07:17,475 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:07:17,476 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:07:17,477 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:07:17,477 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:07:17,721 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,722 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:07:17,832 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:07:17,833 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,834 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,836 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,837 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,838 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,839 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,840 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,841 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,843 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:07:17,843 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:07:18,974 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:07:19,391 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 15:07:19,395 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 15:07:19,397 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 15:07:19,399 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 15:07:19,402 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:07:19,406 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:07:19,422 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:07:19,446 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:07:19,637 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:07:19,643 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 15:07:19,648 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 15:07:19,653 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
2023-01-09 15:07:19,657 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:07:19,658 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:07:19,659 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:07:19,728 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:07:19,764 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.729 seconds (JVM running for 5.218)
2023-01-09 15:07:35,155 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:07:35,230 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 15:07:35,331 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 15:07:46,307 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:07:46,410 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:07:47,835 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:07:47,836 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:08:11,102 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin getUsers
2023-01-09 15:08:11,106 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End getUsers
2023-01-09 15:08:17,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:08:17,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:08:24,294 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 15:08:24,296 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 15:08:47,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:08:47,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:09:17,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:09:17,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:09:47,884 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:09:47,884 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:10:14,439 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:10:14,440 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:10:14,442 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,443 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,443 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,444 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,445 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,445 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,446 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,446 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,447 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,447 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:10:14,448 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:10:14,449 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:11:29,214 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:11:29,223 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 41848 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:11:29,224 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:11:29,224 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:11:30,550 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:11:30,551 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:11:30,552 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:11:30,669 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:11:30,778 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:11:31,207 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:11:31,210 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:11:31,211 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:11:31,211 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:11:31,212 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:11:31,212 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:11:31,213 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:11:31,213 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:11:31,214 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:11:31,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:11:31,216 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:11:31,217 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:11:31,218 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:11:31,218 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:11:31,219 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:11:31,219 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:11:31,220 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:11:31,220 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:11:31,220 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:11:31,221 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:11:31,222 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:11:31,222 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:11:31,223 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:11:31,224 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:11:31,224 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:11:31,225 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:11:31,225 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:11:31,226 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:11:31,226 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:11:31,226 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:11:31,227 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:11:31,227 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:11:31,227 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:11:31,228 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:11:31,228 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:11:31,229 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:11:31,230 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:11:31,504 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,506 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:11:31,621 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:11:31,623 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,624 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,625 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,626 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,627 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,628 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,629 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,630 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,630 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:11:31,631 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:11:32,831 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:11:33,299 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:11:33,302 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:11:33,304 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:11:33,340 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 15:11:33,344 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
2023-01-09 15:11:33,349 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:11:33,368 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:11:33,396 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:11:33,689 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 15:11:33,694 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:11:33,698 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 15:11:33,706 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:11:33,709 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:11:33,710 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:11:33,711 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:11:33,779 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:11:33,813 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.952 seconds (JVM running for 5.408)
2023-01-09 15:11:38,157 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:11:38,180 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin getUsers
2023-01-09 15:11:38,312 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End getUsers
2023-01-09 15:11:49,841 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin addPlayers
2023-01-09 15:11:49,894 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End addPlayers
2023-01-09 15:11:59,080 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 15:11:59,085 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 15:12:01,631 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:12:01,632 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:12:10,060 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 15:12:10,062 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 15:12:16,558 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 15:12:16,562 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 15:12:29,782 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin getPlayers
2023-01-09 15:12:29,784 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayers
2023-01-09 15:12:31,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:12:31,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:12:41,448 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Begin getPlayers
2023-01-09 15:12:41,451 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayers
2023-01-09 15:12:47,554 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] Begin getPlayers
2023-01-09 15:12:47,557 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] End getPlayers
2023-01-09 15:13:01,639 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:13:01,639 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:13:31,647 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:13:31,648 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:13:37,881 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:13:37,882 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:13:37,884 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,884 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,885 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,885 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,885 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,886 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,886 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,886 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,887 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,887 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:13:37,887 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:13:37,888 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:22:47,255 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:22:47,260 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 35868 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:22:47,261 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:22:47,262 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:22:48,654 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:22:48,655 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:22:48,655 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:22:48,771 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:22:48,880 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:22:49,283 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:22:49,286 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:22:49,286 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:22:49,287 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:22:49,288 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:22:49,288 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:22:49,289 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:22:49,290 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:22:49,290 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:22:49,291 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:22:49,292 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:22:49,292 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:22:49,293 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:22:49,293 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:22:49,293 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:22:49,294 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:22:49,294 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:22:49,295 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:22:49,295 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:22:49,296 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:22:49,296 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:22:49,296 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:22:49,297 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:22:49,297 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:22:49,298 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:22:49,298 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:22:49,298 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:22:49,299 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:22:49,299 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:22:49,300 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:22:49,302 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:22:49,302 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:22:49,303 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:22:49,303 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:22:49,304 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:22:49,304 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:22:49,304 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:22:49,522 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,524 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:22:49,628 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:22:49,629 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,630 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,631 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,632 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,633 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,634 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,635 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,636 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,637 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:22:49,637 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:22:50,798 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:22:51,222 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:22:51,225 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:22:51,227 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 15:22:51,230 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:22:51,231 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 15:22:51,235 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:22:51,250 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:22:51,273 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:22:51,508 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:22:51,515 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 15:22:51,521 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 15:22:51,528 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 15:22:51,532 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:22:51,533 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:22:51,534 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:22:51,601 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:22:51,634 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.721 seconds (JVM running for 5.182)
2023-01-09 15:23:19,634 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:23:19,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:23:49,650 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:23:49,650 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:24:16,212 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-9] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:24:16,348 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin addUsers
2023-01-09 15:24:16,402 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End addUsers
2023-01-09 15:24:19,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:24:19,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:24:31,469 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Begin addUsers
2023-01-09 15:24:31,472 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] End addUsers
2023-01-09 15:24:44,160 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Begin getUsers
2023-01-09 15:24:44,284 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] End getUsers
2023-01-09 15:24:49,659 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:24:49,659 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:24:54,693 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsersId
2023-01-09 15:24:54,701 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsersId
2023-01-09 15:25:00,455 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin User Username Variable
2023-01-09 15:25:00,469 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Fin User Username Variable
2023-01-09 15:25:15,150 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Begin Rol and Coach
2023-01-09 15:25:15,155 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] End Rol and Coach
2023-01-09 15:25:19,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:25:19,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:25:44,064 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] Begin addPlayers
2023-01-09 15:25:44,075 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End addPlayers
2023-01-09 15:25:49,669 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:25:49,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:25:52,753 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 15:25:52,758 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 15:26:19,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:26:19,681 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:26:25,025 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 15:26:25,028 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 15:26:45,874 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin getUsers
2023-01-09 15:26:45,875 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End getUsers
2023-01-09 15:26:49,693 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:26:49,693 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:27:19,698 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:27:19,699 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:27:21,913 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:27:21,913 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:27:21,915 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,916 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,916 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,916 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,917 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,917 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,918 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,918 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,918 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,919 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:27:21,919 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:27:21,920 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:27:34,841 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:27:34,847 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 13476 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:27:34,848 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:27:34,849 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:27:36,278 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:27:36,279 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:27:36,280 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:27:36,402 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:27:36,512 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:27:36,924 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:27:36,926 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:27:36,928 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:27:36,928 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:27:36,928 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:27:36,928 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:27:36,929 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:27:36,930 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:27:36,930 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:27:36,930 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:27:36,931 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:27:36,932 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:27:36,932 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:27:36,933 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:27:36,934 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:27:36,934 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:27:36,934 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:27:36,935 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:27:36,935 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:27:36,936 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:27:36,936 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:27:36,936 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:27:36,937 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:27:36,937 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:27:36,938 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:27:36,938 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:27:36,938 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:27:36,939 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:27:36,939 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:27:36,940 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:27:36,940 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:27:36,940 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:27:36,941 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:27:36,941 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:27:36,941 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:27:36,942 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:27:36,942 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:27:37,195 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,197 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:27:37,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:27:37,304 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,305 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,306 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,307 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,308 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,310 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,311 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,312 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,313 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:27:37,314 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:27:38,540 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:27:39,010 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 15:27:39,013 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:27:39,015 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:27:39,017 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:27:39,019 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:27:39,023 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:27:39,039 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:27:39,069 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:27:39,284 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:27:39,289 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:27:39,296 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 15:27:39,304 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:27:39,310 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:27:39,311 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:27:39,313 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:27:39,381 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:27:39,415 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.927 seconds (JVM running for 5.411)
2023-01-09 15:27:44,930 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:27:44,968 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin getUsers
2023-01-09 15:27:45,201 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End getUsers
2023-01-09 15:27:59,812 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:27:59,818 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:28:07,309 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:28:07,309 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:28:37,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:28:37,325 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:29:07,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:29:07,327 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:29:18,396 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:29:18,396 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:29:18,398 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,398 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,399 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,400 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,400 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,400 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,401 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,401 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,402 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,402 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:29:18,403 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:29:18,403 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:29:32,843 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:29:32,845 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 34900 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:29:32,847 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:29:32,848 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:29:34,288 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:29:34,290 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:29:34,290 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:29:34,517 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:29:34,659 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:29:35,067 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:29:35,070 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:29:35,071 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:29:35,072 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:29:35,072 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:29:35,073 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:29:35,073 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:29:35,074 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:29:35,074 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:29:35,075 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:29:35,076 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:29:35,076 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:29:35,077 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:29:35,077 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:29:35,078 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:29:35,078 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:29:35,079 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:29:35,079 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:29:35,079 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:29:35,080 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:29:35,080 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:29:35,081 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:29:35,081 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:29:35,082 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:29:35,082 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:29:35,082 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:29:35,083 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:29:35,083 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:29:35,084 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:29:35,084 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:29:35,084 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:29:35,085 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:29:35,085 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:29:35,085 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:29:35,086 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:29:35,086 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:29:35,086 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:29:35,412 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,418 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:29:35,526 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:29:35,528 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,529 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,530 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,532 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,533 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,534 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,534 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,535 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,536 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:29:35,537 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:29:37,807 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:29:38,504 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:29:38,507 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 15:29:38,509 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
2023-01-09 15:29:38,512 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 15:29:38,514 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 15:29:38,517 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:29:38,536 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:29:38,561 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:29:38,761 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:29:38,766 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 15:29:38,770 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 15:29:38,776 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 15:29:38,780 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:29:38,781 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:29:38,782 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:29:38,852 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:29:38,890 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 6.429 seconds (JVM running for 6.976)
2023-01-09 15:29:45,033 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:29:45,060 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 15:29:45,197 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 15:29:45,285 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:465)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.hateoas.server.mvc.RepresentationModelProcessorHandlerMethodReturnValueHandler.handleReturnValue(RepresentationModelProcessorHandlerMethodReturnValueHandler.java:108)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:789)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
Caused by: java.lang.StackOverflowError: null
	at java.base/java.lang.ClassLoader.defineClass1(Native Method)
	at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1012)
	at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:150)
	at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:862)
	at java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:760)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:681)
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:639)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)
	at com.fasterxml.jackson.databind.JsonMappingException.prependPath(JsonMappingException.java:445)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:792)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
2023-01-09 15:29:58,428 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:29:58,430 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:29:58,451 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"])
org.springframework.http.converter.HttpMessageNotWritableException: Could not write JSON: Infinite recursion (StackOverflowError); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:465)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:290)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.hateoas.server.mvc.RepresentationModelProcessorHandlerMethodReturnValueHandler.handleReturnValue(RepresentationModelProcessorHandlerMethodReturnValueHandler.java:108)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:135)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"]->org.hibernate.collection.internal.PersistentBag[0]->com.svalero.happDeporte.domain.Player["userInPlayer"]->com.svalero.happDeporte.domain.User["players"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:789)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
Caused by: java.lang.StackOverflowError: null
	at com.fasterxml.jackson.core.JacksonException.<init>(JacksonException.java:26)
	at com.fasterxml.jackson.core.JsonProcessingException.<init>(JsonProcessingException.java:25)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:22)
	at com.fasterxml.jackson.databind.DatabindException.<init>(DatabindException.java:34)
	at com.fasterxml.jackson.databind.JsonMappingException.<init>(JsonMappingException.java:247)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:789)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:728)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:774)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
2023-01-09 15:30:05,530 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:30:05,530 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:30:21,624 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:30:21,624 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:30:21,626 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,626 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,627 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,627 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,628 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,628 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,628 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,629 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,629 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,629 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:30:21,630 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:30:21,630 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:30:35,693 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:30:35,704 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 39732 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:30:35,706 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:30:35,707 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:30:37,347 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:30:37,348 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:30:37,348 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:30:37,467 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:30:37,574 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:30:37,965 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:30:37,968 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:30:37,968 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:30:37,969 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:30:37,969 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:30:37,970 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:30:37,970 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:30:37,971 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:30:37,971 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:30:37,971 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:30:37,972 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:30:37,973 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:30:37,974 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:30:37,974 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:30:37,975 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:30:37,975 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:30:37,976 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:30:37,976 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:30:37,977 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:30:37,977 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:30:37,978 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:30:37,978 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:30:37,978 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:30:37,979 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:30:37,979 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:30:37,980 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:30:37,980 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:30:37,980 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:30:37,981 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:30:37,981 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:30:37,981 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:30:37,982 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:30:37,982 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:30:37,982 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:30:37,983 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:30:37,983 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:30:37,984 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:30:38,215 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,217 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:30:38,324 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:30:38,326 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,327 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,328 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,329 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,330 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,331 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,332 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,333 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,334 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:30:38,335 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:30:39,520 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:30:39,985 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:30:39,989 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 15:30:39,992 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
2023-01-09 15:30:39,995 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 15:30:39,998 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
2023-01-09 15:30:40,002 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:30:40,028 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:30:40,068 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:30:40,280 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:30:40,285 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:30:40,289 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 15:30:40,295 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 15:30:40,298 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:30:40,299 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:30:40,300 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:30:40,371 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:30:40,406 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.248 seconds (JVM running for 5.737)
2023-01-09 15:30:46,994 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:30:47,018 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 15:30:47,159 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 15:31:04,587 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:31:04,591 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:31:08,338 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:31:08,339 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:31:14,895 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 15:31:14,899 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 15:31:38,355 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:31:38,356 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:32:08,368 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:32:08,368 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:32:38,382 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:32:38,383 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:33:08,390 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:33:08,390 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:33:36,511 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:33:36,511 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:33:36,513 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,514 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,515 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,516 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,516 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,517 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,517 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,518 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,518 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,518 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:33:36,519 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:33:36,519 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:33:49,338 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:33:49,343 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 23784 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:33:49,344 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:33:49,345 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:33:50,674 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:33:50,675 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:33:50,676 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:33:50,794 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:33:50,902 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:33:51,270 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:33:51,272 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:33:51,273 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:33:51,274 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:33:51,274 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:33:51,274 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:33:51,275 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:33:51,275 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:33:51,276 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:33:51,276 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:33:51,277 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:33:51,278 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:33:51,279 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:33:51,279 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:33:51,280 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:33:51,280 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:33:51,280 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:33:51,281 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:33:51,281 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:33:51,282 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:33:51,282 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:33:51,283 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:33:51,283 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:33:51,284 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:33:51,284 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:33:51,285 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:33:51,285 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:33:51,285 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:33:51,286 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:33:51,286 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:33:51,287 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:33:51,287 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:33:51,287 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:33:51,288 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:33:51,288 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:33:51,288 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:33:51,289 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:33:51,527 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,529 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:33:51,636 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:33:51,638 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,639 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,640 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,641 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,642 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,643 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,644 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,645 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,645 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:33:51,646 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:33:52,794 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:33:53,225 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 15:33:53,227 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 15:33:53,229 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 15:33:53,232 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:33:53,234 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 15:33:53,237 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:33:53,253 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:33:53,281 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:33:53,475 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 15:33:53,480 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 15:33:53,485 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 15:33:53,491 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:33:53,495 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:33:53,496 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:33:53,497 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 15:33:53,575 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:33:53,609 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.64 seconds (JVM running for 5.111)
2023-01-09 15:34:01,866 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:34:01,889 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 15:34:02,026 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 15:34:10,141 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsers
2023-01-09 15:34:10,147 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsers
2023-01-09 15:34:16,249 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 15:34:16,252 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 15:34:21,647 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:34:21,648 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:34:51,650 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:34:51,651 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:35:11,808 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin addPlayers
2023-01-09 15:35:11,860 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End addPlayers
2023-01-09 15:35:21,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:35:21,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:35:25,233 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin getPlayers
2023-01-09 15:35:25,237 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayers
2023-01-09 15:35:38,813 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin getUsers
2023-01-09 15:35:38,816 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End getUsers
2023-01-09 15:35:51,673 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:35:51,673 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:36:21,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:36:21,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:36:34,454 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:36:34,455 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:36:34,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,461 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:36:34,461 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:36:34,462 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:36:47,837 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:36:47,845 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 15500 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:36:47,846 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:36:47,847 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:36:49,220 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:36:49,221 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:36:49,222 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:36:49,348 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:36:49,481 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:36:49,910 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:36:49,913 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:36:49,914 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:36:49,914 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:36:49,915 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:36:49,915 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:36:49,916 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:36:49,916 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:36:49,917 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:36:49,918 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:36:49,919 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:36:49,920 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:36:49,920 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:36:49,921 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:36:49,921 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:36:49,922 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:36:49,922 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:36:49,923 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:36:49,923 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:36:49,923 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:36:49,924 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:36:49,924 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:36:49,925 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:36:49,925 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:36:49,926 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:36:49,926 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:36:49,927 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:36:49,927 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:36:49,927 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:36:49,928 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:36:49,928 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:36:49,929 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:36:49,929 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:36:49,930 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:36:49,930 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:36:49,930 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:36:49,932 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:36:50,186 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,188 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:36:50,292 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:36:50,294 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,295 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,296 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,297 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,298 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,299 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,300 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,301 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,302 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:36:50,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:36:51,463 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:36:51,922 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:36:51,926 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:36:51,928 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:36:51,930 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:36:51,931 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:36:51,934 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:36:51,950 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:36:51,972 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:36:52,192 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:36:52,197 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:36:52,201 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 15:36:52,207 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 15:36:52,210 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:36:52,211 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:36:52,212 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:36:52,269 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:36:52,301 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.836 seconds (JVM running for 5.288)
2023-01-09 15:36:59,013 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:36:59,108 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 15:36:59,208 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 15:37:12,711 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsers
2023-01-09 15:37:12,810 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsers
2023-01-09 15:37:17,288 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 15:37:17,297 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 15:37:20,295 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:37:20,296 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:37:50,303 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:37:50,306 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:38:15,102 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:38:15,103 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:38:15,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,105 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,106 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,106 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,107 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,107 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,108 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,108 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,108 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,109 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:38:15,109 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:38:15,110 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:38:28,883 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:38:28,890 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 30376 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:38:28,891 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:38:28,892 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:38:30,338 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:38:30,339 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:38:30,339 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:38:30,462 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:38:30,598 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:38:30,986 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:38:30,989 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:38:30,989 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:38:30,990 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:38:30,990 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:38:30,991 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:38:30,992 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:38:30,993 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:38:30,993 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:38:30,994 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:38:30,995 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:38:30,995 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:38:30,996 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:38:30,996 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:38:30,997 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:38:30,997 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:38:30,998 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:38:30,998 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:38:30,999 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:38:30,999 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:38:31,000 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:38:31,000 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:38:31,001 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:38:31,001 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:38:31,002 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:38:31,002 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:38:31,003 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:38:31,003 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:38:31,003 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:38:31,004 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:38:31,004 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:38:31,004 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:38:31,005 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:38:31,005 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:38:31,006 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:38:31,006 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:38:31,007 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:38:31,269 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,272 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:38:31,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:38:31,382 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,383 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,384 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,386 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,387 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,388 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,389 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,391 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,392 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:38:31,392 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:38:32,585 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:38:33,023 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:38:33,027 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:38:33,029 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/users/{id}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:38:33,032 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 15:38:33,034 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 15:38:33,037 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:38:33,054 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:38:33,078 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:38:33,287 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 15:38:33,292 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:38:33,297 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 15:38:33,304 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:38:33,307 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:38:33,309 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:38:33,310 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:38:33,381 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:38:33,413 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.889 seconds (JVM running for 5.38)
2023-01-09 15:38:49,255 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:38:49,282 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Required URI template variable 'userId' for method parameter type long is not present
org.springframework.web.bind.MissingPathVariableException: Required URI template variable 'userId' for method parameter type long is not present
	at org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:101)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.handleMissingValue(AbstractNamedValueMethodArgumentResolver.java:226)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 15:39:01,387 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:39:01,388 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:39:25,085 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:39:25,086 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:39:25,089 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,089 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,090 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,090 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,091 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,092 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,092 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,093 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,093 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,094 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:39:25,094 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:39:25,094 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:39:38,351 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:39:38,358 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 37960 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:39:38,359 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:39:38,360 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:39:39,755 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:39:39,756 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:39:39,756 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:39:39,885 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:39:39,997 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:39:40,358 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:39:40,361 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:39:40,362 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:39:40,362 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:39:40,363 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:39:40,363 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:39:40,363 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:39:40,364 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:39:40,365 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:39:40,365 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:39:40,366 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:39:40,367 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:39:40,367 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:39:40,368 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:39:40,368 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:39:40,368 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:39:40,369 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:39:40,369 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:39:40,370 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:39:40,370 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:39:40,371 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:39:40,371 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:39:40,372 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:39:40,372 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:39:40,373 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:39:40,373 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:39:40,373 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:39:40,374 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:39:40,374 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:39:40,375 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:39:40,375 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:39:40,376 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:39:40,376 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:39:40,376 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:39:40,377 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:39:40,377 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:39:40,378 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:39:40,611 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,613 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:39:40,716 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:39:40,717 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,718 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,719 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,720 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,721 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,723 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,724 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,724 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,725 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:39:40,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:39:41,857 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:39:42,284 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 15:39:42,287 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 15:39:42,289 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:39:42,291 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 15:39:42,293 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
2023-01-09 15:39:42,296 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:39:42,311 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:39:42,332 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:39:42,527 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 15:39:42,533 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 15:39:42,537 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 15:39:42,543 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:39:42,545 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:39:42,547 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:39:42,549 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 15:39:42,613 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:39:42,647 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.706 seconds (JVM running for 5.192)
2023-01-09 15:40:09,102 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:40:09,190 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 15:40:09,285 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 15:40:10,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:40:10,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:40:40,732 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:40:40,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:41:10,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:41:10,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:41:40,745 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:41:40,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:42:10,758 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:42:10,758 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:42:40,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:42:40,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:43:10,787 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:43:10,788 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:43:40,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:43:40,792 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:44:10,793 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:44:10,793 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:44:40,805 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:44:40,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:45:10,809 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:45:10,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:45:40,825 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:45:40,825 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:46:10,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:46:10,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:46:40,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:46:40,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:47:10,864 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:47:10,864 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:47:40,868 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:47:40,869 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:48:10,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:48:10,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:48:40,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:48:40,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:49:10,911 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:49:10,912 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:49:18,280 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:49:18,281 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:49:18,282 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,283 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,283 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,284 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,284 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,284 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,285 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,285 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,286 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,286 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:49:18,287 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:49:18,287 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:49:31,260 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:49:31,267 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 20440 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:49:31,269 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:49:31,270 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:49:32,643 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:49:32,644 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:49:32,645 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:49:32,764 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:49:32,884 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:49:33,257 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:49:33,260 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:49:33,261 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:49:33,261 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:49:33,262 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:49:33,263 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:49:33,263 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:49:33,264 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:49:33,264 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:49:33,265 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:49:33,266 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:49:33,267 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:49:33,267 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:49:33,268 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:49:33,268 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:49:33,268 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:49:33,269 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:49:33,269 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:49:33,270 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:49:33,270 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:49:33,270 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:49:33,271 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:49:33,271 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:49:33,272 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:49:33,272 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:49:33,272 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:49:33,273 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:49:33,273 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:49:33,274 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:49:33,274 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:49:33,275 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:49:33,275 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:49:33,276 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:49:33,276 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:49:33,276 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:49:33,277 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:49:33,277 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:49:33,525 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,527 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:49:33,634 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:49:33,635 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,636 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,637 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,638 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,639 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,640 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,641 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,642 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,643 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:49:33,643 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:49:34,802 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:49:35,234 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:49:35,238 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 15:49:35,240 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 15:49:35,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:49:35,245 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{POST [/users]}: addUser(User)
2023-01-09 15:49:35,248 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:49:35,266 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:49:35,289 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:49:35,490 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:49:35,496 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 15:49:35,501 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 15:49:35,506 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 15:49:35,509 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:49:35,510 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:49:35,511 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:49:35,577 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:49:35,613 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.728 seconds (JVM running for 5.181)
2023-01-09 15:50:03,654 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:50:03,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:50:14,038 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:50:14,127 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 15:50:14,239 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 15:50:24,885 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:50:24,999 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:50:33,678 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:50:33,678 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:51:01,480 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:51:01,481 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:51:01,484 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,484 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,485 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,486 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,486 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,487 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,487 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,488 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,489 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,489 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:51:01,490 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:51:01,490 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:51:15,720 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:51:15,726 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 39492 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:51:15,727 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:51:15,728 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:51:17,229 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:51:17,231 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:51:17,231 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:51:17,350 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:51:17,459 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:51:17,887 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:51:17,889 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:51:17,890 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:51:17,890 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:51:17,891 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:51:17,891 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:51:17,891 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:51:17,892 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:51:17,892 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:51:17,893 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:51:17,894 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:51:17,894 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:51:17,895 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:51:17,895 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:51:17,895 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:51:17,896 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:51:17,896 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:51:17,897 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:51:17,897 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:51:17,897 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:51:17,897 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:51:17,898 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:51:17,898 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:51:17,899 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:51:17,899 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:51:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:51:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:51:17,900 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:51:17,901 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:51:17,901 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:51:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:51:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:51:17,902 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:51:17,903 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:51:17,903 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:51:17,903 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:51:17,904 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:51:18,156 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,158 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:51:18,261 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:51:18,262 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,263 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,265 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,266 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,267 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,268 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,270 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,271 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,272 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:51:18,272 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:51:19,464 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:51:19,948 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 15:51:19,951 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
2023-01-09 15:51:19,953 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 15:51:19,955 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:51:19,958 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/username/{username}]}: getUser(String)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:51:19,961 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:51:19,977 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:51:19,999 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:51:20,208 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:51:20,213 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 15:51:20,217 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 15:51:20,223 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 15:51:20,229 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:51:20,230 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:51:20,231 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:51:20,301 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:51:20,334 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.016 seconds (JVM running for 5.559)
2023-01-09 15:51:32,096 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:51:43,325 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 15:51:43,425 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 15:51:48,267 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:51:48,268 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:51:54,982 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin addPlayers
2023-01-09 15:51:55,015 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End addPlayers
2023-01-09 15:52:01,420 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 15:52:01,423 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 15:52:18,283 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:52:18,284 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:52:37,207 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 15:52:37,208 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:52:37,211 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,212 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,212 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,213 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,214 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,214 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,215 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,215 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,216 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,216 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 15:52:37,216 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 15:52:37,217 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 15:52:51,122 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 15:52:51,131 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 43788 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 15:52:51,132 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 15:52:51,133 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 15:52:52,560 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 15:52:52,561 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 15:52:52,562 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 15:52:52,686 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 15:52:52,814 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 15:52:53,201 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 15:52:53,203 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 15:52:53,204 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 15:52:53,205 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 15:52:53,205 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 15:52:53,205 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 15:52:53,206 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 15:52:53,206 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 15:52:53,207 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 15:52:53,207 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 15:52:53,208 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 15:52:53,209 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 15:52:53,209 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 15:52:53,210 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 15:52:53,210 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 15:52:53,211 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 15:52:53,211 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 15:52:53,212 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 15:52:53,212 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 15:52:53,213 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 15:52:53,213 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 15:52:53,213 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 15:52:53,214 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 15:52:53,214 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 15:52:53,215 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 15:52:53,215 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 15:52:53,216 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 15:52:53,216 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 15:52:53,217 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 15:52:53,217 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 15:52:53,217 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 15:52:53,218 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 15:52:53,218 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 15:52:53,218 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 15:52:53,219 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 15:52:53,219 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 15:52:53,220 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 15:52:53,462 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,464 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 15:52:53,571 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 15:52:53,573 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,574 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,575 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,576 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,577 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,579 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,580 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,581 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,582 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 15:52:53,582 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:52:54,785 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 15:52:55,236 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 15:52:55,240 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 15:52:55,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 15:52:55,244 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 15:52:55,246 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 15:52:55,250 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 15:52:55,269 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 15:52:55,292 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 15:52:55,500 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 15:52:55,505 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 15:52:55,510 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 15:52:55,517 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 15:52:55,520 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 15:52:55,521 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 15:52:55,522 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 15:52:55,585 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 15:52:55,619 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.852 seconds (JVM running for 5.357)
2023-01-09 15:53:23,587 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:53:23,588 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:53:53,592 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:53:53,593 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:54:23,605 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:54:23,605 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:54:45,009 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 15:54:45,034 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 15:54:45,196 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 15:54:53,615 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:54:53,615 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:55:23,629 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:55:23,630 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:55:53,638 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:55:53,639 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:56:23,654 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:56:23,655 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:56:53,667 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:56:53,667 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:57:23,677 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:57:23,678 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:57:53,682 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:57:53,684 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:57:57,765 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin addPlayers
2023-01-09 15:57:57,822 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End addPlayers
2023-01-09 15:58:23,699 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:58:23,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:58:53,709 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:58:53,710 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:59:23,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:59:23,715 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 15:59:53,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 15:59:53,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:00:23,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:00:23,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:00:53,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:00:53,748 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:01:23,765 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:01:23,765 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:01:53,777 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:01:53,777 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:02:23,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:02:23,783 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:02:53,796 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:02:53,796 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:03:23,805 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:03:23,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:03:53,811 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:03:53,811 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:04:23,827 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:04:23,828 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:04:53,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:04:53,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:05:16,892 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:05:16,893 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:05:16,895 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,895 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,896 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,896 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,897 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,898 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:05:16,899 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:05:16,899 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:05:31,928 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:05:31,935 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 34296 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:05:31,936 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:05:31,938 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:05:33,354 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:05:33,356 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:05:33,356 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:05:33,498 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:05:33,635 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:05:33,999 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:05:34,001 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:05:34,002 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:05:34,002 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:05:34,003 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:05:34,004 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:05:34,004 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:05:34,004 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:05:34,005 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:05:34,005 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:05:34,006 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:05:34,007 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:05:34,007 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:05:34,008 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:05:34,008 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:05:34,009 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:05:34,009 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:05:34,009 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:05:34,011 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:05:34,011 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:05:34,012 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:05:34,012 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:05:34,012 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:05:34,012 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:05:34,012 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:05:34,013 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:05:34,013 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:05:34,013 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:05:34,014 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:05:34,015 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:05:34,015 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:05:34,015 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:05:34,016 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:05:34,016 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:05:34,016 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:05:34,017 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:05:34,017 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:05:34,281 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,283 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:05:34,385 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:05:34,387 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,388 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,389 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,390 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,390 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,391 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,392 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,393 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,394 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:05:34,395 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:05:35,589 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:05:36,044 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:05:36,048 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:05:36,050 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 16:05:36,052 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 16:05:36,054 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/username/{username}]}: getUser(String)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:05:36,057 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:05:36,074 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:05:36,096 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:05:36,313 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:05:36,319 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 16:05:36,323 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 16:05:36,330 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 16:05:36,333 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:05:36,334 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:05:36,336 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:05:36,409 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:05:36,447 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.858 seconds (JVM running for 5.358)
2023-01-09 16:05:45,846 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:05:45,939 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin addPlayers
2023-01-09 16:05:46,039 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:06:04,388 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:06:04,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:06:34,400 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:06:34,400 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:07:02,167 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:07:02,167 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:07:02,171 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,172 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,173 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,174 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,174 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,175 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,176 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,176 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,177 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,178 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:07:02,179 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:07:02,180 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:07:17,580 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:07:17,586 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 11384 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:07:17,587 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:07:17,588 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:07:19,016 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:07:19,016 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:07:19,017 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:07:19,143 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:07:19,267 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:07:19,662 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:07:19,665 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:07:19,665 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:07:19,666 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:07:19,666 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:07:19,667 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:07:19,667 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:07:19,668 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:07:19,668 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:07:19,669 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:07:19,670 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:07:19,670 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:07:19,671 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:07:19,671 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:07:19,672 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:07:19,672 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:07:19,673 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:07:19,673 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:07:19,674 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:07:19,675 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:07:19,675 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:07:19,676 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:07:19,676 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:07:19,676 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:07:19,677 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:07:19,677 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:07:19,678 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:07:19,678 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:07:19,678 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:07:19,679 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:07:19,679 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:07:19,679 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:07:19,680 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:07:19,680 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:07:19,681 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:07:19,681 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:07:19,681 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:07:19,923 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:19,924 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:07:20,029 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:07:20,030 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,032 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,033 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,034 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,035 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,036 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,036 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,037 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,038 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:07:20,039 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:07:21,194 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:07:21,681 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:07:21,685 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:07:21,688 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:07:21,691 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:07:21,695 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:07:21,700 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:07:21,720 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:07:21,749 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:07:21,941 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 16:07:21,948 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 16:07:21,952 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 16:07:21,957 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:07:21,960 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:07:21,961 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:07:21,963 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 16:07:22,027 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:07:22,060 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.838 seconds (JVM running for 5.315)
2023-01-09 16:07:31,653 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:07:31,763 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:07:31,865 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:07:50,041 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:07:50,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:08:16,297 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:08:16,298 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:08:16,300 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,301 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,302 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,303 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,303 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,304 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,305 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,305 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,306 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,307 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:08:16,307 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:08:16,308 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:08:32,365 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:08:32,373 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 20620 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:08:32,375 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:08:32,376 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:08:33,789 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:08:33,790 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:08:33,791 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:08:33,913 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:08:34,025 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:08:34,404 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:08:34,407 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:08:34,407 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:08:34,408 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:08:34,408 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:08:34,409 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:08:34,409 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:08:34,410 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:08:34,410 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:08:34,411 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:08:34,411 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:08:34,412 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:08:34,412 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:08:34,413 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:08:34,414 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:08:34,414 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:08:34,414 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:08:34,415 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:08:34,415 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:08:34,416 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:08:34,440 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:08:34,441 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:08:34,442 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:08:34,443 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:08:34,444 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:08:34,444 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:08:34,445 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:08:34,445 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:08:34,446 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:08:34,446 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:08:34,446 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:08:34,447 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:08:34,447 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:08:34,448 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:08:34,448 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:08:34,448 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:08:34,449 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:08:34,686 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,688 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:08:34,790 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:08:34,792 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,793 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,794 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,795 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,797 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,798 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,800 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,801 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,802 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:08:34,803 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:08:36,016 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:08:36,515 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:08:36,518 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:08:36,521 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 16:08:36,525 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 16:08:36,529 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:08:36,534 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:08:36,553 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:08:36,585 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:08:36,819 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 16:08:36,824 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 16:08:36,829 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
2023-01-09 16:08:36,835 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 16:08:36,839 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:08:36,841 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:08:36,843 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:08:36,915 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:08:36,956 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.976 seconds (JVM running for 5.439)
2023-01-09 16:08:42,690 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:08:42,891 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:08:43,065 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:09:04,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:09:04,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:09:34,819 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:09:34,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:09:40,211 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:09:40,212 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:09:40,214 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,214 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,215 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,215 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,216 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,216 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,217 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,217 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,217 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,218 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:09:40,218 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:09:40,218 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:09:55,403 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:09:55,405 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 28428 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:09:55,407 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:09:55,408 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:09:56,797 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:09:56,798 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:09:56,799 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:09:56,921 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:09:57,027 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:09:57,412 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:09:57,414 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:09:57,415 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:09:57,415 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:09:57,416 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:09:57,416 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:09:57,417 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:09:57,417 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:09:57,418 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:09:57,418 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:09:57,420 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:09:57,421 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:09:57,422 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:09:57,422 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:09:57,422 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:09:57,423 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:09:57,423 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:09:57,424 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:09:57,424 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:09:57,425 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:09:57,425 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:09:57,425 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:09:57,426 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:09:57,426 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:09:57,427 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:09:57,427 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:09:57,428 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:09:57,428 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:09:57,428 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:09:57,429 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:09:57,429 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:09:57,429 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:09:57,430 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:09:57,430 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:09:57,431 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:09:57,431 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:09:57,431 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:09:57,705 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,706 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:09:57,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:09:57,812 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,813 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,814 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,815 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,816 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,817 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,818 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,819 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,820 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:09:57,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:09:58,988 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:09:59,427 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:09:59,431 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 16:09:59,433 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:09:59,435 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 16:09:59,437 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 16:09:59,441 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:09:59,457 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:09:59,481 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:09:59,700 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 16:09:59,705 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
2023-01-09 16:09:59,710 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 16:09:59,717 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:09:59,720 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:09:59,721 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:09:59,723 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 16:09:59,786 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:09:59,819 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.792 seconds (JVM running for 5.259)
2023-01-09 16:10:06,047 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:10:06,197 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin addPlayers
2023-01-09 16:10:06,387 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:10:27,822 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:10:27,822 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:10:55,722 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:10:55,723 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:10:55,725 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,725 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,726 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,726 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,726 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,727 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,727 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,727 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,728 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,728 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:10:55,729 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:10:55,729 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:11:10,296 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:11:10,302 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 3332 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:11:10,303 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:11:10,304 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:11:11,710 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:11:11,712 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:11:11,712 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:11:11,835 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:11:11,943 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:11:12,327 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:11:12,329 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:11:12,330 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:11:12,330 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:11:12,331 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:11:12,331 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:11:12,332 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:11:12,332 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:11:12,333 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:11:12,333 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:11:12,334 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:11:12,335 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:11:12,335 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:11:12,336 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:11:12,336 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:11:12,337 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:11:12,337 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:11:12,337 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:11:12,338 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:11:12,338 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:11:12,339 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:11:12,339 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:11:12,340 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:11:12,340 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:11:12,341 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:11:12,342 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:11:12,342 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:11:12,343 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:11:12,343 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:11:12,343 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:11:12,344 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:11:12,344 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:11:12,345 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:11:12,345 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:11:12,346 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:11:12,346 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:11:12,346 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:11:12,610 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,612 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:11:12,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:11:12,727 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,728 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,729 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,730 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,731 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,732 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,733 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,734 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,735 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:12,736 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:11:13,894 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:11:14,338 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:11:14,342 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:11:14,345 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:11:14,347 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:11:14,349 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:11:14,353 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:11:14,368 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:11:14,391 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:11:14,594 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:11:14,599 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
2023-01-09 16:11:14,604 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 16:11:14,610 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:11:14,614 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:11:14,615 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:11:14,616 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:11:14,679 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:11:14,715 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.776 seconds (JVM running for 5.254)
2023-01-09 16:11:24,621 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:11:24,717 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:11:24,901 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:11:35,370 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:11:35,370 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:11:35,372 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,373 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,373 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,373 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,374 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,374 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,375 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,375 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,376 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,376 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:11:35,377 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:11:35,377 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:11:54,359 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:11:54,364 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 21476 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:11:54,366 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:11:54,367 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:11:55,793 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:11:55,794 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:11:55,795 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:11:55,917 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:11:56,046 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:11:56,443 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:11:56,446 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:11:56,447 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:11:56,447 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:11:56,448 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:11:56,448 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:11:56,449 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:11:56,449 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:11:56,450 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:11:56,451 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:11:56,452 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:11:56,452 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:11:56,453 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:11:56,453 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:11:56,453 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:11:56,454 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:11:56,454 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:11:56,455 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:11:56,455 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:11:56,455 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:11:56,456 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:11:56,456 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:11:56,457 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:11:56,457 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:11:56,458 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:11:56,458 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:11:56,458 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:11:56,459 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:11:56,459 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:11:56,460 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:11:56,460 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:11:56,461 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:11:56,461 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:11:56,462 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:11:56,462 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:11:56,463 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:11:56,463 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:11:56,714 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,716 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:11:56,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:11:56,823 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,824 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,825 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,826 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,827 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,829 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,831 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,832 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,833 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:11:56,834 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:11:58,121 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:11:58,576 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:11:58,580 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:11:58,583 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 16:11:58,585 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 16:11:58,588 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 16:11:58,591 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:11:58,612 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:11:58,634 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:11:58,828 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 16:11:58,833 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 16:11:58,839 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 16:11:58,846 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:11:58,851 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:11:58,852 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:11:58,854 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 16:11:58,924 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:11:58,959 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.963 seconds (JVM running for 5.45)
2023-01-09 16:12:05,816 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:12:05,922 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:12:05,980 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] User not found
com.svalero.happDeporte.exception.UserNotFoundException: User not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:37)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:12:23,382 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin getUsers
2023-01-09 16:12:23,488 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End getUsers
2023-01-09 16:12:26,835 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:12:26,836 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:12:28,800 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin addUsers
2023-01-09 16:12:28,835 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] End addUsers
2023-01-09 16:12:36,433 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin addPlayers
2023-01-09 16:12:36,453 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
	ConstraintViolationImpl{interpolatedMessage='El campo no puede estar en blanco', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo no puede estar en blanco'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:12:56,836 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:12:56,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:13:26,853 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:13:26,853 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:13:38,650 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:13:38,651 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:13:38,652 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,653 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,653 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,653 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,654 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,654 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,655 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,655 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,655 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,656 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:13:38,656 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:13:38,657 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:13:54,359 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:13:54,366 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 36300 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:13:54,367 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:13:54,368 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:13:55,841 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:13:55,842 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:13:55,843 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:13:55,970 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:13:56,079 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:13:56,446 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:13:56,449 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:13:56,450 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:13:56,450 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:13:56,451 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:13:56,451 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:13:56,452 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:13:56,452 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:13:56,453 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:13:56,454 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:13:56,455 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:13:56,455 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:13:56,456 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:13:56,457 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:13:56,457 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:13:56,458 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:13:56,459 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:13:56,459 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:13:56,460 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:13:56,460 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:13:56,461 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:13:56,461 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:13:56,462 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:13:56,462 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:13:56,463 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:13:56,463 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:13:56,463 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:13:56,464 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:13:56,464 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:13:56,465 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:13:56,465 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:13:56,466 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:13:56,466 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:13:56,466 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:13:56,467 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:13:56,468 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:13:56,468 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:13:56,716 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,717 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:13:56,824 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:13:56,825 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,826 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,827 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,828 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,830 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,831 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,833 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,834 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,835 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:13:56,835 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:13:57,982 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:13:58,404 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:13:58,408 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 16:13:58,410 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:13:58,412 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:13:58,415 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 16:13:58,418 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:13:58,434 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:13:58,455 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:13:58,649 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:13:58,656 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 16:13:58,662 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 16:13:58,668 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 16:13:58,674 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:13:58,675 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:13:58,677 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:13:58,747 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:13:58,778 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.796 seconds (JVM running for 5.304)
2023-01-09 16:14:26,836 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:14:26,836 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:14:56,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:14:56,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:15:11,664 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:15:11,688 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin getUsers
2023-01-09 16:15:11,827 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End getUsers
2023-01-09 16:15:20,199 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin addPlayers
2023-01-09 16:15:20,271 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:15:26,842 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:15:26,842 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:15:52,707 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:15:52,707 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:15:52,709 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,710 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,710 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,710 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,711 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,711 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,712 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,712 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,713 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,714 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:15:52,714 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:15:52,714 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:16:06,570 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:16:06,578 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 24788 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:16:06,580 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:16:06,581 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:16:07,967 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:16:07,968 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:16:07,969 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:16:08,091 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:16:08,199 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:16:08,563 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:16:08,566 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:16:08,566 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:16:08,567 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:16:08,567 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:16:08,568 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:16:08,569 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:16:08,569 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:16:08,570 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:16:08,570 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:16:08,571 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:16:08,572 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:16:08,572 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:16:08,573 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:16:08,573 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:16:08,574 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:16:08,574 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:16:08,574 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:16:08,575 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:16:08,575 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:16:08,576 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:16:08,576 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:16:08,577 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:16:08,577 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:16:08,578 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:16:08,578 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:16:08,578 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:16:08,579 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:16:08,579 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:16:08,580 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:16:08,580 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:16:08,580 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:16:08,581 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:16:08,581 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:16:08,581 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:16:08,582 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:16:08,582 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:16:08,816 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,817 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:16:08,932 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:16:08,934 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,935 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,936 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,937 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,938 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,940 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,941 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,942 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,944 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:16:08,944 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:16:10,059 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:16:10,496 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:16:10,500 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 16:16:10,502 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 16:16:10,504 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 16:16:10,506 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:16:10,510 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:16:10,527 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:16:10,555 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:16:10,766 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:16:10,771 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 16:16:10,776 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 16:16:10,782 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 16:16:10,786 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:16:10,787 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:16:10,789 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:16:10,856 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:16:10,892 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.69 seconds (JVM running for 5.181)
2023-01-09 16:16:15,567 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:16:15,731 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:16:15,897 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=dni, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=surname, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:16:38,943 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:16:38,943 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:17:06,369 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:17:06,369 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:17:06,372 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,372 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,373 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,374 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,375 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,376 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,376 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,377 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,377 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,378 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:06,378 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:17:06,379 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:17:19,474 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:17:19,480 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 15340 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:17:19,482 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:17:19,483 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:17:20,812 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:17:20,813 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:17:20,813 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:17:20,928 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:17:21,035 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:17:21,417 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:17:21,419 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:17:21,420 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:17:21,421 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:17:21,421 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:17:21,422 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:17:21,422 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:17:21,423 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:17:21,424 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:17:21,424 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:17:21,425 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:17:21,425 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:17:21,426 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:17:21,426 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:17:21,427 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:17:21,427 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:17:21,428 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:17:21,428 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:17:21,428 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:17:21,429 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:17:21,429 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:17:21,430 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:17:21,430 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:17:21,430 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:17:21,430 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:17:21,431 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:17:21,431 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:17:21,431 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:17:21,433 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:17:21,433 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:17:21,433 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:17:21,434 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:17:21,434 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:17:21,434 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:17:21,434 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:17:21,435 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:17:21,435 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:17:21,669 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,671 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:17:21,781 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:17:21,783 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,784 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,785 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,786 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,787 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,788 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,788 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,789 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,790 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:17:21,790 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:17:22,892 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:17:23,305 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:17:23,308 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:17:23,311 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:17:23,314 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:17:23,316 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:17:23,320 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:17:23,338 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:17:23,365 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:17:23,579 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:17:23,584 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 16:17:23,589 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 16:17:23,595 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 16:17:23,598 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:17:23,599 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:17:23,600 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:17:23,660 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:17:23,692 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.596 seconds (JVM running for 5.068)
2023-01-09 16:17:26,901 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:17:26,988 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin addPlayers
2023-01-09 16:17:27,152 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
javax.validation.ConstraintViolationException: Validation failed for classes [com.svalero.happDeporte.domain.Player] during persist time for groups [javax.validation.groups.Default, ]
List of constraint violations:[
	ConstraintViolationImpl{interpolatedMessage='El campo es obligatorio', propertyPath=name, rootBeanClass=class com.svalero.happDeporte.domain.Player, messageTemplate='El campo es obligatorio'}
]
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:140)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:17:50,747 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:17:50,747 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:17:50,750 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,750 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,751 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,751 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,752 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,752 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,753 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,754 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,754 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,754 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:17:50,755 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:17:50,756 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:18:04,566 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:18:04,573 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 41256 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:18:04,575 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:18:04,576 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:18:05,984 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:18:05,985 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:18:05,985 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:18:06,099 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:18:06,216 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:18:06,610 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:18:06,613 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:18:06,613 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:18:06,614 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:18:06,614 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:18:06,615 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:18:06,615 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:18:06,616 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:18:06,616 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:18:06,616 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:18:06,617 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:18:06,618 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:18:06,618 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:18:06,619 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:18:06,619 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:18:06,620 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:18:06,620 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:18:06,621 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:18:06,621 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:18:06,621 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:18:06,622 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:18:06,622 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:18:06,622 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:18:06,623 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:18:06,623 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:18:06,624 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:18:06,624 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:18:06,624 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:18:06,625 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:18:06,625 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:18:06,625 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:18:06,626 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:18:06,626 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:18:06,626 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:18:06,627 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:18:06,627 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:18:06,628 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:18:06,882 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,884 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:18:06,992 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:18:06,994 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,995 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,996 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,997 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,998 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:06,999 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:07,000 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:07,001 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:07,002 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:18:07,002 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:18:08,329 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:18:08,768 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:18:08,772 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 16:18:08,774 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:18:08,776 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:18:08,779 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:18:08,782 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:18:08,807 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:18:08,829 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:18:09,053 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:18:09,059 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 16:18:09,063 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 16:18:09,069 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 16:18:09,074 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:18:09,075 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:18:09,077 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:18:09,144 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:18:09,177 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.982 seconds (JVM running for 5.448)
2023-01-09 16:18:13,472 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:18:13,589 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:18:13,808 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 16:18:37,008 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:18:37,009 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:19:07,020 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:19:07,021 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:19:37,023 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:19:37,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:20:07,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:20:07,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:20:37,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:20:37,043 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:21:07,058 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:21:07,058 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:21:37,068 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:21:37,069 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:22:07,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:22:07,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:22:37,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:22:37,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:23:07,101 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:23:07,101 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:23:37,105 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:23:37,105 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:24:04,949 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:24:04,949 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:24:04,951 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,952 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,952 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,953 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,953 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,954 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,954 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,955 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:24:04,957 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:24:04,957 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:24:18,018 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:24:18,022 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 38004 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:24:18,023 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:24:18,024 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:24:19,392 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:24:19,393 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:24:19,394 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:24:19,520 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:24:19,630 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:24:19,985 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:24:19,988 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:24:19,988 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:24:19,989 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:24:19,989 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:24:19,990 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:24:19,990 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:24:19,991 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:24:19,991 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:24:19,992 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:24:19,992 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:24:19,993 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:24:19,993 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:24:19,994 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:24:19,994 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:24:19,995 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:24:19,995 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:24:19,995 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:24:19,996 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:24:19,996 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:24:19,997 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:24:19,997 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:24:19,998 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:24:19,998 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:24:19,999 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:24:20,000 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:24:20,000 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:24:20,000 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:24:20,001 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:24:20,001 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:24:20,001 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:24:20,001 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:24:20,002 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:24:20,002 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:24:20,002 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:24:20,003 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:24:20,003 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:24:20,259 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,261 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:24:20,371 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:24:20,372 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,373 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,374 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,375 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,376 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,377 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,377 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,378 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,380 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:24:20,380 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:24:21,556 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:24:21,997 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:24:22,001 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 16:24:22,003 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 16:24:22,005 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 16:24:22,008 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 16:24:22,011 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:24:22,027 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:24:22,049 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:24:22,241 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 16:24:22,246 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
2023-01-09 16:24:22,251 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
2023-01-09 16:24:22,256 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:24:22,259 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:24:22,261 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:24:22,262 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:24:22,323 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:24:22,361 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.726 seconds (JVM running for 5.207)
2023-01-09 16:24:50,374 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:24:50,374 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:25:20,386 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:25:20,387 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:25:23,056 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:25:23,167 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin addPlayers
2023-01-09 16:25:23,268 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End addPlayers
2023-01-09 16:25:50,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:25:50,397 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:26:20,401 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:26:20,402 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:26:25,866 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:26:25,867 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:26:25,869 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,870 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,870 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,871 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,871 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,872 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,872 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,873 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,873 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,873 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:26:25,874 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:26:25,874 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:26:39,536 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:26:39,542 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 32524 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:26:39,543 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:26:39,544 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:26:40,915 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:26:40,916 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:26:40,917 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:26:41,042 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:26:41,157 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:26:41,536 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:26:41,538 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:26:41,539 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:26:41,540 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:26:41,540 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:26:41,541 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:26:41,542 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:26:41,542 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:26:41,543 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:26:41,544 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:26:41,544 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:26:41,545 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:26:41,545 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:26:41,546 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:26:41,546 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:26:41,547 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:26:41,547 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:26:41,547 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:26:41,548 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:26:41,548 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:26:41,549 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:26:41,549 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:26:41,550 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:26:41,550 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:26:41,551 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:26:41,551 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:26:41,551 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:26:41,552 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:26:41,552 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:26:41,553 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:26:41,553 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:26:41,553 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:26:41,554 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:26:41,556 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:26:41,557 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:26:41,557 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:26:41,557 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:26:41,847 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,850 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:26:41,963 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:26:41,965 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,966 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,967 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,969 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,970 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,971 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,973 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,974 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,975 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:26:41,976 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:26:43,211 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:26:43,652 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{DELETE [/clothes/{id}]}: deleteById(long)
2023-01-09 16:26:43,656 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
	{GET [/matches/{id}]}: findById(long)
2023-01-09 16:26:43,657 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
2023-01-09 16:26:43,659 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{GET [/teams/{id}]}: findById(long)
2023-01-09 16:26:43,661 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
2023-01-09 16:26:43,664 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:26:43,679 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:26:43,700 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:26:43,948 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:26:43,955 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 16:26:43,961 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 16:26:43,969 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 16:26:43,972 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:26:43,973 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:26:43,975 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 16:26:44,043 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:26:44,078 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.918 seconds (JVM running for 5.41)
2023-01-09 16:26:55,283 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:26:55,446 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin addPlayers
2023-01-09 16:26:55,605 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.util.Date'. Check configuration for 'birthDate'
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.util.Date'. Check configuration for 'birthDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:116)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:27:11,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:27:11,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:27:41,982 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:27:41,982 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:27:56,691 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:27:56,691 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:27:56,693 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,694 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,695 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,695 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,696 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,696 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,696 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,697 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,698 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,698 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:27:56,699 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:27:56,699 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:28:15,046 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:28:15,052 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 38708 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:28:15,053 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:28:15,055 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:28:16,425 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:28:16,426 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:28:16,426 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:28:16,543 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:28:16,653 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:28:17,043 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:28:17,045 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:28:17,046 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:28:17,046 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:28:17,047 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:28:17,047 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:28:17,048 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:28:17,048 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:28:17,049 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:28:17,049 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:28:17,050 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:28:17,050 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:28:17,051 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:28:17,052 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:28:17,052 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:28:17,052 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:28:17,053 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:28:17,053 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:28:17,054 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:28:17,054 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:28:17,055 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:28:17,055 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:28:17,055 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:28:17,056 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:28:17,056 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:28:17,057 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:28:17,057 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:28:17,058 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:28:17,058 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:28:17,058 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:28:17,059 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:28:17,059 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:28:17,060 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:28:17,060 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:28:17,060 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:28:17,061 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:28:17,061 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:28:17,295 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,297 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:28:17,401 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:28:17,402 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,403 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,404 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,405 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,406 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,407 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,408 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,409 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,410 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:17,410 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:28:18,533 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:28:18,944 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:28:18,947 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 16:28:18,949 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 16:28:18,952 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 16:28:18,954 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
2023-01-09 16:28:18,958 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:28:18,974 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:28:18,995 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:28:19,204 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:28:19,209 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 16:28:19,213 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 16:28:19,219 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 16:28:19,222 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:28:19,222 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:28:19,224 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:28:19,281 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:28:19,319 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.637 seconds (JVM running for 5.105)
2023-01-09 16:28:22,316 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:28:22,446 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:28:22,602 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.util.Date'. Check configuration for 'birthDate'
javax.validation.UnexpectedTypeException: HV000030: No validator could be found for constraint 'javax.validation.constraints.NotBlank' validating type 'java.util.Date'. Check configuration for 'birthDate'
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getExceptionForNullValidator(ConstraintTree.java:116)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.getInitializedConstraintValidator(ConstraintTree.java:162)
	at org.hibernate.validator.internal.engine.constraintvalidation.SimpleConstraintTree.validateConstraints(SimpleConstraintTree.java:54)
	at org.hibernate.validator.internal.engine.constraintvalidation.ConstraintTree.validateConstraints(ConstraintTree.java:75)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.doValidateConstraint(MetaConstraint.java:130)
	at org.hibernate.validator.internal.metadata.core.MetaConstraint.validateConstraint(MetaConstraint.java:123)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateMetaConstraint(ValidatorImpl.java:555)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForSingleDefaultGroupElement(ValidatorImpl.java:518)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForDefaultGroup(ValidatorImpl.java:488)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateConstraintsForCurrentGroup(ValidatorImpl.java:450)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validateInContext(ValidatorImpl.java:400)
	at org.hibernate.validator.internal.engine.ValidatorImpl.validate(ValidatorImpl.java:172)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:116)
	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:80)
	at org.hibernate.action.internal.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:188)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:78)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:645)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:282)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:263)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:317)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:330)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:287)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:193)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:123)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:185)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:128)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:55)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:756)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:742)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.ExtendedEntityManagerCreator$ExtendedEntityManagerInvocationHandler.invoke(ExtendedEntityManagerCreator.java:362)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:311)
	at jdk.proxy2/jdk.proxy2.$Proxy125.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:666)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:289)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:530)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:286)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:640)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:81)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at jdk.proxy2/jdk.proxy2.$Proxy133.save(Unknown Source)
	at com.svalero.happDeporte.service.PlayerServiceImpl.addPlayer(PlayerServiceImpl.java:40)
	at com.svalero.happDeporte.controller.PlayerController.addPlayer(PlayerController.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 16:28:40,658 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:28:40,659 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:28:40,661 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,661 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,662 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,663 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,663 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,664 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,664 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,664 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:28:40,665 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:28:40,665 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:28:55,220 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:28:55,227 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 42512 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:28:55,228 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:28:55,230 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:28:57,254 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:28:57,255 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:28:57,255 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:28:57,378 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:28:57,496 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:28:57,934 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:28:57,938 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:28:57,939 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:28:57,939 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:28:57,940 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:28:57,940 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:28:57,941 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:28:57,941 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:28:57,942 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:28:57,942 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:28:57,943 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:28:57,944 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:28:57,944 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:28:57,945 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:28:57,945 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:28:57,946 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:28:57,946 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:28:57,946 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:28:57,947 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:28:57,947 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:28:57,947 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:28:57,948 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:28:57,948 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:28:57,949 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:28:57,949 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:28:57,950 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:28:57,950 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:28:57,950 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:28:57,951 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:28:57,951 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:28:57,952 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:28:57,952 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:28:57,952 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:28:57,953 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:28:57,953 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:28:57,954 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:28:57,954 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:28:58,203 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,205 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:28:58,310 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:28:58,312 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,313 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,314 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,315 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,316 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,317 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,318 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,319 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,320 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:28:58,321 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:28:59,529 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:28:59,980 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 16:28:59,984 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/matches]}: addMatch(Match)
2023-01-09 16:28:59,986 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 16:28:59,988 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 16:28:59,990 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/{id}]}: getUserId(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 16:28:59,993 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:29:00,009 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:29:00,041 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:29:00,237 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 16:29:00,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
2023-01-09 16:29:00,248 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 16:29:00,255 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 16:29:00,259 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:29:00,260 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:29:00,262 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:29:00,327 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:29:00,367 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.83 seconds (JVM running for 6.65)
2023-01-09 16:29:06,394 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:29:06,545 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:29:06,722 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 16:29:28,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:29:28,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:29:58,318 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:29:58,319 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:30:28,322 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:30:28,322 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:30:58,334 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:30:58,335 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:31:10,176 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin Rol and Coach
2023-01-09 16:31:10,273 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] End Rol and Coach
2023-01-09 16:31:18,264 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.beans.propertyeditors.CustomBooleanEditor.setAsText(CustomBooleanEditor.java:154)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted
2023-01-09 16:31:28,347 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:31:28,348 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:31:30,728 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin getUsers
2023-01-09 16:31:30,733 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End getUsers
2023-01-09 16:31:45,883 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin Rol and Coach
2023-01-09 16:31:45,885 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End Rol and Coach
2023-01-09 16:31:58,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:31:58,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:32:06,050 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] Begin getPlayers
2023-01-09 16:32:06,056 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End getPlayers
2023-01-09 16:32:20,144 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 16:32:20,148 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 16:32:28,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:32:28,354 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:32:33,658 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 16:32:33,663 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 16:32:42,847 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 16:32:42,850 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 16:32:52,738 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 16:32:52,742 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 16:32:58,371 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:32:58,372 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:33:22,396 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayersId
2023-01-09 16:33:22,401 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayersId
2023-01-09 16:33:28,383 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:33:28,384 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:33:58,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:33:58,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:34:28,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:34:28,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:34:44,561 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 16:34:44,562 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:34:44,564 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,565 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,565 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,566 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,566 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,567 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,567 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,568 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,568 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,569 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:34:44,569 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:34:44,570 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 16:35:02,009 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:35:02,012 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 38440 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:35:02,014 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:35:02,016 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:35:03,396 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:35:03,397 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:35:03,398 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:35:03,521 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:35:03,635 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:35:04,002 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:35:04,004 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:35:04,005 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:35:04,005 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:35:04,006 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:35:04,006 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:35:04,007 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:35:04,007 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:35:04,008 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:35:04,008 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:35:04,009 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:35:04,010 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:35:04,010 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:35:04,011 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:35:04,011 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:35:04,011 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:35:04,012 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:35:04,012 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:35:04,013 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:35:04,013 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:35:04,014 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:35:04,014 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:35:04,014 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:35:04,015 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:35:04,016 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:35:04,016 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:35:04,017 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:35:04,017 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:35:04,017 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:35:04,018 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:35:04,018 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:35:04,019 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:35:04,019 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:35:04,019 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:35:04,020 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:35:04,020 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:35:04,020 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:35:04,271 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,273 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:35:04,389 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:35:04,390 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,392 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,393 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,394 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,395 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,396 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,396 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,397 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,398 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:35:04,398 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:35:05,448 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
2023-01-09 16:35:05,451 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 16:35:05,452 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:35:05,453 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,454 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,456 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,457 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,458 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,459 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,460 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,461 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:35:05,704 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:35:05,706 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 16:35:05,709 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 16:35:05,762 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 70 common frames omitted
2023-01-09 16:38:09,308 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:38:09,317 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 24580 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:38:09,319 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:38:09,320 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:38:10,739 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:38:10,741 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:38:10,742 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:38:10,861 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:38:10,968 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:38:11,352 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:38:11,354 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:38:11,355 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:38:11,355 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:38:11,356 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:38:11,356 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:38:11,357 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:38:11,357 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:38:11,358 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:38:11,358 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:38:11,359 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:38:11,359 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:38:11,360 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:38:11,360 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:38:11,361 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:38:11,361 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:38:11,362 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:38:11,362 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:38:11,362 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:38:11,363 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:38:11,363 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:38:11,364 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:38:11,364 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:38:11,364 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:38:11,365 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:38:11,365 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:38:11,366 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:38:11,366 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:38:11,366 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:38:11,367 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:38:11,367 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:38:11,367 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:38:11,368 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:38:11,368 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:38:11,369 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:38:11,369 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:38:11,369 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:38:11,642 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,644 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:38:11,755 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:38:11,757 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,758 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,759 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,760 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,760 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,761 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,763 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,763 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,765 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:38:11,765 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:38:12,857 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
2023-01-09 16:38:12,861 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 16:38:12,862 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:38:12,863 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,864 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,864 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,865 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,865 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,866 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,866 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,866 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,866 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:12,867 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:38:13,079 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:38:13,079 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 16:38:13,081 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 16:38:13,109 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByUserInPlayer() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property userInPlayer unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 70 common frames omitted
2023-01-09 16:40:36,131 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:40:36,136 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 41380 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:40:36,138 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:40:36,138 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:40:37,566 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:40:37,567 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:40:37,568 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:40:37,687 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:40:37,803 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:40:38,203 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:40:38,205 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:40:38,206 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:40:38,206 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:40:38,207 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:40:38,207 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:40:38,208 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:40:38,208 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:40:38,209 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:40:38,209 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:40:38,210 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:40:38,211 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:40:38,211 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:40:38,212 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:40:38,212 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:40:38,212 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:40:38,213 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:40:38,213 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:40:38,214 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:40:38,214 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:40:38,214 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:40:38,215 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:40:38,215 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:40:38,216 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:40:38,216 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:40:38,216 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:40:38,217 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:40:38,217 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:40:38,218 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:40:38,218 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:40:38,219 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:40:38,219 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:40:38,219 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:40:38,220 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:40:38,220 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:40:38,220 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:40:38,221 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:40:38,458 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,460 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:40:38,561 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:40:38,563 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,564 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,565 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,566 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,567 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,568 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,569 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,571 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,572 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:40:38,573 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:40:39,682 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
2023-01-09 16:40:39,686 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 16:40:39,686 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:40:39,688 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,689 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,690 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,691 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,691 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,691 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,692 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,692 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,693 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,693 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 16:40:39,942 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 16:40:39,943 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 16:40:39,945 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 16:40:39,973 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerController': Unsatisfied dependency expressed through field 'playerService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'playerServiceImpl': Unsatisfied dependency expressed through field 'playerRepository'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:659)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:639)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:119)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:399)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 20 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'playerRepository' defined in com.svalero.happDeporte.repository.PlayerRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Invocation of init method failed; nested exception is org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1391)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1311)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:656)
	... 34 common frames omitted
Caused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni(); Reason: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.; nested exception is java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:107)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$mapMethodsToQuery$1(QueryExecutorMethodInterceptor.java:95)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Collections$UnmodifiableCollection$1.forEachRemaining(Collections.java:1061)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1845)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:97)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:87)
	at java.base/java.util.Optional.map(Optional.java:260)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:87)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:365)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:323)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:231)
	at org.springframework.data.util.Lazy.get(Lazy.java:115)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:329)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:144)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 44 common frames omitted
Caused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni()! Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:96)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:119)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:259)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:93)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:103)
	... 66 common frames omitted
Caused by: java.lang.IllegalStateException: Method public abstract java.util.List com.svalero.happDeporte.repository.PlayerRepository.findByDni() expects at least 1 arguments but only found 0. This leaves an operator of type SIMPLE_PROPERTY for property dni unbound.
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.throwExceptionOnArgumentMismatch(PartTreeJpaQuery.java:161)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.validate(PartTreeJpaQuery.java:147)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:90)
	... 70 common frames omitted
2023-01-09 16:41:30,730 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 16:41:30,734 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 30348 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 16:41:30,735 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 16:41:30,736 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 16:41:32,128 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 16:41:32,129 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 16:41:32,129 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 16:41:32,270 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 16:41:32,385 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 16:41:32,765 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 16:41:32,768 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 16:41:32,768 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 16:41:32,769 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 16:41:32,769 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 16:41:32,769 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 16:41:32,770 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 16:41:32,770 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 16:41:32,770 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 16:41:32,771 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 16:41:32,772 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 16:41:32,772 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 16:41:32,773 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 16:41:32,774 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 16:41:32,774 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 16:41:32,775 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 16:41:32,775 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 16:41:32,776 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 16:41:32,776 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 16:41:32,777 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 16:41:32,777 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 16:41:32,778 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 16:41:32,778 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 16:41:32,779 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 16:41:32,779 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 16:41:32,779 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 16:41:32,780 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 16:41:32,780 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 16:41:32,781 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 16:41:32,781 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 16:41:32,781 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 16:41:32,782 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 16:41:32,782 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 16:41:32,782 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 16:41:32,783 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 16:41:32,783 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 16:41:32,784 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 16:41:33,045 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,046 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 16:41:33,151 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 16:41:33,153 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,154 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,155 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,156 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,157 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,158 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,159 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,160 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,161 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 16:41:33,162 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:41:34,346 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 16:41:34,833 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 16:41:34,837 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 16:41:34,839 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 16:41:34,842 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 16:41:34,845 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 16:41:34,849 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 16:41:34,866 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 16:41:34,895 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 16:41:35,083 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 16:41:35,088 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 16:41:35,092 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 16:41:35,098 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 16:41:35,101 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 16:41:35,102 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 16:41:35,103 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 16:41:35,172 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 16:41:35,206 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.837 seconds (JVM running for 5.346)
2023-01-09 16:41:43,946 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 16:41:43,970 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 16:41:44,112 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 16:41:51,385 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 16:41:51,387 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 16:41:59,083 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 16:41:59,086 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 16:42:03,158 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:42:03,159 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:42:14,285 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 16:42:14,287 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 16:42:32,308 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 16:42:32,327 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 16:42:33,168 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:42:33,168 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:43:03,170 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:43:03,170 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:43:33,179 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:43:33,180 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:43:43,227 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] Begin addTeams
2023-01-09 16:43:43,259 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] End addTeams
2023-01-09 16:43:49,543 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-10] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromString(CollectionDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 16:44:03,193 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:44:03,193 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:44:33,207 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:44:33,207 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:45:03,211 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:45:03,211 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:45:33,226 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:45:33,227 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:46:03,230 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:46:03,231 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:46:33,240 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:46:33,240 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:47:03,243 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:47:03,243 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:47:25,362 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-9] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 16:47:33,246 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:47:33,247 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:47:52,550 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] JSON parse error: Cannot coerce empty String ("") to `com.svalero.happDeporte.domain.User` value (but could if coercion was enabled using `CoercionConfig`); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to `com.svalero.happDeporte.domain.User` value (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot coerce empty String ("") to `com.svalero.happDeporte.domain.User` value (but could if coercion was enabled using `CoercionConfig`); nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to `com.svalero.happDeporte.domain.User` value (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot coerce empty String ("") to `com.svalero.happDeporte.domain.User` value (but could if coercion was enabled using `CoercionConfig`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.reportBadCoercion(DeserializationContext.java:1806)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._checkCoercionFail(StdDeserializer.java:1490)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromEmptyString(StdDeserializer.java:325)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer._deserializeFromString(StdDeserializer.java:270)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromString(BeanDeserializerBase.java:1495)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:197)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 16:48:01,803 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.Player` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.Player` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 24] (through reference chain: com.svalero.happDeporte.domain.Clothes["playerInClothes"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.Player` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.Player` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 24] (through reference chain: com.svalero.happDeporte.domain.Clothes["playerInClothes"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.Player` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 9, column: 24] (through reference chain: com.svalero.happDeporte.domain.Clothes["playerInClothes"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 16:48:03,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:48:03,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:48:33,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:48:33,258 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:49:01,983 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-8] Begin addClothes
2023-01-09 16:49:01,989 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-8] End addClothes
2023-01-09 16:49:03,264 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:49:03,265 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:49:33,275 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:49:33,276 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:49:37,246 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-3] Begin getClothes
2023-01-09 16:49:37,251 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-3] End getClothes
2023-01-09 16:50:03,286 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:50:03,286 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:50:33,290 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:50:33,290 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:51:03,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:51:03,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:51:33,311 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:51:33,311 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:52:03,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:52:03,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:52:33,324 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:52:33,324 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:53:03,449 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:53:03,456 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:53:33,462 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:53:33,462 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:54:03,489 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:54:03,490 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:54:33,492 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:54:33,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:55:03,496 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:55:03,496 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:55:33,501 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:55:33,501 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:56:03,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:56:03,512 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:56:33,525 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:56:33,526 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:57:03,537 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:57:03,538 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:57:33,542 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:57:33,542 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:57:42,726 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin addPlayers
2023-01-09 16:57:42,739 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End addPlayers
2023-01-09 16:58:03,548 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:58:03,549 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:58:33,559 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:58:33,559 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:59:03,572 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:59:03,572 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 16:59:33,588 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 16:59:33,588 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:00:03,592 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:00:03,592 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:00:33,605 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:00:33,606 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:01:03,633 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:01:03,704 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:01:33,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:01:33,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:02:03,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:02:03,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:02:33,738 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:02:33,738 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:03:03,744 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:03:03,745 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:03:33,749 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:03:33,749 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:04:03,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:04:03,763 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:04:19,758 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-1] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromString(CollectionDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 17:04:24,244 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-5] Begin getTeams
2023-01-09 17:04:24,250 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-5] End getTeams
2023-01-09 17:04:33,771 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:04:33,772 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:05:03,784 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:05:03,784 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:05:33,798 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:05:33,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:06:03,813 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:06:03,813 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:06:33,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:06:33,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:07:03,827 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:07:03,828 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:07:33,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:07:33,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:08:03,841 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:08:03,841 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:08:15,704 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:08:15,705 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:08:15,707 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,708 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,708 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,708 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,709 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,709 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,710 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,710 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,711 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,712 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:08:15,714 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:08:15,715 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:08:33,456 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:08:33,464 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 884 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:08:33,466 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:08:33,467 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:08:34,928 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:08:34,929 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:08:34,930 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:08:35,059 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:08:35,172 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:08:35,561 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:08:35,564 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:08:35,564 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:08:35,565 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:08:35,565 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:08:35,566 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:08:35,566 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:08:35,567 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:08:35,567 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:08:35,568 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:08:35,569 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:08:35,569 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:08:35,570 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:08:35,571 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:08:35,571 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:08:35,571 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:08:35,572 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:08:35,572 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:08:35,573 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:08:35,573 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:08:35,574 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:08:35,574 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:08:35,574 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:08:35,575 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:08:35,575 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:08:35,576 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:08:35,576 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:08:35,576 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:08:35,578 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:08:35,578 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:08:35,579 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:08:35,579 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:08:35,579 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:08:35,580 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:08:35,580 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:08:35,583 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:08:35,583 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:08:35,848 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,850 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:08:35,958 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:08:35,959 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,960 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,964 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,965 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,966 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,967 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:08:35,968 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:08:37,179 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:08:37,808 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 17:08:37,811 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:08:37,813 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 17:08:37,816 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/teams]}: addTeam(Team)
2023-01-09 17:08:37,818 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 17:08:37,821 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:08:37,837 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:08:37,860 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:08:38,107 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:08:38,112 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 17:08:38,118 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 17:08:38,123 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
2023-01-09 17:08:38,127 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:08:38,128 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:08:38,129 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:08:38,188 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:08:38,228 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.165 seconds (JVM running for 5.645)
2023-01-09 17:08:55,228 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 17:08:55,252 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-2] Begin getTeams
2023-01-09 17:08:55,411 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-2] End getTeams
2023-01-09 17:09:05,967 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:09:05,967 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:09:15,459 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 17:09:35,974 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:09:35,975 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:10:05,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:10:05,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:10:35,984 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:10:35,984 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:11:05,988 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:11:05,988 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:11:35,999 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:11:36,000 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:12:06,012 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:12:06,012 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:12:36,017 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:12:36,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:13:06,021 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:13:06,022 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:13:30,984 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:13:30,985 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:13:30,987 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,987 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,987 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,988 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,988 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,989 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,989 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,990 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,990 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,990 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:13:30,991 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:13:30,991 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:13:47,489 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:13:47,495 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 42032 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:13:47,497 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:13:47,498 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:13:48,839 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:13:48,840 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:13:48,841 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:13:48,957 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:13:49,069 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:13:49,456 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:13:49,459 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:13:49,460 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:13:49,461 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:13:49,461 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:13:49,462 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:13:49,462 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:13:49,463 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:13:49,463 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:13:49,464 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:13:49,465 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:13:49,465 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:13:49,466 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:13:49,466 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:13:49,467 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:13:49,467 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:13:49,467 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:13:49,468 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:13:49,468 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:13:49,469 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:13:49,469 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:13:49,470 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:13:49,470 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:13:49,470 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:13:49,471 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:13:49,471 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:13:49,472 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:13:49,472 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:13:49,472 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:13:49,473 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:13:49,473 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:13:49,474 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:13:49,474 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:13:49,475 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:13:49,475 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:13:49,475 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:13:49,476 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:13:49,727 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,729 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:13:49,844 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:13:49,846 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,847 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,847 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,848 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,849 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,850 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,851 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,852 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,853 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:13:49,854 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:13:51,013 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:13:51,454 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 17:13:51,457 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:13:51,459 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 17:13:51,461 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/teams]}: addTeam(Team)
2023-01-09 17:13:51,463 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
2023-01-09 17:13:51,466 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:13:51,481 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:13:51,503 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:13:51,725 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:13:51,731 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 17:13:51,736 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 17:13:51,742 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
2023-01-09 17:13:51,746 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:13:51,747 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:13:51,748 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:13:51,826 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:13:51,862 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.729 seconds (JVM running for 5.185)
2023-01-09 17:14:19,858 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:14:19,858 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:14:49,861 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:14:49,862 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:15:19,871 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:15:19,872 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:15:49,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:15:49,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:16:19,896 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:16:19,896 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:16:49,900 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:16:49,901 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:17:19,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:17:19,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:17:49,915 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:17:49,915 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:18:19,918 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:18:19,918 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:18:49,929 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:18:49,930 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:19:19,942 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:19:19,943 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:19:49,947 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:19:49,948 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:20:19,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:20:19,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:20:49,961 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:20:49,962 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:21:19,966 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:21:19,967 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:21:27,382 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 17:21:27,464 ERROR com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-2] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.User>` from String value (token `JsonToken.VALUE_STRING`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 14] (through reference chain: com.svalero.happDeporte.domain.Team["users"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer._deserializeFromString(CollectionDeserializer.java:326)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:250)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 17:21:49,758 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-4] Begin getTeams
2023-01-09 17:21:49,897 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-4] End getTeams
2023-01-09 17:21:49,969 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:21:49,970 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:21:54,761 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 17:21:54,771 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 17:22:11,548 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-6] Begin addTeams
2023-01-09 17:22:11,585 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-6] End addTeams
2023-01-09 17:22:19,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:22:19,980 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:22:49,986 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:22:49,987 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:23:00,570 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:23:00,571 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:23:00,573 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,574 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,575 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,575 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,576 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,576 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,577 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,578 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,578 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,579 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:00,579 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:23:00,580 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:23:14,479 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:23:14,487 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 15824 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:23:14,488 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:23:14,489 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:23:15,963 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:23:15,964 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:23:15,965 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:23:16,098 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:23:16,299 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:23:16,752 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:23:16,756 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:23:16,757 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:23:16,757 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:23:16,757 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:23:16,758 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:23:16,758 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:23:16,759 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:23:16,759 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:23:16,760 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:23:16,761 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:23:16,762 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:23:16,762 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:23:16,763 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:23:16,763 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:23:16,764 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:23:16,764 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:23:16,765 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:23:16,765 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:23:16,765 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:23:16,766 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:23:16,766 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:23:16,766 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:23:16,767 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:23:16,767 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:23:16,768 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:23:16,768 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:23:16,768 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:23:16,769 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:23:16,769 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:23:16,770 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:23:16,770 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:23:16,771 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:23:16,771 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:23:16,772 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:23:16,772 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:23:16,772 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:23:17,074 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,076 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:23:17,187 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:23:17,188 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,189 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,190 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,191 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,192 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,193 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,194 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,195 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,196 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:23:17,196 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:23:18,359 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:23:18,813 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 17:23:18,816 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:23:18,819 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getUserInPlayerAndSexAndActive(long,char,boolean)
2023-01-09 17:23:18,820 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
2023-01-09 17:23:18,825 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 17:23:18,826 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:23:18,828 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,828 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,829 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,829 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,829 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,830 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,830 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,830 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,831 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:18,831 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:23:19,118 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:23:19,118 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 17:23:19,120 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 17:23:19,150 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 17:25:55,312 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:25:55,318 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 22948 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:25:55,319 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:25:55,320 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:25:56,671 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:25:56,672 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:25:56,673 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:25:56,789 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:25:56,894 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:25:57,269 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:25:57,271 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:25:57,272 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:25:57,272 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:25:57,273 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:25:57,273 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:25:57,274 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:25:57,274 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:25:57,275 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:25:57,275 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:25:57,276 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:25:57,277 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:25:57,277 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:25:57,278 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:25:57,278 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:25:57,279 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:25:57,279 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:25:57,279 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:25:57,280 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:25:57,280 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:25:57,281 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:25:57,281 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:25:57,282 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:25:57,282 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:25:57,282 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:25:57,283 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:25:57,283 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:25:57,284 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:25:57,284 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:25:57,284 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:25:57,285 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:25:57,285 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:25:57,285 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:25:57,286 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:25:57,286 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:25:57,287 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:25:57,287 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:25:57,526 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,528 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:25:57,639 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:25:57,641 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,642 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,643 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,644 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,644 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,645 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,646 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,647 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,648 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:25:57,649 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:25:58,753 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:25:59,190 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 17:25:59,193 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:25:59,195 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/players/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 17:25:59,197 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/teams]}: addTeam(Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 17:25:59,199 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/user]}: getRolAndCoach(String,boolean)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{POST [/users]}: addUser(User)
2023-01-09 17:25:59,202 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:25:59,218 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:25:59,240 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:25:59,449 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:25:59,454 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 17:25:59,459 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 17:25:59,465 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
2023-01-09 17:25:59,469 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:25:59,470 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:25:59,471 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:25:59,531 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:25:59,565 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.597 seconds (JVM running for 5.046)
2023-01-09 17:26:08,608 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 17:26:08,636 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 17:26:08,782 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 17:26:15,451 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin addPlayers
2023-01-09 17:26:15,497 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End addPlayers
2023-01-09 17:26:27,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:26:27,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:26:57,653 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:26:57,654 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:27:27,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:27:27,666 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:27:57,679 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:27:57,679 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:28:27,694 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:28:27,695 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:28:57,707 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:28:57,707 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:29:27,712 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:29:27,713 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:29:57,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:29:57,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:30:27,732 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:30:27,733 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:30:57,744 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:30:57,745 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:31:27,752 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:31:27,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:31:57,803 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:31:57,803 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:32:27,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:32:27,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:32:57,823 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:32:57,823 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:33:27,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:33:27,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:33:57,855 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:33:57,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:34:27,866 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:34:27,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:34:57,882 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:34:57,882 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:34:58,181 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:34:58,182 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:34:58,184 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,185 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,186 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,186 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,187 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,187 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,187 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,188 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,189 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,189 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:34:58,190 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:34:58,190 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:36:11,227 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:36:11,232 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 11668 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:36:11,233 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:36:11,234 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:36:12,588 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:36:12,589 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:36:12,589 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:36:12,704 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:36:12,811 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:36:13,208 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:36:13,211 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:36:13,212 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:36:13,212 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:36:13,213 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:36:13,213 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:36:13,214 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:36:13,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:36:13,216 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:36:13,216 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:36:13,217 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:36:13,218 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:36:13,218 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:36:13,219 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:36:13,219 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:36:13,220 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:36:13,220 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:36:13,220 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:36:13,221 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:36:13,221 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:36:13,222 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:36:13,222 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:36:13,223 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:36:13,224 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:36:13,224 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:36:13,225 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:36:13,225 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:36:13,226 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:36:13,226 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:36:13,226 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:36:13,227 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:36:13,227 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:36:13,228 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:36:13,230 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:36:13,231 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:36:13,231 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:36:13,232 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:36:13,451 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,453 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:36:13,560 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:36:13,562 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,563 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,564 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,565 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,566 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,568 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,569 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,570 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,570 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:36:13,571 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:36:14,723 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:36:15,139 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 17:36:15,142 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:36:15,144 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 17:36:15,146 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 17:36:15,148 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 17:36:15,151 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:36:15,167 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:36:15,192 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:36:15,424 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 17:36:15,431 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 17:36:15,438 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 17:36:15,444 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 17:36:15,448 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:36:15,449 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:36:15,451 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:36:15,520 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:36:15,553 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.688 seconds (JVM running for 5.173)
2023-01-09 17:36:43,568 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:36:43,569 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:37:13,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:37:13,584 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:37:26,490 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 17:37:26,573 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot deserialize value of type `java.util.ArrayList<com.svalero.happDeporte.domain.Team>` from Integer value (token `JsonToken.VALUE_NUMBER_INT`)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 15] (through reference chain: com.svalero.happDeporte.domain.User["teams"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:59)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1741)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1515)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnexpectedToken(DeserializationContext.java:1462)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.handleNonArray(CollectionDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:252)
	at com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:28)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 17:37:35,965 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin addUsers
2023-01-09 17:37:36,031 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End addUsers
2023-01-09 17:37:43,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:37:43,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:37:49,344 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 17:37:49,438 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 17:38:13,603 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:38:13,604 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:38:20,088 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin addPlayers
2023-01-09 17:38:20,129 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End addPlayers
2023-01-09 17:38:36,347 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-8] Begin addTeams
2023-01-09 17:38:36,359 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-8] End addPlayers
2023-01-09 17:38:43,612 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:38:43,612 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:39:07,706 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] Begin getTeams
2023-01-09 17:39:07,712 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] End getTeams
2023-01-09 17:39:12,060 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-10] Begin getTeamsId
2023-01-09 17:39:12,065 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-10] End getTeamsId
2023-01-09 17:39:13,627 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:39:13,628 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:39:18,760 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin addUsers
2023-01-09 17:39:18,764 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End addUsers
2023-01-09 17:39:43,643 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:39:43,644 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:39:58,776 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-2] Begin getMatches
2023-01-09 17:39:58,779 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-2] End getMatches
2023-01-09 17:40:03,995 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-3] Begin addMatches
2023-01-09 17:40:04,007 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-3] End addMatches
2023-01-09 17:40:13,649 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:40:13,650 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:40:15,036 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:40:15,038 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:40:15,041 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,042 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,043 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,044 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,045 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,046 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,047 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,048 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,049 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,050 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:40:15,051 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:40:15,052 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:43:22,837 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:43:22,842 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 21880 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:43:22,843 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:43:22,844 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:43:24,179 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:43:24,180 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:43:24,181 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:43:24,297 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:43:24,402 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:43:24,763 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:43:24,765 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:43:24,766 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:43:24,766 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:43:24,767 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:43:24,767 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:43:24,768 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:43:24,768 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:43:24,769 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:43:24,770 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:43:24,771 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:43:24,771 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:43:24,771 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:43:24,772 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:43:24,772 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:43:24,773 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:43:24,773 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:43:24,773 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:43:24,774 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:43:24,774 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:43:24,775 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:43:24,775 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:43:24,776 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:43:24,776 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:43:24,777 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:43:24,777 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:43:24,777 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:43:24,778 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:43:24,778 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:43:24,779 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:43:24,779 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:43:24,779 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:43:24,780 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:43:24,780 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:43:24,781 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:43:24,781 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:43:24,781 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:43:25,011 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,013 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:43:25,124 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:43:25,125 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,127 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,128 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,129 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,130 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,132 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,133 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,134 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,136 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:43:25,136 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:43:26,295 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:43:26,725 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{GET [/clothes]}: getClothes()
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 17:43:26,730 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/matches]}: addMatch(Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:43:26,731 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 17:43:26,734 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 17:43:26,736 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
2023-01-09 17:43:26,740 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:43:26,755 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:43:26,783 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:43:26,967 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:43:26,972 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 17:43:26,977 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 17:43:26,983 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 17:43:26,986 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:43:26,987 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:43:26,988 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:43:27,048 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:43:27,080 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.589 seconds (JVM running for 5.045)
2023-01-09 17:43:55,132 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:43:55,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:44:25,150 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:44:25,151 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:44:55,162 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:44:55,162 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:45:25,174 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:45:25,175 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:45:55,179 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:45:55,179 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:46:25,197 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:46:25,199 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:46:55,209 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:46:55,210 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:47:25,212 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:47:25,212 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:47:55,218 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:47:55,218 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:48:25,232 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:48:25,233 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:48:55,240 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:48:55,241 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:49:25,255 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:49:25,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:49:53,260 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:49:53,261 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:49:53,264 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,264 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,265 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,265 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,266 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,266 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,267 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,267 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,267 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,268 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:49:53,268 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:49:53,269 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:50:06,857 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:50:06,863 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 3592 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:50:06,864 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:50:06,866 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:50:08,294 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:50:08,295 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:50:08,296 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:50:08,420 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:50:08,533 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:50:08,913 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:50:08,916 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:50:08,916 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:50:08,917 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:50:08,917 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:50:08,918 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:50:08,918 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:50:08,919 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:50:08,919 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:50:08,920 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:50:08,921 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:50:08,922 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:50:08,922 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:50:08,922 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:50:08,923 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:50:08,923 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:50:08,924 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:50:08,924 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:50:08,925 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:50:08,925 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:50:08,926 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:50:08,927 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:50:08,927 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:50:08,927 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:50:08,927 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:50:08,928 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:50:08,928 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:50:08,928 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:50:08,929 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:50:08,929 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:50:08,930 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:50:08,930 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:50:08,930 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:50:08,931 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:50:08,931 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:50:08,931 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:50:08,932 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:50:09,174 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,176 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:50:09,281 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:50:09,282 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,284 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,285 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,286 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,287 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,288 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,290 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,291 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,293 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:50:09,293 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:50:10,416 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:50:10,840 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 17:50:10,844 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/users/{userId}/matches]}: addMatch(long,Match)
2023-01-09 17:50:10,846 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
2023-01-09 17:50:10,849 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 17:50:10,851 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
2023-01-09 17:50:10,855 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:50:10,872 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:50:10,896 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:50:11,099 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:50:11,104 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 17:50:11,109 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 17:50:11,114 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 17:50:11,117 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:50:11,118 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:50:11,119 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 17:50:11,178 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:50:11,212 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.873 seconds (JVM running for 5.423)
2023-01-09 17:50:39,298 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:50:39,299 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:51:09,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:51:09,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:51:39,324 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:51:39,324 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:52:09,328 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:52:09,328 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:52:39,343 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:52:39,344 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:53:09,350 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:53:09,355 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:53:39,369 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:53:39,373 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:54:09,390 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:54:09,390 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:54:39,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:54:39,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:55:09,413 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:55:09,414 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:55:39,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:55:39,418 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:56:09,422 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:56:09,422 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:56:39,433 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:56:39,433 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:57:09,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:57:09,448 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:57:39,456 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:57:39,457 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:58:09,463 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:58:09,465 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:58:18,002 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 17:58:18,002 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:58:18,004 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,005 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,006 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,006 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,007 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,008 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,009 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,009 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,010 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,010 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 17:58:18,011 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 17:58:18,012 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 17:58:31,245 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 17:58:31,258 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 23596 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 17:58:31,259 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 17:58:31,261 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 17:58:32,722 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 17:58:32,724 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 17:58:32,724 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 17:58:32,845 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 17:58:32,960 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 17:58:33,351 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 17:58:33,354 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 17:58:33,355 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 17:58:33,355 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 17:58:33,356 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 17:58:33,356 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 17:58:33,357 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 17:58:33,358 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 17:58:33,358 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 17:58:33,359 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 17:58:33,360 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 17:58:33,360 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 17:58:33,361 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 17:58:33,361 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 17:58:33,362 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 17:58:33,362 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 17:58:33,363 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 17:58:33,363 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 17:58:33,363 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 17:58:33,364 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 17:58:33,364 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 17:58:33,365 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 17:58:33,365 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 17:58:33,366 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 17:58:33,367 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 17:58:33,367 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 17:58:33,367 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 17:58:33,367 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 17:58:33,367 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 17:58:33,368 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 17:58:33,368 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 17:58:33,368 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 17:58:33,372 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 17:58:33,373 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 17:58:33,373 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 17:58:33,373 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 17:58:33,374 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 17:58:33,618 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,620 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 17:58:33,730 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 17:58:33,731 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,732 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,733 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,734 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,735 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,737 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,738 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,739 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,740 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 17:58:33,740 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:58:35,087 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 17:58:35,534 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 17:58:35,537 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 17:58:35,539 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 17:58:35,542 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 17:58:35,545 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 17:58:35,549 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 17:58:35,567 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 17:58:35,591 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 17:58:35,794 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 17:58:35,800 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 17:58:35,804 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 17:58:35,811 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 17:58:35,814 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 17:58:35,815 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 17:58:35,816 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 17:58:35,877 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 17:58:35,913 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.022 seconds (JVM running for 5.5)
2023-01-09 17:59:00,431 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 17:59:00,513 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-1] Begin addTeams
2023-01-09 17:59:00,603 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-1] End addPlayers
2023-01-09 17:59:03,737 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:59:03,738 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 17:59:11,998 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-3] Begin getMatches
2023-01-09 17:59:12,088 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-3] End getMatches
2023-01-09 17:59:33,739 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 17:59:33,739 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:00:03,742 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:00:03,743 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:00:33,757 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:00:33,758 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:01:03,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:01:03,765 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:01:09,792 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-6] Begin addTeams
2023-01-09 18:01:09,797 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-6] End addPlayers
2023-01-09 18:01:19,156 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] Begin addTeams
2023-01-09 18:01:19,166 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] End addPlayers
2023-01-09 18:01:26,860 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-8] Begin getMatches
2023-01-09 18:01:26,864 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-8] End getMatches
2023-01-09 18:01:33,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:01:33,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:02:03,663 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-9] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 8, column: 23] (through reference chain: com.svalero.happDeporte.domain.Clothes["userInClothes"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 18:02:03,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:02:03,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:02:19,456 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Begin addClothes
2023-01-09 18:02:19,460 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] End addClothes
2023-01-09 18:02:33,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:02:33,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:02:42,648 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 18:02:42,649 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:02:42,650 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,651 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,651 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,652 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,652 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,653 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,653 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,654 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,654 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,655 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:02:42,655 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 18:02:42,656 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 18:16:26,363 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 18:16:26,368 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 25572 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 18:16:26,369 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 18:16:26,370 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 18:16:27,732 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 18:16:27,733 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 18:16:27,734 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 18:16:27,854 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 18:16:27,958 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 18:16:28,328 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 18:16:28,331 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 18:16:28,331 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 18:16:28,332 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 18:16:28,332 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 18:16:28,333 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 18:16:28,333 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 18:16:28,334 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 18:16:28,334 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 18:16:28,335 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 18:16:28,336 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 18:16:28,336 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 18:16:28,337 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 18:16:28,337 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 18:16:28,338 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 18:16:28,338 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 18:16:28,338 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 18:16:28,339 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 18:16:28,339 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 18:16:28,340 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 18:16:28,340 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 18:16:28,340 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 18:16:28,341 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 18:16:28,341 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 18:16:28,342 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 18:16:28,342 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 18:16:28,342 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 18:16:28,343 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 18:16:28,343 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 18:16:28,344 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 18:16:28,344 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 18:16:28,344 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 18:16:28,345 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 18:16:28,345 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 18:16:28,345 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 18:16:28,346 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 18:16:28,346 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 18:16:28,585 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,586 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 18:16:28,700 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 18:16:28,702 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,703 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,703 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,704 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,705 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,706 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,707 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,708 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,709 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:16:28,710 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:16:29,822 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 18:16:30,255 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 18:16:30,260 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
2023-01-09 18:16:30,262 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 18:16:30,265 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 18:16:30,268 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 18:16:30,271 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 18:16:30,286 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 18:16:30,307 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 18:16:30,503 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 18:16:30,508 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 18:16:30,513 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 18:16:30,519 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 18:16:30,523 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 18:16:30,524 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 18:16:30,525 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 18:16:30,585 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 18:16:30,617 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.593 seconds (JVM running for 5.062)
2023-01-09 18:16:47,351 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 18:16:47,377 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsers
2023-01-09 18:16:47,506 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsers
2023-01-09 18:16:52,537 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin getUsersId
2023-01-09 18:16:52,547 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End getUsersId
2023-01-09 18:16:56,783 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin User Username Variable
2023-01-09 18:16:56,800 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Fin User Username Variable
2023-01-09 18:16:58,713 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:16:58,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:17:03,894 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin getUsers
2023-01-09 18:17:03,898 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End getUsers
2023-01-09 18:17:15,945 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Begin addUsers
2023-01-09 18:17:15,976 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] End addUsers
2023-01-09 18:17:28,724 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:17:28,724 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:17:32,038 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Begin User Username Variable
2023-01-09 18:17:32,039 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Fin User Username Variable
2023-01-09 18:17:40,362 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin Rol and Coach
2023-01-09 18:17:40,368 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End Rol and Coach
2023-01-09 18:17:48,927 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.beans.propertyeditors.CustomBooleanEditor.setAsText(CustomBooleanEditor.java:154)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted
2023-01-09 18:17:58,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:17:58,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:18:03,772 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin Rol and Coach
2023-01-09 18:18:03,774 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End Rol and Coach
2023-01-09 18:18:09,783 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin Rol and Coach
2023-01-09 18:18:09,784 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End Rol and Coach
2023-01-09 18:18:19,014 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin Rol and Coach
2023-01-09 18:18:19,016 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End Rol and Coach
2023-01-09 18:18:25,475 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] Begin Rol and Coach
2023-01-09 18:18:25,476 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-5] End Rol and Coach
2023-01-09 18:18:28,737 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:18:28,738 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:18:30,486 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin Rol and Coach
2023-01-09 18:18:30,488 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End Rol and Coach
2023-01-09 18:18:41,925 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Begin getUsers
2023-01-09 18:18:41,927 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] End getUsers
2023-01-09 18:18:58,744 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:18:58,745 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:19:13,082 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] Begin addUsers
2023-01-09 18:19:13,085 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-7] End addUsers
2023-01-09 18:19:18,497 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin getUsers
2023-01-09 18:19:18,500 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End getUsers
2023-01-09 18:19:28,758 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:19:28,759 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:19:28,984 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin Rol and Coach
2023-01-09 18:19:28,986 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End Rol and Coach
2023-01-09 18:19:58,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:19:58,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:20:02,477 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] Begin addPlayers
2023-01-09 18:20:02,487 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End addPlayers
2023-01-09 18:20:11,772 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 18:20:11,790 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 18:20:18,019 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayersId
2023-01-09 18:20:18,024 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayersId
2023-01-09 18:20:28,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:20:28,783 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:20:56,519 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 18:20:56,543 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 18:20:58,797 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:20:58,797 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:21:23,120 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 18:21:23,123 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 18:21:28,801 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:21:28,801 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:21:32,152 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 18:21:32,155 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 18:21:50,395 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] Begin addTeams
2023-01-09 18:21:50,404 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-7] End addPlayers
2023-01-09 18:21:56,217 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-8] Begin getTeams
2023-01-09 18:21:56,228 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-8] End getTeams
2023-01-09 18:21:58,807 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:21:58,807 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:22:28,819 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:22:28,820 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:22:58,825 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:22:58,826 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:23:28,837 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:23:28,838 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:23:58,841 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:23:58,842 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:24:28,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:24:28,856 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:24:58,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:24:58,868 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:25:28,874 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:25:28,874 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:25:58,880 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:25:58,881 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:26:28,888 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:26:28,888 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:26:58,898 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:26:58,899 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:27:10,663 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] Begin getClothes
2023-01-09 18:27:10,667 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] End getClothes
2023-01-09 18:27:28,910 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:27:28,911 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:27:58,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:27:58,914 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:28:28,926 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:28:28,926 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:28:58,933 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:28:58,934 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:29:28,954 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:29:28,955 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:29:58,967 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:29:58,968 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:30:28,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:30:28,977 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:30:58,991 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:30:58,991 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:31:29,005 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:31:29,005 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:31:59,009 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:31:59,009 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:32:29,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:32:29,019 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:32:59,021 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:32:59,022 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:33:29,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:33:29,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:33:59,028 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:33:59,028 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:34:29,030 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:34:29,031 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:34:59,033 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:34:59,034 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:35:29,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:35:29,042 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:35:59,056 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:35:59,056 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:36:29,071 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:36:29,072 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:36:59,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:36:59,087 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:37:29,096 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:37:29,097 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:37:59,107 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:37:59,107 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:38:29,119 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:38:29,120 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:38:59,121 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:38:59,122 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:39:29,136 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:39:29,137 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:39:59,150 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:39:59,151 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:40:29,164 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:40:29,165 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:40:59,174 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:40:59,175 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:41:29,190 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:41:29,190 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:41:59,289 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:41:59,303 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:42:29,305 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:42:29,305 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:42:59,318 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:42:59,318 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:43:29,341 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:43:29,346 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:43:59,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:43:59,353 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:44:29,387 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:44:29,388 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:44:59,400 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:44:59,401 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:45:29,412 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:45:29,414 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:45:44,291 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:45:44,292 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:45:58,707 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:45:58,708 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:45:58,799 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:45:58,799 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:45:58,799 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:45:59,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:45:59,418 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:00,492 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:00,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:00,493 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:06,378 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:06,379 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:07,185 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:07,185 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:07,185 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:08,873 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:08,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:08,873 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:11,643 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:11,643 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:11,643 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:23,780 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:23,781 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:23,781 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:23,782 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection has passed maxLifetime)
2023-01-09 18:46:23,782 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 18:46:23,782 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection closer] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:29,430 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:46:29,430 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:46:59,441 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:46:59,441 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:47:29,455 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:47:29,456 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:47:59,465 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:47:59,466 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:48:29,478 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:48:29,478 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:48:59,481 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:48:59,481 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:49:29,486 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:49:29,487 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:49:59,492 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:49:59,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:50:29,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:50:29,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 18:50:30,312 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 18:50:30,312 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 18:50:30,314 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn10: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,314 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn11: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,315 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn12: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,315 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn13: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,315 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn14: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,316 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn15: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,316 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn16: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,316 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn17: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,316 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn18: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,317 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn19: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 18:50:30,317 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 18:50:30,317 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 19:57:52,255 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 19:57:52,265 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 19052 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 19:57:52,267 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 19:57:52,267 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 19:57:53,714 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 19:57:53,716 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 19:57:53,716 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 19:57:53,837 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 19:57:53,953 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 19:57:54,368 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 19:57:54,370 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 19:57:54,371 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 19:57:54,371 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 19:57:54,372 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 19:57:54,372 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 19:57:54,373 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 19:57:54,373 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 19:57:54,378 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 19:57:54,379 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 19:57:54,380 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 19:57:54,381 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 19:57:54,381 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 19:57:54,382 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 19:57:54,383 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 19:57:54,383 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 19:57:54,384 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 19:57:54,384 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 19:57:54,384 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 19:57:54,385 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 19:57:54,385 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 19:57:54,386 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 19:57:54,386 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 19:57:54,387 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 19:57:54,387 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 19:57:54,387 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 19:57:54,388 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 19:57:54,388 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 19:57:54,388 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 19:57:54,389 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 19:57:54,389 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 19:57:54,390 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 19:57:54,390 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 19:57:54,390 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 19:57:54,391 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 19:57:54,391 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 19:57:54,392 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 19:57:54,658 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,660 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 19:57:54,761 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 19:57:54,762 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,763 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,764 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,765 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,766 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,767 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,768 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,769 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,770 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 19:57:54,770 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 19:57:55,918 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 19:57:56,341 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 19:57:56,344 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 19:57:56,346 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 19:57:56,348 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 19:57:56,351 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users]}: getUsers()
2023-01-09 19:57:56,354 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 19:57:56,370 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 19:57:56,391 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 19:57:56,595 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
2023-01-09 19:57:56,600 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
2023-01-09 19:57:56,607 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 19:57:56,613 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 19:57:56,616 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 19:57:56,618 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 19:57:56,619 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 19:57:56,692 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 19:57:56,727 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.862 seconds (JVM running for 5.348)
2023-01-09 19:58:24,763 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 19:58:24,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 19:58:41,190 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 19:58:41,274 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Begin addClothes
2023-01-09 19:58:41,277 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 19:58:54,773 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 19:58:54,774 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 19:59:24,774 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 19:59:24,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 19:59:51,267 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Begin addClothes
2023-01-09 19:59:51,269 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 19:59:54,783 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 19:59:54,784 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:00:24,796 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:00:24,796 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:00:54,798 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:00:54,798 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:01:24,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:01:24,810 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:01:54,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:01:54,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:02:24,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:02:24,821 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:02:54,825 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:02:54,826 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:03:15,728 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-6] Begin addTeams
2023-01-09 20:03:15,819 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-6] End addPlayers
2023-01-09 20:03:24,839 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:03:24,840 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:03:34,366 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-7] Begin addClothes
2023-01-09 20:03:34,367 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-7] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:03:54,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:03:54,852 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:04:24,866 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:04:24,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:04:54,882 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:04:54,883 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:05:24,896 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:05:24,897 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:05:54,899 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:05:54,899 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:06:24,907 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:06:24,907 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:06:54,918 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:06:54,919 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:07:24,921 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:07:24,922 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:07:54,925 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:07:54,926 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:08:24,930 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:08:24,931 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:08:54,936 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:08:54,936 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:09:24,950 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:09:24,951 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:09:54,965 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:09:54,966 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:10:24,968 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:10:24,968 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:10:54,982 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:10:54,982 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:11:24,997 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:11:24,998 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:11:55,000 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:11:55,002 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:12:25,002 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:12:25,003 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:12:34,680 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 20:12:34,776 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 20:12:55,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:12:55,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:13:25,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:13:25,018 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:13:55,025 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:13:55,025 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:14:25,033 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:14:25,033 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:14:29,827 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (1)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 11, column: 22] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 20:14:41,012 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin modifyPlayers
2023-01-09 20:14:41,017 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Player not found
com.svalero.happDeporte.exception.PlayerNotFoundException: Player not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.modifyPlayer(PlayerServiceImpl.java:53)
	at com.svalero.happDeporte.controller.PlayerController.modifyPlayer(PlayerController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:14:53,355 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-9] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2023-01-09 20:14:55,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:14:55,037 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:15:25,046 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:15:25,046 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:15:55,053 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:15:55,053 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:16:11,396 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-1] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' not supported]
2023-01-09 20:16:25,065 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:16:25,066 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:16:45,699 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin modifyPlayers
2023-01-09 20:16:45,755 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End modifyPlayers
2023-01-09 20:16:55,076 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:16:55,076 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:17:25,091 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:17:25,092 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:17:42,597 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 20:17:55,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:17:55,094 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:18:25,102 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:18:25,103 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:18:55,108 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:18:55,109 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:19:25,117 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:19:25,118 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:19:55,133 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:19:55,133 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:20:25,138 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:20:25,142 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:20:46,545 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 20:20:46,546 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:20:46,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,550 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,550 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,550 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,551 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,551 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:20:46,552 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 20:20:46,552 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 20:21:03,531 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 20:21:03,538 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 36092 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 20:21:03,539 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 20:21:03,540 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 20:21:04,877 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 20:21:04,878 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 20:21:04,879 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 20:21:05,001 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 20:21:05,104 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 20:21:05,462 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 20:21:05,465 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 20:21:05,465 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 20:21:05,466 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 20:21:05,466 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 20:21:05,467 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 20:21:05,467 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 20:21:05,468 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 20:21:05,468 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 20:21:05,469 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 20:21:05,469 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 20:21:05,470 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 20:21:05,470 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 20:21:05,471 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 20:21:05,471 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 20:21:05,472 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 20:21:05,472 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 20:21:05,472 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 20:21:05,473 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 20:21:05,473 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 20:21:05,474 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 20:21:05,474 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 20:21:05,475 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 20:21:05,475 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 20:21:05,476 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 20:21:05,476 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 20:21:05,476 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 20:21:05,477 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 20:21:05,477 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 20:21:05,478 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 20:21:05,478 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 20:21:05,478 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 20:21:05,479 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 20:21:05,479 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 20:21:05,480 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 20:21:05,480 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 20:21:05,480 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 20:21:05,736 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,738 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 20:21:05,841 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 20:21:05,843 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,844 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,845 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,846 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,847 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,848 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,849 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,851 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,852 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:21:05,852 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:21:07,026 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 20:21:07,508 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 20:21:07,512 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 20:21:07,514 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 20:21:07,516 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 20:21:07,518 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 20:21:07,521 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 20:21:07,537 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 20:21:07,559 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 20:21:07,769 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 20:21:07,774 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 20:21:07,780 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 20:21:07,786 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 20:21:07,789 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 20:21:07,791 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 20:21:07,792 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 20:21:07,853 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 20:21:07,885 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.697 seconds (JVM running for 5.154)
2023-01-09 20:21:23,870 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 20:21:24,020 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2); nested exception is com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of `com.svalero.happDeporte.domain.User` (although at least one Creator exists): no int/Int-argument constructor/factory method to deserialize from Number value (2)
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 10, column: 21] (through reference chain: com.svalero.happDeporte.domain.Player["userInPlayer"])
	at com.fasterxml.jackson.databind.exc.MismatchedInputException.from(MismatchedInputException.java:63)
	at com.fasterxml.jackson.databind.DeserializationContext.reportInputMismatch(DeserializationContext.java:1728)
	at com.fasterxml.jackson.databind.DeserializationContext.handleMissingInstantiator(DeserializationContext.java:1353)
	at com.fasterxml.jackson.databind.deser.ValueInstantiator.createFromInt(ValueInstantiator.java:324)
	at com.fasterxml.jackson.databind.deser.std.StdValueInstantiator.createFromInt(StdValueInstantiator.java:376)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromNumber(BeanDeserializerBase.java:1442)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeOther(BeanDeserializer.java:199)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:187)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 51 common frames omitted
2023-01-09 20:21:32,247 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin modifyPlayers
2023-01-09 20:21:32,365 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End modifyPlayers
2023-01-09 20:21:35,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:21:35,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:22:05,861 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:22:05,862 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:22:35,865 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:22:35,866 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:23:05,866 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:23:05,867 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:23:35,871 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:23:35,872 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:23:55,941 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 20:23:55,942 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:23:55,944 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,945 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,945 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,946 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,946 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,947 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,947 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,948 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,948 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,949 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:23:55,949 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 20:23:55,950 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 20:24:09,109 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 20:24:09,116 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 18860 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 20:24:09,118 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 20:24:09,119 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 20:24:10,451 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 20:24:10,452 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 20:24:10,452 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 20:24:10,569 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 20:24:10,680 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 20:24:11,051 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 20:24:11,053 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 20:24:11,054 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 20:24:11,054 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 20:24:11,055 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 20:24:11,055 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 20:24:11,056 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 20:24:11,056 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 20:24:11,057 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 20:24:11,057 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 20:24:11,058 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 20:24:11,058 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 20:24:11,059 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 20:24:11,059 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 20:24:11,060 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 20:24:11,060 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 20:24:11,061 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 20:24:11,061 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 20:24:11,062 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 20:24:11,062 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 20:24:11,062 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 20:24:11,063 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 20:24:11,063 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 20:24:11,064 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 20:24:11,064 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 20:24:11,065 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 20:24:11,065 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 20:24:11,065 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 20:24:11,066 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 20:24:11,066 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 20:24:11,067 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 20:24:11,067 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 20:24:11,067 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 20:24:11,068 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 20:24:11,068 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 20:24:11,069 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 20:24:11,069 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 20:24:11,284 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,285 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 20:24:11,401 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 20:24:11,403 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,404 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,404 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,405 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,406 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,407 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,408 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,409 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,411 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:24:11,411 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:24:12,541 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 20:24:12,973 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 20:24:12,976 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 20:24:12,979 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
2023-01-09 20:24:12,981 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 20:24:12,983 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 20:24:12,986 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 20:24:13,005 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 20:24:13,035 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 20:24:13,223 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 20:24:13,227 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 20:24:13,233 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 20:24:13,238 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 20:24:13,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 20:24:13,243 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 20:24:13,245 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 20:24:13,311 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 20:24:13,344 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.598 seconds (JVM running for 5.066)
2023-01-09 20:24:41,413 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:24:41,414 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:25:11,420 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:25:11,421 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:25:41,423 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:25:41,424 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:26:09,920 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 20:26:09,921 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:26:09,923 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,923 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,924 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,924 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,925 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,925 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,926 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,926 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,927 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,927 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:26:09,927 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 20:26:09,928 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 20:26:28,668 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 20:26:28,675 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 36016 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 20:26:28,677 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 20:26:28,678 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 20:26:30,022 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 20:26:30,023 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 20:26:30,023 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 20:26:30,143 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 20:26:30,249 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 20:26:30,628 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 20:26:30,631 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 20:26:30,631 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 20:26:30,632 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 20:26:30,632 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 20:26:30,632 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 20:26:30,633 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 20:26:30,633 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 20:26:30,634 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 20:26:30,634 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 20:26:30,635 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 20:26:30,635 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 20:26:30,636 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 20:26:30,636 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 20:26:30,637 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 20:26:30,637 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 20:26:30,638 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 20:26:30,638 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 20:26:30,639 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 20:26:30,639 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 20:26:30,640 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 20:26:30,640 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 20:26:30,640 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 20:26:30,641 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 20:26:30,641 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 20:26:30,641 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 20:26:30,641 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 20:26:30,642 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 20:26:30,643 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 20:26:30,647 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 20:26:30,648 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 20:26:30,648 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 20:26:30,649 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 20:26:30,649 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 20:26:30,649 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 20:26:30,650 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 20:26:30,650 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 20:26:30,899 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:30,901 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 20:26:31,006 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 20:26:31,007 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,009 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,009 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,010 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,011 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,012 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,013 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,014 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,015 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:26:31,016 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:26:32,145 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 20:26:32,563 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 20:26:32,566 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 20:26:32,568 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 20:26:32,570 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 20:26:32,573 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 20:26:32,576 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 20:26:32,592 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 20:26:32,613 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 20:26:32,822 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 20:26:32,827 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 20:26:32,831 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 20:26:32,837 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 20:26:32,840 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 20:26:32,842 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 20:26:32,843 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 20:26:32,900 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 20:26:32,932 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.632 seconds (JVM running for 5.098)
2023-01-09 20:26:49,558 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 20:26:49,686 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin modifyPlayers
2023-01-09 20:26:49,747 ERROR com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Player not found
com.svalero.happDeporte.exception.PlayerNotFoundException: Player not found
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.svalero.happDeporte.service.PlayerServiceImpl.modifyPlayer(PlayerServiceImpl.java:53)
	at com.svalero.happDeporte.controller.PlayerController.modifyPlayer(PlayerController.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:920)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:699)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:27:01,014 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:27:01,014 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:27:02,904 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin addUsers
2023-01-09 20:27:02,942 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End addUsers
2023-01-09 20:27:12,007 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin addPlayers
2023-01-09 20:27:12,037 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End addPlayers
2023-01-09 20:27:17,518 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin getPlayers
2023-01-09 20:27:17,616 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayers
2023-01-09 20:27:31,020 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:27:31,021 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:27:54,765 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-5] Begin addClothes
2023-01-09 20:27:54,766 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-5] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:28:01,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:28:01,024 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:28:31,033 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:28:31,034 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:28:53,278 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-9] Begin addClothes
2023-01-09 20:28:53,279 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-9] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:29:01,036 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:29:01,037 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:29:07,060 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-2] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 20:29:31,054 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:29:31,055 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:30:01,070 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:30:01,071 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:30:31,079 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:30:31,080 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:31:01,093 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:31:01,094 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:31:31,108 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:31:31,108 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:32:01,122 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:32:01,123 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:32:31,126 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:32:31,127 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:33:01,141 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:33:01,142 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:33:31,149 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:33:31,149 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:34:01,164 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:34:01,165 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:34:31,171 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:34:31,172 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:35:01,188 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:35:01,188 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:35:28,829 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Begin getPlayers
2023-01-09 20:35:28,832 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayers
2023-01-09 20:35:31,199 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:35:31,199 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:35:34,279 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Begin getUsers
2023-01-09 20:35:34,285 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] End getUsers
2023-01-09 20:35:39,497 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-2] Begin getTeams
2023-01-09 20:35:39,500 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-2] End getTeams
2023-01-09 20:35:47,548 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] Begin addTeams
2023-01-09 20:35:47,555 DEBUG com.svalero.happDeporte.controller.TeamController [http-nio-8080-exec-9] End addPlayers
2023-01-09 20:36:01,207 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:36:01,208 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:36:12,650 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-4] Begin addTeams
2023-01-09 20:36:12,661 DEBUG com.svalero.happDeporte.controller.MatchController [http-nio-8080-exec-4] End addPlayers
2023-01-09 20:36:23,912 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-10] Begin addClothes
2023-01-09 20:36:23,913 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-10] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:36:31,216 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:36:31,216 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:37:01,230 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:37:01,230 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:37:31,236 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:37:31,237 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:38:01,242 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:38:01,243 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:38:31,253 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:38:31,254 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:39:01,256 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:39:01,257 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:39:31,271 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:39:31,272 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:40:01,287 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:40:01,287 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:40:31,290 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:40:31,291 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:41:01,294 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:41:01,294 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:41:26,354 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-9] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 20:41:31,295 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:41:31,296 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:41:34,844 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Begin addClothes
2023-01-09 20:41:34,845 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:35)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:42:01,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:42:01,302 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:42:31,311 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:42:31,312 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:43:01,314 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:43:01,314 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:43:31,326 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:43:31,326 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:44:01,337 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:44:01,338 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:44:31,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:44:31,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:45:01,362 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:45:01,363 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:45:31,369 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:45:31,370 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:46:01,371 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:46:01,372 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:46:04,346 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayersId
2023-01-09 20:46:04,349 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End getPlayersId
2023-01-09 20:46:31,382 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:46:31,383 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:46:32,634 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin getPlayers
2023-01-09 20:46:32,636 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End getPlayers
2023-01-09 20:46:56,092 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End getPlayersId
2023-01-09 20:46:56,094 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End getPlayersId
2023-01-09 20:47:01,387 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:47:01,388 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:47:31,393 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:47:31,393 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:48:01,401 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:48:01,402 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:48:31,416 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:48:31,416 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:49:01,424 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:49:01,424 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:49:31,429 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:49:31,430 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:50:01,434 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:50:01,435 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:50:31,446 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:50:31,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:51:01,453 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:51:01,454 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:51:31,461 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:51:31,461 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:51:58,890 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 20:51:58,891 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:51:58,893 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,893 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,894 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,894 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,894 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,895 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,895 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,895 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,896 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,896 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:51:58,896 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 20:51:58,898 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 20:52:12,579 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 20:52:12,582 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 972 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 20:52:12,585 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 20:52:12,587 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 20:52:15,450 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 20:52:15,500 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 20:52:15,501 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 20:52:15,739 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 20:52:15,973 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 20:52:16,396 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 20:52:16,398 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 20:52:16,399 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 20:52:16,399 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 20:52:16,400 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 20:52:16,400 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 20:52:16,401 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 20:52:16,401 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 20:52:16,402 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 20:52:16,402 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 20:52:16,403 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 20:52:16,403 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 20:52:16,404 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 20:52:16,404 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 20:52:16,405 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 20:52:16,405 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 20:52:16,405 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 20:52:16,406 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 20:52:16,406 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 20:52:16,407 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 20:52:16,407 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 20:52:16,407 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 20:52:16,408 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 20:52:16,408 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 20:52:16,408 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 20:52:16,409 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 20:52:16,409 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 20:52:16,410 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 20:52:16,410 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 20:52:16,410 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 20:52:16,411 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 20:52:16,411 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 20:52:16,411 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 20:52:16,412 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 20:52:16,412 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 20:52:16,412 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 20:52:16,413 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 20:52:16,637 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,639 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 20:52:16,748 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 20:52:16,750 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,751 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,752 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,752 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,753 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,754 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,755 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,756 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,757 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:52:16,757 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:52:17,872 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 20:52:18,306 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 20:52:18,310 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
2023-01-09 20:52:18,312 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 20:52:18,314 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 20:52:18,316 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
2023-01-09 20:52:18,318 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 20:52:18,334 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 20:52:18,354 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 20:52:18,588 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 20:52:18,593 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 20:52:18,597 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 20:52:18,603 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 20:52:18,606 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 20:52:18,607 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 20:52:18,608 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 20:52:18,696 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 20:52:18,727 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 6.836 seconds (JVM running for 7.512)
2023-01-09 20:52:25,157 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-3] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 20:52:25,174 WARN org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver [http-nio-8080-exec-3] Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported]
2023-01-09 20:52:36,253 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Begin addClothes
2023-01-09 20:52:36,265 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-2] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:40)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:52:46,754 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:52:46,754 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:53:16,759 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:53:16,760 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:53:46,773 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:53:46,775 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:54:16,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:54:16,792 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:54:46,794 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:54:46,795 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:55:16,831 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:55:16,842 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:55:46,851 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:55:46,852 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:56:16,860 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:56:16,861 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:56:27,024 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 20:56:27,025 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:56:27,027 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,028 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,029 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,029 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,029 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,030 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,030 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,030 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,030 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,031 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 20:56:27,031 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 20:56:27,031 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 20:56:40,908 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 20:56:40,917 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 29492 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 20:56:40,918 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 20:56:40,919 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 20:56:42,354 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 20:56:42,355 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 20:56:42,355 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 20:56:42,479 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 20:56:42,599 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 20:56:43,002 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 20:56:43,005 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 20:56:43,005 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 20:56:43,005 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 20:56:43,006 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 20:56:43,006 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 20:56:43,007 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 20:56:43,007 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 20:56:43,008 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 20:56:43,009 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 20:56:43,011 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 20:56:43,012 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 20:56:43,012 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 20:56:43,012 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 20:56:43,013 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 20:56:43,013 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 20:56:43,014 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 20:56:43,014 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 20:56:43,015 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 20:56:43,015 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 20:56:43,015 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 20:56:43,016 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 20:56:43,016 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 20:56:43,017 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 20:56:43,017 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 20:56:43,017 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 20:56:43,018 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 20:56:43,018 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 20:56:43,019 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 20:56:43,019 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 20:56:43,019 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 20:56:43,020 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 20:56:43,020 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 20:56:43,020 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 20:56:43,020 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 20:56:43,020 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 20:56:43,025 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 20:56:43,280 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,282 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 20:56:43,383 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 20:56:43,385 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,386 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,387 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,388 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,389 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,390 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,391 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,392 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,393 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 20:56:43,394 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:56:44,589 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 20:56:45,049 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 20:56:45,053 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 20:56:45,055 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 20:56:45,057 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 20:56:45,061 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
2023-01-09 20:56:45,064 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 20:56:45,081 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 20:56:45,103 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 20:56:45,314 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 20:56:45,319 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 20:56:45,325 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 20:56:45,332 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
2023-01-09 20:56:45,336 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 20:56:45,370 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 20:56:45,373 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 20:56:45,443 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 20:56:45,482 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.948 seconds (JVM running for 5.459)
2023-01-09 20:56:53,482 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 20:56:53,763 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] Begin addClothes
2023-01-09 20:56:53,788 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:40)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 20:57:13,384 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:57:13,385 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:57:14,208 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Begin addClothes
2023-01-09 20:57:14,268 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] End addClothes
2023-01-09 20:57:43,399 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:57:43,399 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:57:47,681 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-10] Begin getClothes
2023-01-09 20:57:47,810 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-10] End getClothes
2023-01-09 20:58:13,405 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:58:13,406 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:58:43,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:58:43,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:59:13,432 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:59:13,432 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 20:59:43,446 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 20:59:43,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:00:13,454 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:00:13,455 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:00:43,457 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:00:43,459 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:01:13,471 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:01:13,471 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:01:43,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:01:43,476 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:02:13,485 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:02:13,485 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:02:43,489 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:02:43,489 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:03:13,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:03:13,500 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:03:43,507 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:03:43,508 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:04:13,516 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:04:13,516 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:04:43,526 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:04:43,527 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:04:50,074 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 21:04:50,074 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:04:50,076 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,076 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,077 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,077 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,078 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,078 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,079 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,079 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,079 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,080 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:04:50,080 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:04:50,081 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 21:05:06,892 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:05:06,897 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 4108 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:05:06,898 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:05:06,899 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:05:08,272 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:05:08,273 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:05:08,274 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:05:08,401 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:05:08,535 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:05:08,941 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:05:08,944 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:05:08,944 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:05:08,945 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:05:08,945 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:05:08,946 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:05:08,946 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:05:08,947 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:05:08,948 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:05:08,948 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:05:08,949 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:05:08,950 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:05:08,950 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:05:08,951 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:05:08,951 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:05:08,952 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:05:08,952 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:05:08,953 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:05:08,954 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:05:08,954 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:05:08,955 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:05:08,955 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:05:08,956 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:05:08,956 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:05:08,957 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:05:08,958 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:05:08,958 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:05:08,959 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:05:08,959 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:05:08,960 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:05:08,961 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:05:08,961 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:05:08,962 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:05:08,962 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:05:08,963 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:05:08,963 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:05:08,963 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:05:09,214 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,216 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:05:09,323 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:05:09,324 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,325 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,326 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,327 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,328 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,329 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,330 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,331 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,333 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:05:09,333 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:05:10,551 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:05:10,998 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 21:05:11,001 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 21:05:11,004 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getPlayers()
2023-01-09 21:05:11,006 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 21:05:11,008 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 21:05:11,011 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:05:11,026 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:05:11,047 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:05:11,240 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 21:05:11,245 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 21:05:11,250 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
2023-01-09 21:05:11,255 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 21:05:11,258 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:05:11,259 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:05:11,260 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 21:05:11,316 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:05:11,347 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.815 seconds (JVM running for 5.959)
2023-01-09 21:05:16,952 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:05:16,985 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 21:05:17,121 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 21:05:31,547 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-3] Begin getClothes
2023-01-09 21:05:31,558 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-3] End getClothes
2023-01-09 21:05:39,336 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:05:39,338 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:05:51,376 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-5] Begin addClothes
2023-01-09 21:05:51,379 ERROR com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-5] Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
java.lang.NullPointerException: Cannot invoke "com.svalero.happDeporte.repository.PlayerRepository.findById(Object)" because "this.playerRepository" is null
	at com.svalero.happDeporte.service.ClothesServiceImpl.addClothes(ClothesServiceImpl.java:40)
	at com.svalero.happDeporte.controller.ClothesController.addClothes(ClothesController.java:52)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:696)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-01-09 21:06:09,351 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:06:09,352 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:06:39,358 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:06:39,358 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:06:58,949 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 21:06:58,949 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:06:58,952 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,952 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,954 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,955 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,956 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,957 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,957 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,958 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,959 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:06:58,959 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:06:58,960 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 21:07:12,987 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:07:12,992 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 38976 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:07:12,993 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:07:12,994 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:07:14,329 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:07:14,331 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:07:14,331 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:07:14,453 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:07:14,566 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:07:14,929 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:07:14,931 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:07:14,932 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:07:14,932 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:07:14,933 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:07:14,933 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:07:14,933 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:07:14,934 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:07:14,934 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:07:14,935 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:07:14,935 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:07:14,936 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:07:14,937 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:07:14,937 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:07:14,938 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:07:14,938 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:07:14,938 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:07:14,939 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:07:14,939 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:07:14,940 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:07:14,940 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:07:14,941 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:07:14,941 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:07:14,942 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:07:14,942 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:07:14,942 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:07:14,943 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:07:14,943 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:07:14,944 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:07:14,944 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:07:14,944 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:07:14,945 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:07:14,945 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:07:14,946 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:07:14,946 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:07:14,946 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:07:14,947 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:07:15,178 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,180 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:07:15,283 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:07:15,285 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,286 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,287 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,288 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,289 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,290 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,291 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,292 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,293 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:07:15,294 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:07:16,417 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:07:16,850 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:07:16,853 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 21:07:16,856 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 21:07:16,858 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 21:07:16,861 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{POST [/users]}: addUser(User)
2023-01-09 21:07:16,864 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:07:16,880 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:07:16,901 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:07:17,097 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 21:07:17,102 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
2023-01-09 21:07:17,107 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 21:07:17,113 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 21:07:17,116 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:07:17,117 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:07:17,118 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 21:07:17,179 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:07:17,215 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.58 seconds (JVM running for 5.051)
2023-01-09 21:07:24,713 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:07:24,805 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] Begin addClothes
2023-01-09 21:07:24,965 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-1] End addClothes
2023-01-09 21:07:45,284 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:07:45,285 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:08:03,028 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 21:08:03,029 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:08:03,031 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,031 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,032 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,033 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,033 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,034 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,034 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,035 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,035 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,035 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:08:03,036 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:08:03,037 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 21:09:14,412 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:09:14,419 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 43776 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:09:14,420 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:09:14,420 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:09:15,764 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:09:15,765 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:09:15,766 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:09:15,884 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:09:16,007 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:09:16,383 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:09:16,386 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:09:16,386 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:09:16,387 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:09:16,387 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:09:16,387 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:09:16,388 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:09:16,388 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:09:16,389 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:09:16,389 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:09:16,390 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:09:16,390 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:09:16,391 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:09:16,391 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:09:16,392 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:09:16,392 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:09:16,393 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:09:16,393 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:09:16,393 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:09:16,394 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:09:16,394 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:09:16,395 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:09:16,395 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:09:16,396 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:09:16,396 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:09:16,396 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:09:16,396 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:09:16,397 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:09:16,397 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:09:16,397 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:09:16,398 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:09:16,398 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:09:16,398 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:09:16,399 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:09:16,399 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:09:16,400 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:09:16,400 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:09:16,632 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,634 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:09:16,735 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:09:16,737 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,738 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,739 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,740 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,741 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,742 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,743 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,744 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,744 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:09:16,745 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:09:17,898 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:09:18,328 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:09:18,331 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 21:09:18,334 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
2023-01-09 21:09:18,335 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{DELETE [/teams/{id}]}: deleteTeam(long)
2023-01-09 21:09:18,337 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users/username/{username}]}: getUser(String)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users]}: getUsers()
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 21:09:18,341 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:09:18,356 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:09:18,377 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:09:18,575 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 21:09:18,581 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
2023-01-09 21:09:18,586 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 21:09:18,592 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
2023-01-09 21:09:18,595 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:09:18,596 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:09:18,598 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 21:09:18,658 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:09:18,690 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.62 seconds (JVM running for 5.109)
2023-01-09 21:09:28,359 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:09:28,390 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin Rol and Coach
2023-01-09 21:09:28,511 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End Rol and Coach
2023-01-09 21:09:35,131 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin Rol and Coach
2023-01-09 21:09:35,133 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End Rol and Coach
2023-01-09 21:09:46,166 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.beans.propertyeditors.CustomBooleanEditor.setAsText(CustomBooleanEditor.java:154)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted
2023-01-09 21:09:46,744 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:09:46,744 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:10:07,105 ERROR com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-6] Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'boolean'; nested exception is java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: Invalid boolean value []
	at org.springframework.beans.propertyeditors.CustomBooleanEditor.setAsText(CustomBooleanEditor.java:154)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:429)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:402)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:729)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125)
	... 47 common frames omitted
2023-01-09 21:10:13,268 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] Begin Rol and Coach
2023-01-09 21:10:13,270 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-8] End Rol and Coach
2023-01-09 21:10:16,667 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin getUsers
2023-01-09 21:10:16,694 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End getUsers
2023-01-09 21:10:16,753 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:10:16,754 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:10:36,240 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] Begin addUsers
2023-01-09 21:10:36,272 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-10] End addUsers
2023-01-09 21:10:42,211 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] Begin getUsers
2023-01-09 21:10:42,213 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-2] End getUsers
2023-01-09 21:10:46,761 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:10:46,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:10:56,469 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] Begin Rol and Coach
2023-01-09 21:10:56,472 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-1] End Rol and Coach
2023-01-09 21:11:06,266 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin Rol and Coach
2023-01-09 21:11:06,267 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End Rol and Coach
2023-01-09 21:11:09,905 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] Begin Rol and Coach
2023-01-09 21:11:09,907 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-4] End Rol and Coach
2023-01-09 21:11:16,768 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:11:16,768 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:11:46,777 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:11:46,779 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:12:16,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:12:16,791 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:12:46,806 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:12:46,807 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:13:16,812 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:13:16,812 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:20:14,068 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:20:14,075 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 35932 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:20:14,076 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:20:14,077 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:20:15,418 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:20:15,420 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:20:15,420 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:20:15,542 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:20:15,648 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:20:16,028 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:20:16,030 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:20:16,031 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:20:16,031 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:20:16,032 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:20:16,032 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:20:16,033 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:20:16,033 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:20:16,034 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:20:16,034 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:20:16,035 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:20:16,035 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:20:16,036 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:20:16,037 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:20:16,037 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:20:16,038 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:20:16,038 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:20:16,039 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:20:16,039 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:20:16,039 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:20:16,040 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:20:16,040 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:20:16,041 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:20:16,041 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:20:16,041 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:20:16,042 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:20:16,042 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:20:16,043 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:20:16,043 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:20:16,043 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:20:16,044 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:20:16,044 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:20:16,044 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:20:16,045 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:20:16,045 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:20:16,046 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:20:16,046 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:20:16,284 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,286 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:20:16,396 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:20:16,398 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,399 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,400 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,401 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,402 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,403 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,404 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,405 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,405 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:20:16,406 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:20:17,534 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:20:17,946 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:20:17,951 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
2023-01-09 21:20:17,953 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getPlayers()
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 21:20:17,955 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 21:20:17,960 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 21:20:17,963 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:20:17,979 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:20:18,000 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:20:18,209 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 21:20:18,216 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 21:20:18,221 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
2023-01-09 21:20:18,228 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 21:20:18,232 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:20:18,233 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:20:18,234 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 21:20:18,302 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:20:18,334 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.636 seconds (JVM running for 5.094)
2023-01-09 21:20:35,827 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:20:35,854 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 21:20:36,015 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 21:20:46,403 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:20:46,403 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:20:49,371 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] Begin getUsers
2023-01-09 21:20:49,374 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-3] End getUsers
2023-01-09 21:21:00,560 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] Begin getPlayers
2023-01-09 21:21:00,562 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-4] End getPlayers
2023-01-09 21:21:11,081 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] Begin getPlayers
2023-01-09 21:21:11,084 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-5] End getPlayers
2023-01-09 21:21:16,409 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:21:16,410 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:21:18,112 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 21:21:18,114 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 21:21:46,416 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:21:46,417 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:22:06,531 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] Begin addPlayers
2023-01-09 21:22:06,577 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-7] End addPlayers
2023-01-09 21:22:16,432 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:22:16,433 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:22:23,027 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] Begin addPlayers
2023-01-09 21:22:23,031 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-8] End addPlayers
2023-01-09 21:22:36,299 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] Begin getPlayers
2023-01-09 21:22:36,305 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-9] End getPlayers
2023-01-09 21:22:46,447 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:22:46,448 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:22:47,476 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] Begin getPlayers
2023-01-09 21:22:47,480 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End getPlayers
2023-01-09 21:23:02,101 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 21:23:02,105 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 21:23:13,532 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 21:23:13,536 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 21:23:16,460 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:23:16,460 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:23:46,475 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:23:46,476 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:24:16,484 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:24:16,484 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:24:46,497 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:24:46,498 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:25:16,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:25:16,504 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:25:18,387 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 21:25:18,388 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:25:18,390 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,390 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,391 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,391 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,392 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,392 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,393 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,395 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,396 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,396 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:18,396 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:25:18,397 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 21:25:31,436 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:25:31,450 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 11836 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:25:31,451 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:25:31,452 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:25:32,843 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:25:32,844 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:25:32,845 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:25:32,970 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:25:33,098 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:25:33,493 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:25:33,496 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:25:33,496 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:25:33,497 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:25:33,497 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:25:33,498 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:25:33,499 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:25:33,499 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:25:33,500 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:25:33,500 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:25:33,501 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:25:33,501 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:25:33,502 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:25:33,503 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:25:33,503 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:25:33,504 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:25:33,505 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:25:33,506 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:25:33,506 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:25:33,507 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:25:33,507 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:25:33,507 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:25:33,508 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:25:33,508 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:25:33,509 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:25:33,509 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:25:33,510 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:25:33,510 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:25:33,510 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:25:33,511 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:25:33,511 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:25:33,512 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:25:33,512 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:25:33,512 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:25:33,513 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:25:33,513 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:25:33,513 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:25:33,762 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,764 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:25:33,866 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:25:33,867 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,869 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,870 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,872 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,873 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,875 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,876 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,877 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,878 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:25:33,879 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:25:35,094 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:25:35,531 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 21:25:35,535 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 21:25:35,537 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/players]}: getUserInPlayerAndSexAndActive(long,char,boolean)
2023-01-09 21:25:35,539 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
2023-01-09 21:25:35,543 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 21:25:35,544 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:25:35,546 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,546 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,547 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,548 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,549 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:25:35,620 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:25:35,620 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 21:25:35,622 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 21:25:35,648 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean)
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getPlayers() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 21:26:36,482 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 42824 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:26:36,542 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:26:36,542 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:26:36,595 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:26:39,372 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:26:39,378 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:26:39,387 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:26:39,633 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:26:39,913 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:26:40,862 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:26:40,866 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:26:40,867 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:26:40,868 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:26:40,871 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:26:40,873 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:26:40,876 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:26:40,879 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:26:40,883 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:26:40,884 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:26:40,886 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:26:40,887 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:26:40,888 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:26:40,889 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:26:40,889 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:26:40,890 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:26:40,891 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:26:40,892 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:26:40,893 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:26:40,894 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:26:40,895 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:26:40,895 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:26:40,896 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:26:40,897 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:26:40,898 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:26:40,898 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:26:40,899 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:26:40,899 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:26:40,900 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:26:40,900 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:26:40,900 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:26:40,901 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:26:40,901 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:26:40,901 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:26:40,902 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:26:40,902 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:26:40,902 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:26:41,151 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,153 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:26:41,267 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:26:41,269 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,271 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,272 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,273 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,275 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,277 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,278 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,279 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,280 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:26:41,281 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:26:42,438 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:26:42,867 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:26:42,871 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 21:26:42,874 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getUserInPlayerAndSexAndActive(long,char,boolean)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 21:26:42,875 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
2023-01-09 21:26:42,879 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 21:26:42,880 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:26:42,881 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,882 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,883 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,883 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,883 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,884 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,884 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,884 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,885 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:42,885 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:26:43,163 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:26:43,164 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 21:26:43,168 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 21:26:43,224 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 21:28:51,620 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:28:51,625 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 30524 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:28:51,626 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:28:51,627 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:28:52,987 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:28:52,988 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:28:52,989 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:28:53,110 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:28:53,214 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:28:53,587 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:28:53,589 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:28:53,590 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:28:53,590 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:28:53,591 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:28:53,591 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:28:53,592 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:28:53,592 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:28:53,593 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:28:53,593 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:28:53,594 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:28:53,594 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:28:53,595 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:28:53,596 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:28:53,596 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:28:53,597 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:28:53,597 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:28:53,597 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:28:53,598 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:28:53,598 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:28:53,598 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:28:53,599 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:28:53,599 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:28:53,600 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:28:53,600 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:28:53,600 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:28:53,601 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:28:53,601 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:28:53,601 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:28:53,602 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:28:53,602 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:28:53,603 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:28:53,603 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:28:53,603 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:28:53,604 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:28:53,604 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:28:53,604 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:28:53,849 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,851 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:28:53,955 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:28:53,957 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,959 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,960 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,962 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,963 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,965 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,967 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,968 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,969 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:28:53,970 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:28:55,149 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:28:55,588 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:28:55,592 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
2023-01-09 21:28:55,594 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getUserInPlayerAndSexAndActive(long,char,boolean)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
2023-01-09 21:28:55,595 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
2023-01-09 21:28:55,599 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 21:28:55,600 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:28:55,602 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,602 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,603 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,603 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,604 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,604 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,604 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,605 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,606 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,606 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:28:55,651 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:28:55,653 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 21:28:55,654 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 21:28:55,686 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(long, char, boolean) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 21:32:39,195 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:32:39,206 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 39248 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:32:39,207 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:32:39,208 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:32:40,540 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:32:40,541 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:32:40,542 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:32:40,668 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:32:40,788 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:32:41,149 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:32:41,151 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:32:41,152 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:32:41,152 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:32:41,153 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:32:41,153 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:32:41,154 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:32:41,154 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:32:41,155 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:32:41,155 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:32:41,156 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:32:41,157 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:32:41,157 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:32:41,157 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:32:41,158 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:32:41,158 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:32:41,159 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:32:41,159 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:32:41,159 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:32:41,160 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:32:41,160 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:32:41,161 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:32:41,161 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:32:41,162 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:32:41,162 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:32:41,162 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:32:41,163 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:32:41,163 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:32:41,163 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:32:41,164 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:32:41,164 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:32:41,165 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:32:41,165 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:32:41,165 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:32:41,166 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:32:41,166 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:32:41,166 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:32:41,407 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,409 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:32:41,518 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:32:41,519 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,520 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,522 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,522 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,523 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,524 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,524 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,525 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,526 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:32:41,527 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:32:42,658 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:32:43,087 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 21:32:43,090 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 21:32:43,093 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players]}: getUserInPlayerAndSexAndActive(char,boolean)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
2023-01-09 21:32:43,093 WARN org.springframework.context.support.AbstractApplicationContext [main] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(char, boolean) mapped.
2023-01-09 21:32:43,098 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown initiated...
2023-01-09 21:32:43,098 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:32:43,100 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,100 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,101 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,101 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,102 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,102 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,102 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,103 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,103 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,103 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:32:43,141 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:32:43,142 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Shutdown completed.
2023-01-09 21:32:43,147 INFO org.apache.juli.logging.DirectJDKLog [main] Stopping service [Tomcat]
2023-01-09 21:32:43,199 ERROR org.springframework.boot.SpringApplication [main] Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(char, boolean) mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:955)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295)
	at com.svalero.happDeporte.HappDeporteApplication.main(HappDeporteApplication.java:10)
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'playerController' method 
com.svalero.happDeporte.controller.PlayerController#getPlayers()
to {GET [/players]}: There is already 'playerController' bean method
com.svalero.happDeporte.controller.PlayerController#getUserInPlayerAndSexAndActive(char, boolean) mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.validateMethodMapping(AbstractHandlerMethodMapping.java:669)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:635)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:332)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:420)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.registerHandlerMethod(RequestMappingHandlerMapping.java:76)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$2(AbstractHandlerMethodMapping.java:299)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:297)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.processCandidateBean(AbstractHandlerMethodMapping.java:266)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:225)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:213)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:205)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	... 16 common frames omitted
2023-01-09 21:36:56,144 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:36:56,151 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 43408 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:36:56,152 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:36:56,154 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:36:57,582 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:36:57,583 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:36:57,584 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:36:57,708 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:36:57,817 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:36:58,208 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:36:58,210 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:36:58,211 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:36:58,211 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:36:58,212 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:36:58,212 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:36:58,212 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:36:58,213 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:36:58,213 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:36:58,214 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:36:58,215 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:36:58,215 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:36:58,216 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:36:58,216 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:36:58,217 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:36:58,217 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:36:58,218 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:36:58,218 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:36:58,219 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:36:58,219 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:36:58,220 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:36:58,220 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:36:58,221 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:36:58,221 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:36:58,222 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:36:58,222 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:36:58,223 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:36:58,223 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:36:58,223 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:36:58,224 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:36:58,224 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:36:58,225 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:36:58,225 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:36:58,225 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:36:58,226 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:36:58,226 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:36:58,226 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:36:58,469 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,471 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:36:58,578 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:36:58,580 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,581 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,583 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,584 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,585 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,586 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,587 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,589 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,590 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:36:58,591 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:36:59,858 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:37:00,331 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 21:37:00,334 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
2023-01-09 21:37:00,337 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{GET [/players/{id}]}: getPlayerId(long)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{GET [/player]}: getSexAndActive(char,boolean)
2023-01-09 21:37:00,338 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
2023-01-09 21:37:00,341 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users]}: getUsers()
2023-01-09 21:37:00,344 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:37:00,359 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:37:00,381 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:37:00,579 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
2023-01-09 21:37:00,584 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
2023-01-09 21:37:00,588 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
2023-01-09 21:37:00,594 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
2023-01-09 21:37:00,597 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:37:00,598 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:37:00,599 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{OPTIONS [/profile]}: profileOptions()
	{GET [/profile]}: listAllFormsOfMetadata()
2023-01-09 21:37:00,660 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:37:00,694 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.922 seconds (JVM running for 5.686)
2023-01-09 21:37:22,275 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:37:22,300 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 21:37:22,452 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 21:37:28,586 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:37:28,587 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:37:56,866 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 21:37:56,870 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 21:37:58,592 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:37:58,593 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:38:28,604 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:38:28,604 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:38:58,608 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:38:58,608 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:39:28,625 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:39:28,626 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:39:58,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:39:58,635 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:40:28,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:40:28,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:40:58,664 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:40:58,665 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:41:28,673 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:41:28,674 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:41:58,681 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:41:58,681 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:42:18,226 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 21:42:18,229 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 21:42:28,685 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:42:28,686 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:42:58,703 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:42:58,704 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:43:28,712 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:43:28,713 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:43:58,717 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:43:58,718 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:44:28,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:44:28,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:44:58,736 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:44:58,738 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:45:28,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:45:28,746 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:45:58,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:45:58,748 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:46:28,750 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:46:28,750 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:46:58,761 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:46:58,761 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:47:28,763 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:47:28,764 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:47:58,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:47:58,776 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:48:28,789 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:48:28,790 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:48:58,801 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:48:58,801 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:49:28,809 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:49:28,809 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:49:58,813 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:49:58,813 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:50:00,552 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 21:50:00,553 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:50:00,555 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,555 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,555 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,556 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,556 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,557 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,557 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,557 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,558 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,558 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 21:50:00,559 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 21:50:00,559 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 21:52:44,884 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 21:52:44,895 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 25940 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 21:52:44,897 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 21:52:44,898 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 21:52:46,326 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 21:52:46,327 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 21:52:46,328 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 21:52:46,466 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 21:52:46,583 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 21:52:46,956 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 21:52:46,958 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 21:52:46,958 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 21:52:46,959 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 21:52:46,959 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 21:52:46,960 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 21:52:46,960 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 21:52:46,961 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 21:52:46,961 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 21:52:46,962 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 21:52:46,963 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 21:52:46,963 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 21:52:46,964 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 21:52:46,965 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 21:52:46,965 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 21:52:46,965 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 21:52:46,966 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 21:52:46,966 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 21:52:46,967 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 21:52:46,967 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 21:52:46,967 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 21:52:46,968 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 21:52:46,968 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 21:52:46,969 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 21:52:46,970 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 21:52:46,970 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 21:52:46,971 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 21:52:46,971 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 21:52:46,971 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 21:52:46,972 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 21:52:46,972 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 21:52:46,972 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 21:52:46,973 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 21:52:46,973 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 21:52:46,973 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 21:52:46,974 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 21:52:46,974 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 21:52:47,356 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,358 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 21:52:47,468 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 21:52:47,472 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,476 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,479 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,480 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,482 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,484 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,488 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,490 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,492 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 21:52:47,493 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:52:48,690 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 21:52:49,110 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{POST [/clothes]}: addClothes(Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{GET [/clothes/{id}]}: getClothesId(long)
	{GET [/clothes]}: getClothes()
2023-01-09 21:52:49,114 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
2023-01-09 21:52:49,116 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players/{id}]}: getPlayerId(long)
	{GET [/player]}: getSexAndActive(String,String,String)
	{GET [/players]}: getPlayers()
	{DELETE [/players/{id}]}: deletePlayer(long)
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
2023-01-09 21:52:49,118 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 21:52:49,120 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{GET [/users/username/{username}]}: getUser(String)
	{GET [/user]}: getRolAndCoach(String,boolean)
2023-01-09 21:52:49,123 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 21:52:49,138 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 21:52:49,161 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 21:52:49,354 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 21:52:49,360 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
2023-01-09 21:52:49,365 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 21:52:49,370 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 21:52:49,374 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 21:52:49,375 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 21:52:49,376 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 21:52:49,437 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 21:52:49,469 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 5.032 seconds (JVM running for 7.694)
2023-01-09 21:52:56,398 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-2] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 21:52:56,442 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] Begin getPlayers
2023-01-09 21:52:56,904 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-2] End getPlayers
2023-01-09 21:53:16,390 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin addPlayers
2023-01-09 21:53:16,433 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End addPlayers
2023-01-09 21:53:17,480 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:53:17,481 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:53:47,487 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:53:47,488 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:54:17,501 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:54:17,501 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:54:47,503 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:54:47,504 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:55:17,510 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:55:17,511 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:55:47,516 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:55:47,517 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:56:16,362 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] Begin getPlayers
2023-01-09 21:56:16,365 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-6] End getPlayers
2023-01-09 21:56:17,521 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:56:17,522 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:56:47,536 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:56:47,537 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:57:17,538 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:57:17,538 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:57:47,542 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:57:47,543 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:57:48,310 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] Begin Rol and Coach
2023-01-09 21:57:48,328 DEBUG com.svalero.happDeporte.controller.UserController [http-nio-8080-exec-9] End Rol and Coach
2023-01-09 21:58:17,547 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:58:17,547 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:58:37,412 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] Begin getPlayers
2023-01-09 21:58:37,414 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-10] End getPlayers
2023-01-09 21:58:47,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:58:47,557 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:58:50,299 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 21:58:50,302 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 21:59:17,563 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:59:17,563 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 21:59:47,574 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 21:59:47,574 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:00:17,582 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:00:17,583 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:00:47,594 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:00:47,594 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:01:17,600 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:01:17,601 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:01:47,602 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:01:47,602 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:02:17,613 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:02:17,613 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:02:47,618 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:02:47,619 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:03:17,630 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:03:17,630 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:03:47,640 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:03:47,640 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:04:17,652 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:04:17,654 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:04:47,670 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:04:47,671 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:05:17,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:05:17,680 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:05:47,687 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:05:47,688 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:06:17,690 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:06:17,691 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:06:47,696 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:06:47,697 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:07:17,711 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:07:17,712 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:07:47,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:07:47,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:07:57,135 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 22:07:57,135 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:07:57,138 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,139 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,139 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,140 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,141 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,142 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,142 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,143 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,143 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,144 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:07:57,144 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 22:07:57,145 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
2023-01-09 22:08:12,361 DEBUG org.jboss.logging.LoggerProviders [background-preinit] Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2023-01-09 22:08:12,367 INFO org.springframework.boot.StartupInfoLogger [main] Starting HappDeporteApplication using Java 17.0.4.1 on Optimus10 with PID 35872 (H:\Grapo DAM\8 Acceso a datos\AP\happDeporte\target\classes started by German in H:\Grapo DAM\8 Acceso a datos\AP\happDeporte)
2023-01-09 22:08:12,368 DEBUG org.springframework.boot.StartupInfoLogger [main] Running with Spring Boot v2.7.5, Spring v5.3.23
2023-01-09 22:08:12,368 INFO org.springframework.boot.SpringApplication [main] No active profile set, falling back to 1 default profile: "default"
2023-01-09 22:08:13,725 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2023-01-09 22:08:13,726 INFO org.apache.juli.logging.DirectJDKLog [main] Starting service [Tomcat]
2023-01-09 22:08:13,726 INFO org.apache.juli.logging.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.68]
2023-01-09 22:08:13,838 INFO org.apache.juli.logging.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2023-01-09 22:08:13,952 DEBUG com.zaxxer.hikari.HikariConfig [main] Driver class org.h2.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@2a139a55
2023-01-09 22:08:14,338 DEBUG com.zaxxer.hikari.HikariConfig [main] HikariPool-1 - configuration:
2023-01-09 22:08:14,341 DEBUG com.zaxxer.hikari.HikariConfig [main] allowPoolSuspension................................false
2023-01-09 22:08:14,341 DEBUG com.zaxxer.hikari.HikariConfig [main] autoCommit................................true
2023-01-09 22:08:14,342 DEBUG com.zaxxer.hikari.HikariConfig [main] catalog................................none
2023-01-09 22:08:14,342 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionInitSql................................none
2023-01-09 22:08:14,342 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTestQuery................................none
2023-01-09 22:08:14,342 DEBUG com.zaxxer.hikari.HikariConfig [main] connectionTimeout................................30000
2023-01-09 22:08:14,343 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSource................................none
2023-01-09 22:08:14,344 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceClassName................................none
2023-01-09 22:08:14,344 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceJNDI................................none
2023-01-09 22:08:14,345 DEBUG com.zaxxer.hikari.HikariConfig [main] dataSourceProperties................................{password=<masked>}
2023-01-09 22:08:14,345 DEBUG com.zaxxer.hikari.HikariConfig [main] driverClassName................................"org.h2.Driver"
2023-01-09 22:08:14,346 DEBUG com.zaxxer.hikari.HikariConfig [main] exceptionOverrideClassName................................none
2023-01-09 22:08:14,346 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckProperties................................{}
2023-01-09 22:08:14,347 DEBUG com.zaxxer.hikari.HikariConfig [main] healthCheckRegistry................................none
2023-01-09 22:08:14,347 DEBUG com.zaxxer.hikari.HikariConfig [main] idleTimeout................................600000
2023-01-09 22:08:14,347 DEBUG com.zaxxer.hikari.HikariConfig [main] initializationFailTimeout................................1
2023-01-09 22:08:14,348 DEBUG com.zaxxer.hikari.HikariConfig [main] isolateInternalQueries................................false
2023-01-09 22:08:14,348 DEBUG com.zaxxer.hikari.HikariConfig [main] jdbcUrl................................jdbc:h2:file:H:/BBDD/happdeporte.db
2023-01-09 22:08:14,349 DEBUG com.zaxxer.hikari.HikariConfig [main] keepaliveTime................................0
2023-01-09 22:08:14,349 DEBUG com.zaxxer.hikari.HikariConfig [main] leakDetectionThreshold................................0
2023-01-09 22:08:14,350 DEBUG com.zaxxer.hikari.HikariConfig [main] maxLifetime................................1800000
2023-01-09 22:08:14,350 DEBUG com.zaxxer.hikari.HikariConfig [main] maximumPoolSize................................10
2023-01-09 22:08:14,350 DEBUG com.zaxxer.hikari.HikariConfig [main] metricRegistry................................none
2023-01-09 22:08:14,351 DEBUG com.zaxxer.hikari.HikariConfig [main] metricsTrackerFactory................................none
2023-01-09 22:08:14,351 DEBUG com.zaxxer.hikari.HikariConfig [main] minimumIdle................................10
2023-01-09 22:08:14,351 DEBUG com.zaxxer.hikari.HikariConfig [main] password................................<masked>
2023-01-09 22:08:14,352 DEBUG com.zaxxer.hikari.HikariConfig [main] poolName................................"HikariPool-1"
2023-01-09 22:08:14,352 DEBUG com.zaxxer.hikari.HikariConfig [main] readOnly................................false
2023-01-09 22:08:14,353 DEBUG com.zaxxer.hikari.HikariConfig [main] registerMbeans................................false
2023-01-09 22:08:14,353 DEBUG com.zaxxer.hikari.HikariConfig [main] scheduledExecutor................................none
2023-01-09 22:08:14,353 DEBUG com.zaxxer.hikari.HikariConfig [main] schema................................none
2023-01-09 22:08:14,354 DEBUG com.zaxxer.hikari.HikariConfig [main] threadFactory................................internal
2023-01-09 22:08:14,354 DEBUG com.zaxxer.hikari.HikariConfig [main] transactionIsolation................................default
2023-01-09 22:08:14,355 DEBUG com.zaxxer.hikari.HikariConfig [main] username................................"sa"
2023-01-09 22:08:14,355 DEBUG com.zaxxer.hikari.HikariConfig [main] validationTimeout................................5000
2023-01-09 22:08:14,355 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Starting...
2023-01-09 22:08:14,585 DEBUG com.zaxxer.hikari.pool.HikariPool [main] HikariPool-1 - Added connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,587 INFO com.zaxxer.hikari.HikariDataSource [main] HikariPool-1 - Start completed.
2023-01-09 22:08:14,698 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2023-01-09 22:08:14,699 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,701 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,701 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,702 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,703 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,704 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,705 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,706 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,706 DEBUG com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator [HikariPool-1 connection adder] HikariPool-1 - Added connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA
2023-01-09 22:08:14,707 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 connection adder] HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:08:15,820 WARN org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration [main] spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-01-09 22:08:16,242 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.ClothesController:
	{DELETE [/clothes/{id}]}: deleteById(long)
	{PUT [/clothes/{id}]}: modifyClothes(long,Clothes)
	{POST [/players/{playerId}/clothes]}: addClothes(long,Clothes)
	{POST [/clothes]}: addClothes(Clothes)
	{GET [/clothes]}: getClothes()
	{GET [/clothes/{id}]}: getClothesId(long)
2023-01-09 22:08:16,246 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.MatchController:
	{GET [/matches]}: findAll()
	{GET [/matches/{id}]}: findById(long)
	{POST [/teams/{teamId}/matches]}: addMatch(long,Match)
	{DELETE [/matches/{id}]}: deleteMatch(long)
	{PUT [/matches/{id}]}: modifyMatch(long,Match)
2023-01-09 22:08:16,248 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.PlayerController:
	{GET [/players/{id}]}: getPlayerId(long)
	{POST [/users/{userId}/players]}: addPlayer(long,Player)
	{GET [/players]}: getPlayers()
	{PUT [/players/{id}]}: modifyPlayer(long,Player)
	{DELETE [/players/{id}]}: deletePlayer(long)
	{GET [/player]}: getSexAndActive(String,boolean)
2023-01-09 22:08:16,251 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.TeamController:
	{GET [/teams]}: findAll()
	{GET [/teams/{id}]}: findById(long)
	{DELETE [/teams/{id}]}: deleteTeam(long)
	{POST [/users/{userId}/teams]}: addTeam(long,Team)
	{PUT [/teams/{id}]}: modifyTeam(long,Team)
2023-01-09 22:08:16,254 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	c.s.h.c.UserController:
	{POST [/users]}: addUser(User)
	{GET [/users]}: getUsers()
	{DELETE [/users/{id}]}: deleteUser(long)
	{PUT [/users/{id}]}: modifyUser(long,User)
	{GET [/users/{id}]}: getUserId(long)
	{GET [/user]}: getRolAndCoach(String,boolean)
	{GET [/users/username/{username}]}: getUser(String)
2023-01-09 22:08:16,258 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.b.a.w.s.e.BasicErrorController:
	{ [/error]}: error(HttpServletRequest)
	{ [/error], produces [text/html]}: errorHtml(HttpServletRequest,HttpServletResponse)
2023-01-09 22:08:16,275 DEBUG org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping [main] 'beanNameHandlerMapping' {}
2023-01-09 22:08:16,299 DEBUG org.springframework.web.servlet.handler.SimpleUrlHandlerMapping [main] 'resourceHandlerMapping' {/webjars/**=ResourceHttpRequestHandler [classpath [META-INF/resources/webjars/]], /**=ResourceHttpRequestHandler [classpath [META-INF/resources/], classpath [resources/], classpath [static/], classpath [public/], ServletContext [/]]}
2023-01-09 22:08:16,501 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryController:
	{HEAD [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForRepositories()
	{OPTIONS [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForRepositories()
	{GET [/ || ], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listRepositories()
2023-01-09 22:08:16,506 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryEntityController:
	{OPTIONS [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForCollectionResource(RootResourceInformation)
	{POST [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: postCollectionResource(RootResourceInformation,PersistentEntityResource,PersistentEntityResourceAssembler,String)
	{HEAD [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headCollectionResource(RootResourceInformation,DefaultedPageable)
	{GET [/{repository}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getCollectionResource(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{GET [/{repository}], produces [application/x-spring-data-compact+json || text/uri-list]}: getCollectionResourceCompact(RootResourceInformation,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForItemResource(RootResourceInformation)
	{HEAD [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: getItemResource(RootResourceInformation,Serializable,PersistentEntityResourceAssembler,HttpHeaders)
	{PATCH [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: patchItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
	{DELETE [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deleteItemResource(RootResourceInformation,Serializable,ETag)
	{PUT [/{repository}/{id}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: putItemResource(RootResourceInformation,PersistentEntityResource,Serializable,PersistentEntityResourceAssembler,ETag,String)
2023-01-09 22:08:16,510 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositoryPropertyReferenceController:
	{GET [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,PersistentEntityResourceAssembler)
	{GET [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: followPropertyReference(RootResourceInformation,Serializable,String,String,PersistentEntityResourceAssembler)
	{DELETE [/{repository}/{id}/{property}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReference(RootResourceInformation,Serializable,String)
	{GET [/{repository}/{id}/{property}], produces [text/uri-list]}: followPropertyReferenceCompact(RootResourceInformation,Serializable,String,HttpHeaders,PersistentEntityResourceAssembler)
	{[PATCH, PUT, POST] [/{repository}/{id}/{property}], consumes [application/json || application/x-spring-data-compact+json || text/uri-list], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: createPropertyReference(RootResourceInformation,HttpMethod,CollectionModel,Serializable,String)
	{DELETE [/{repository}/{id}/{property}/{propertyId}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: deletePropertyReferenceId(RootResourceInformation,Serializable,String,String)
2023-01-09 22:08:16,515 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySearchController:
	{GET [/{repository}/search/{search}], produces [application/x-spring-data-compact+json]}: executeSearchCompact(RootResourceInformation,HttpHeaders,MultiValueMap,String,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler)
	{OPTIONS [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearches(RootResourceInformation)
	{HEAD [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearches(RootResourceInformation)
	{OPTIONS [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: optionsForSearch(RootResourceInformation,String)
	{GET [/{repository}/search], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: listSearches(RootResourceInformation)
	{GET [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: executeSearch(RootResourceInformation,MultiValueMap,String,DefaultedPageable,Sort,PersistentEntityResourceAssembler,HttpHeaders)
	{HEAD [/{repository}/search/{search}], produces [application/hal+json || application/json || application/prs.hal-forms+json]}: headForSearch(RootResourceInformation,String)
2023-01-09 22:08:16,518 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.RepositorySchemaController:
	{GET [/profile/{repository}], produces [application/schema+json]}: schema(RootResourceInformation)
2023-01-09 22:08:16,519 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.a.AlpsController:
	{GET [/profile/{repository}], produces [application/alps+json || */*]}: descriptor(RootResourceInformation)
	{OPTIONS [/profile/{repository}], produces [application/alps+json]}: alpsOptions()
2023-01-09 22:08:16,520 DEBUG org.springframework.web.servlet.handler.AbstractHandlerMethodMapping [main] 
	o.s.d.r.w.ProfileController:
	{GET [/profile]}: listAllFormsOfMetadata()
	{OPTIONS [/profile]}: profileOptions()
2023-01-09 22:08:16,583 INFO org.apache.juli.logging.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2023-01-09 22:08:16,618 INFO org.springframework.boot.StartupInfoLogger [main] Started HappDeporteApplication in 4.598 seconds (JVM running for 5.064)
2023-01-09 22:08:39,715 INFO org.apache.juli.logging.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-01-09 22:08:39,757 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] Begin getPlayers
2023-01-09 22:08:40,070 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-1] End getPlayers
2023-01-09 22:08:44,713 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:08:44,714 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:09:03,987 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] Begin getPlayers
2023-01-09 22:09:03,991 DEBUG com.svalero.happDeporte.controller.PlayerController [http-nio-8080-exec-3] End getPlayers
2023-01-09 22:09:14,723 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:09:14,724 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:09:33,792 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] Begin addClothes
2023-01-09 22:09:33,845 DEBUG com.svalero.happDeporte.controller.ClothesController [http-nio-8080-exec-4] End addClothes
2023-01-09 22:09:44,726 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:09:44,727 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:10:14,741 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:10:14,742 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:10:44,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:10:44,747 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:11:14,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:11:14,762 DEBUG com.zaxxer.hikari.pool.HikariPool [HikariPool-1 housekeeper] HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2023-01-09 22:11:33,848 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown initiated...
2023-01-09 22:11:33,848 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
2023-01-09 22:11:33,850 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn0: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,850 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn1: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,851 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn2: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,852 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn3: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,852 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn4: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,853 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn5: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,853 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn6: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,854 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn7: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,854 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn8: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,854 DEBUG com.zaxxer.hikari.pool.PoolBase [HikariPool-1 connection closer] HikariPool-1 - Closing connection conn9: url=jdbc:h2:file:H:/BBDD/happdeporte.db user=SA: (connection evicted)
2023-01-09 22:11:33,855 DEBUG com.zaxxer.hikari.pool.HikariPool [SpringApplicationShutdownHook] HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
2023-01-09 22:11:33,856 INFO com.zaxxer.hikari.HikariDataSource [SpringApplicationShutdownHook] HikariPool-1 - Shutdown completed.
